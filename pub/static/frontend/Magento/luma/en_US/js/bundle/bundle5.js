require.config({"config": {
        "jsbuild":{"PayPal_Braintree/js/view/payment/method-renderer/lpm.js":"define(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'ko',\n        'jquery',\n        'braintree',\n        'braintreeLpm',\n        'PayPal_Braintree/js/form-builder',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/action/select-billing-address',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'mage/url',\n        'mage/translate'\n    ],\n    function (\n        Component,\n        ko,\n        $,\n        braintree,\n        lpm,\n        formBuilder,\n        messageList,\n        selectBillingAddress,\n        fullScreenLoader,\n        quote,\n        additionalValidators,\n        url,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                code: 'braintree_local_payment',\n                paymentMethodsAvailable: ko.observable(false),\n                paymentMethodNonce: null,\n                template: 'PayPal_Braintree/payment/lpm'\n            },\n\n            clickPaymentBtn: function (method) {\n                var self = this;\n\n                if (additionalValidators.validate()) {\n                    fullScreenLoader.startLoader();\n\n                    braintree.create({\n                        authorization: self.getClientToken()\n                    }, function (clientError, clientInstance) {\n                        if (clientError) {\n                            self.setErrorMsg($t('Unable to initialize Braintree Client.'));\n                            fullScreenLoader.stopLoader();\n                            return;\n                        }\n\n                        lpm.create({\n                            client: clientInstance,\n                            merchantAccountId: self.getMerchantAccountId()\n                        }, function (lpmError, lpmInstance) {\n                            if (lpmError) {\n                                self.setErrorMsg(lpmError);\n                                fullScreenLoader.stopLoader();\n                                return;\n                            }\n\n                            lpmInstance.startPayment({\n                                amount: self.getAmount(),\n                                currencyCode: self.getCurrencyCode(),\n                                email: self.getCustomerDetails().email,\n                                phone: self.getCustomerDetails().phone,\n                                givenName: self.getCustomerDetails().firstName,\n                                surname: self.getCustomerDetails().lastName,\n                                shippingAddressRequired: !quote.isVirtual(),\n                                address: self.getAddress(),\n                                paymentType: method,\n                                onPaymentStart: function (data, start) {\n                                    start();\n                                },\n                                // This is a required option, however it will apparently never be used in the current payment flow.\n                                // Therefore, both values are set to allow the payment flow to continute, rather than erroring out.\n                                fallback: {\n                                    url: 'N/A',\n                                    buttonText: 'N/A'\n                                }\n                            }, function (startPaymentError, payload) {\n                                fullScreenLoader.stopLoader();\n                                if (startPaymentError) {\n                                    switch (startPaymentError.code) {\n                                        case 'LOCAL_PAYMENT_POPUP_CLOSED':\n                                            self.setErrorMsg($t('Local Payment popup was closed unexpectedly.'));\n                                            break;\n                                        case 'LOCAL_PAYMENT_WINDOW_OPEN_FAILED':\n                                            self.setErrorMsg($t('Local Payment popup failed to open.'));\n                                            break;\n                                        case 'LOCAL_PAYMENT_WINDOW_CLOSED':\n                                            self.setErrorMsg($t('Local Payment popup was closed. Payment cancelled.'));\n                                            break;\n                                        default:\n                                            self.setErrorMsg('Error! ' + startPaymentError);\n                                            break;\n                                    }\n                                } else {\n                                    // Send the nonce to your server to create a transaction\n                                    self.setPaymentMethodNonce(payload.nonce);\n                                    self.placeOrder();\n                                }\n                            });\n                        });\n                    });\n                }\n            },\n\n            getAddress: function () {\n                var shippingAddress = quote.shippingAddress();\n\n                if (quote.isVirtual()) {\n                    return {\n                        countryCode: shippingAddress.countryId\n                    }\n                }\n\n                return {\n                    streetAddress: shippingAddress.street[0],\n                    extendedAddress: shippingAddress.street[1],\n                    locality: shippingAddress.city,\n                    postalCode: shippingAddress.postcode,\n                    region: shippingAddress.region,\n                    countryCode: shippingAddress.countryId\n                }\n            },\n\n            getAmount: function () {\n                return quote.totals()['base_grand_total'].toString();\n            },\n\n            getBillingAddress: function () {\n                return quote.billingAddress();\n            },\n\n            getClientToken: function () {\n                return window.checkoutConfig.payment[this.getCode()].clientToken;\n            },\n\n            getCode: function () {\n                return this.code;\n            },\n\n            getCurrencyCode: function () {\n                return quote.totals()['base_currency_code'];\n            },\n\n            getCustomerDetails: function () {\n                var billingAddress = quote.billingAddress();\n                return {\n                    firstName: billingAddress.firstname,\n                    lastName: billingAddress.lastname,\n                    phone: billingAddress.telephone,\n                    email: typeof quote.guestEmail === 'string' ? quote.guestEmail : window.checkoutConfig.customerData.email\n                }\n            },\n\n            getData: function () {\n                let data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            getMerchantAccountId: function () {\n                return window.checkoutConfig.payment[this.getCode()].merchantAccountId;\n            },\n\n            getPaymentMethod: function (method) {\n                var methods = this.getPaymentMethods();\n\n                for (var i = 0; i < methods.length; i++) {\n                    if (methods[i].method === method) {\n                        return methods[i]\n                    }\n                }\n            },\n\n            getPaymentMethods: function () {\n                return window.checkoutConfig.payment[this.getCode()].allowedMethods;\n            },\n\n            getPaymentMarkSrc: function () {\n                return window.checkoutConfig.payment[this.getCode()].paymentIcons;\n            },\n\n            getTitle: function () {\n                return window.checkoutConfig.payment[this.getCode()].title;\n            },\n\n            initialize: function () {\n                this._super();\n                return this;\n            },\n\n            isActive: function () {\n                var address = quote.billingAddress() || quote.shippingAddress();\n                var methods = this.getPaymentMethods();\n\n                for (var i = 0; i < methods.length; i++) {\n                    if (methods[i].countries.includes(address.countryId)) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n\n            isValidCountryAndCurrency: function (method) {\n                var address = quote.billingAddress();\n\n                if (!address) {\n                    this.paymentMethodsAvailable(false);\n                    return false;\n                }\n\n                var countryId = address.countryId;\n                var quoteCurrency = quote.totals()['base_currency_code'];\n                var paymentMethodDetails = this.getPaymentMethod(method);\n\n                if ((countryId !== 'GB' && paymentMethodDetails.countries.includes(countryId) && (quoteCurrency === 'EUR' || quoteCurrency === 'PLN')) || (countryId === 'GB' && paymentMethodDetails.countries.includes(countryId) && quoteCurrency === 'GBP')) {\n                    this.paymentMethodsAvailable(true);\n                    return true;\n                }\n\n                return false;\n            },\n\n            setErrorMsg: function (message) {\n                messageList.addErrorMessage({\n                    message: message\n                });\n            },\n\n            setPaymentMethodNonce: function (nonce) {\n                this.paymentMethodNonce = nonce;\n            },\n\n            validateForm: function (form) {\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/paypal-vault.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, _, VaultComponent, globalMessageList, fullScreenLoader) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/paypal/vault',\n            additionalData: {}\n        },\n\n        /**\n         * Get PayPal payer email\n         * @returns {String}\n         */\n        getPayerEmail: function () {\n            return this.details.payerEmail;\n        },\n\n        /**\n         * Get type of payment\n         * @returns {String}\n         */\n        getPaymentIcon: function () {\n            return window.checkoutConfig.payment['braintree_paypal'].paymentIcon;\n        },\n\n        /**\n         * Place order\n         */\n        beforePlaceOrder: function () {\n            this.getPaymentMethodNonce();\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            var self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash\n            })\n                .done(function (response) {\n                    fullScreenLoader.stopLoader();\n                    self.additionalData['payment_method_nonce'] = response.paymentMethodNonce;\n                    self.placeOrder();\n                })\n                .fail(function (response) {\n                    var error = JSON.parse(response.responseText);\n\n                    fullScreenLoader.stopLoader();\n                    globalMessageList.addErrorMessage({\n                        message: error.message\n                    });\n                });\n        },\n\n        /**\n         * Get payment method data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.code,\n                'additional_data': {\n                    'public_hash': this.publicHash\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            return data;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/paypal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Checkout/js/view/payment/default',\n    'braintree',\n    'braintreeCheckoutPayPalAdapter',\n    'braintreePayPalCheckout',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/step-navigator',\n    'Magento_Vault/js/view/payment/vault-enabler',\n    'Magento_Checkout/js/action/create-billing-address',\n    'Magento_Checkout/js/action/select-billing-address',\n    'Magento_CheckoutAgreements/js/view/checkout-agreements',\n    'mage/translate'\n], function (\n    $,\n    _,\n    Component,\n    braintree,\n    Braintree,\n    paypalCheckout,\n    quote,\n    fullScreenLoader,\n    additionalValidators,\n    stepNavigator,\n    VaultEnabler,\n    createBillingAddress,\n    selectBillingAddress,\n    checkoutAgreements,\n    $t\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/paypal',\n            code: 'braintree_paypal',\n            active: false,\n            paypalInstance: null,\n            paymentMethodNonce: null,\n            grandTotalAmount: null,\n            isReviewRequired: false,\n            customerEmail: null,\n\n            /**\n             * Additional payment data\n             *\n             * {Object}\n             */\n            additionalData: {},\n\n            /**\n             * {Array}\n             */\n            lineItemsArray: [\n                'name',\n                'kind',\n                'quantity',\n                'unitAmount',\n                'unitTaxAmount',\n                'productCode',\n                'description'\n            ],\n\n            /**\n             * PayPal client configuration\n             * {Object}\n             */\n            clientConfig: {\n                offerCredit: false,\n                offerCreditOnly: false,\n                dataCollector: {\n                    paypal: true\n                },\n\n                buttonPayPalId: 'braintree_paypal_placeholder',\n                buttonCreditId: 'braintree_paypal_credit_placeholder',\n                buttonPaylaterId: 'braintree_paypal_paylater_placeholder',\n\n                onDeviceDataReceived: function (deviceData) {\n                    this.additionalData['device_data'] = deviceData;\n                },\n\n                /**\n                 * Triggers when widget is loaded\n                 * @param {Object} context\n                 */\n                onReady: function (context) {\n                    this.setupPayPal();\n                },\n\n                /**\n                 * Triggers on payment nonce receive\n                 * @param {Object} response\n                 */\n                onPaymentMethodReceived: function (response) {\n                    this.beforePlaceOrder(response);\n                }\n            },\n            imports: {\n                onActiveChange: 'active'\n            }\n        },\n\n        /**\n         * Set list of observable attributes\n         * @returns {exports.initObservable}\n         */\n        initObservable: function () {\n            var self = this;\n\n            this._super()\n                .observe(['active', 'isReviewRequired', 'customerEmail']);\n\n            window.addEventListener('hashchange', function (e) {\n                var methodCode = quote.paymentMethod();\n\n                if (methodCode === 'braintree_paypal' || methodCode === 'braintree_paypal_vault') {\n                    if (e.newURL.indexOf('payment') > 0 && self.grandTotalAmount !== null) {\n                        self.reInitPayPal();\n                    }\n                }\n            });\n\n            quote.paymentMethod.subscribe(function (value) {\n                var methodCode = value;\n\n                if (methodCode === 'braintree_paypal' || methodCode === 'braintree_paypal_vault') {\n                    self.reInitPayPal();\n                }\n            });\n\n            this.vaultEnabler = new VaultEnabler();\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\n            this.vaultEnabler.isActivePaymentTokenEnabler.subscribe(function () {\n                self.onVaultPaymentTokenEnablerChange();\n            });\n\n            this.grandTotalAmount = quote.totals()['base_grand_total'];\n\n            quote.totals.subscribe(function () {\n                if (self.grandTotalAmount !== quote.totals()['base_grand_total']) {\n                    self.grandTotalAmount = quote.totals()['base_grand_total'];\n                    var methodCode = quote.paymentMethod();\n\n                    if (methodCode && (methodCode.method === 'braintree_paypal' || methodCode.method === 'braintree_paypal_vault')) {\n                        self.reInitPayPal();\n                    }\n                }\n            });\n\n            // for each component initialization need update property\n            this.isReviewRequired(false);\n            this.initClientConfig();\n\n            return this;\n        },\n\n        /**\n         * Get payment name\n         *\n         * @returns {String}\n         */\n        getCode: function () {\n            return this.code;\n        },\n\n        /**\n         * Get payment title\n         *\n         * @returns {String}\n         */\n        getTitle: function () {\n            return window.checkoutConfig.payment[this.getCode()].title;\n        },\n\n        /**\n         * Check if payment is active\n         *\n         * @returns {Boolean}\n         */\n        isActive: function () {\n            var active = this.getCode() === this.isChecked();\n\n            this.active(active);\n\n            return active;\n        },\n\n        /**\n         * Triggers when payment method change\n         * @param {Boolean} isActive\n         */\n        onActiveChange: function (isActive) {\n            if (!isActive) {\n                return;\n            }\n\n            // need always re-init Braintree with PayPal configuration\n            this.reInitPayPal();\n        },\n\n        /**\n         * Init config\n         */\n        initClientConfig: function () {\n            this.clientConfig = _.extend(this.clientConfig, this.getPayPalConfig());\n\n            _.each(this.clientConfig, function (fn, name) {\n                if (typeof fn === 'function') {\n                    this.clientConfig[name] = fn.bind(this);\n                }\n            }, this);\n        },\n\n        /**\n         * Set payment nonce\n         * @param {String} paymentMethodNonce\n         */\n        setPaymentMethodNonce: function (paymentMethodNonce) {\n            this.paymentMethodNonce = paymentMethodNonce;\n        },\n\n        /**\n         * Update quote billing address\n         * @param {Object}customer\n         * @param {Object}address\n         */\n        setBillingAddress: function (customer, address) {\n            var billingAddress = {\n                street: [address.line1],\n                city: address.city,\n                postcode: address.postalCode,\n                countryId: address.countryCode,\n                email: customer.email,\n                firstname: customer.firstName,\n                lastname: customer.lastName,\n                telephone: typeof customer.phone !== 'undefined' ? customer.phone : '00000000000'\n            };\n\n            billingAddress['region_code'] = typeof address.state === 'string' ? address.state : '';\n            billingAddress = createBillingAddress(billingAddress);\n            quote.billingAddress(billingAddress);\n        },\n\n        /**\n         * Prepare data to place order\n         * @param {Object} data\n         */\n        beforePlaceOrder: function (data) {\n            this.setPaymentMethodNonce(data.nonce);\n            this.customerEmail(data.details.email);\n            if (quote.isVirtual()) {\n                this.isReviewRequired(true);\n            } else {\n                if (this.isRequiredBillingAddress() === '1' || quote.billingAddress() === null) {\n                    if (typeof data.details.billingAddress !== 'undefined') {\n                        this.setBillingAddress(data.details, data.details.billingAddress);\n                    } else {\n                        this.setBillingAddress(data.details, data.details.shippingAddress);\n                    }\n                } else {\n                    if (quote.shippingAddress() === quote.billingAddress()) {\n                        selectBillingAddress(quote.shippingAddress());\n                    } else {\n                        selectBillingAddress(quote.billingAddress());\n                    }\n                }\n            }\n            this.placeOrder();\n        },\n\n        /**\n         * Re-init PayPal Auth Flow\n         */\n        reInitPayPal: function () {\n            this.disableButton();\n            this.clientConfig.paypal.amount = parseFloat(this.grandTotalAmount).toFixed(2);\n\n            if (!quote.isVirtual()) {\n                this.clientConfig.paypal.enableShippingAddress = true;\n                this.clientConfig.paypal.shippingAddressEditable = false;\n                this.clientConfig.paypal.shippingAddressOverride = this.getShippingAddress();\n            }\n            // Send Line Items\n            this.clientConfig.paypal.lineItems = this.getLineItems();\n\n            Braintree.setConfig(this.clientConfig);\n\n            if (Braintree.getPayPalInstance()) {\n                Braintree.getPayPalInstance().teardown(function () {\n                    Braintree.setup();\n                }.bind(this));\n                Braintree.setPayPalInstance(null);\n            } else {\n                Braintree.setup();\n                this.enableButton();\n            }\n        },\n\n        /**\n         * Setup PayPal instance\n         */\n        setupPayPal: function () {\n            var self = this;\n\n            if (Braintree.config.paypalInstance) {\n                fullScreenLoader.stopLoader(true);\n                return;\n            }\n\n            paypalCheckout.create({\n                client: Braintree.clientInstance\n            }, function (createErr, paypalCheckoutInstance) {\n                if (createErr) {\n                    Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    console.error('paypalCheckout error', createErr);\n                    return;\n                }\n                let quoteObj = quote.totals();\n\n                var configSDK = {\n                    components: 'buttons,messages,funding-eligibility',\n                    \"enable-funding\": \"paylater\",\n                    currency: quoteObj['base_currency_code']\n                };\n                var merchantCountry = window.checkoutConfig.payment['braintree_paypal'].merchantCountry;\n                if (Braintree.getEnvironment() == 'sandbox' && merchantCountry != null) {\n                    configSDK[\"buyer-country\"] = merchantCountry;\n                }\n                paypalCheckoutInstance.loadPayPalSDK(configSDK, function () {\n                    this.loadPayPalButton(paypalCheckoutInstance, 'paypal');\n                    if (this.isCreditEnabled()) {\n                        this.loadPayPalButton(paypalCheckoutInstance, 'credit');\n                    }\n                    if (this.isPaylaterEnabled()) {\n                        this.loadPayPalButton(paypalCheckoutInstance, 'paylater');\n                    }\n\n                }.bind(this));\n            }.bind(this));\n        },\n\n        loadPayPalButton: function (paypalCheckoutInstance, funding) {\n            var paypalPayment = Braintree.config.paypal,\n                onPaymentMethodReceived = Braintree.config.onPaymentMethodReceived;\n            var style = {\n                color: Braintree.getColor(funding),\n                shape: Braintree.getShape(funding),\n                size: Braintree.getSize(funding),\n                label: Braintree.getLabel(funding)\n            };\n\n            if (Braintree.getBranding()) {\n                style.branding = Braintree.getBranding();\n            }\n            if (Braintree.getFundingIcons()) {\n                style.fundingicons = Braintree.getFundingIcons();\n            }\n\n            if (funding === 'credit') {\n                Braintree.config.buttonId = this.clientConfig.buttonCreditId;\n            } else if (funding === 'paylater') {\n                Braintree.config.buttonId = this.clientConfig.buttonPaylaterId;\n            } else {\n                Braintree.config.buttonId = this.clientConfig.buttonPayPalId;\n            }\n            // Render\n            Braintree.config.paypalInstance = paypalCheckoutInstance;\n            var events = Braintree.events;\n            $('#' + Braintree.config.buttonId).html('');\n\n            var button = paypal.Buttons({\n                fundingSource: funding,\n                env: Braintree.getEnvironment(),\n                style: style,\n                commit: true,\n                locale: Braintree.config.paypal.locale,\n\n                onInit: function (data, actions) {\n                    var agreements = checkoutAgreements().agreements,\n                        shouldDisableActions = false;\n\n                    actions.disable();\n\n                    _.each(agreements, function (item, index) {\n                        if (checkoutAgreements().isAgreementRequired(item)) {\n                            var paymentMethodCode = quote.paymentMethod().method,\n                                inputId = '#agreement_' + paymentMethodCode + '_' + item.agreementId,\n                                inputEl = document.querySelector(inputId);\n\n\n                            if (!inputEl.checked) {\n                                shouldDisableActions = true;\n                            }\n\n                            inputEl.addEventListener('change', function (event) {\n                                if (additionalValidators.validate()) {\n                                    actions.enable();\n                                } else {\n                                    actions.disable();\n                                }\n                            });\n                        }\n                    });\n\n                    if (!shouldDisableActions) {\n                        actions.enable();\n                    }\n                },\n\n                createOrder: function () {\n                    return paypalCheckoutInstance.createPayment(paypalPayment).catch(function (err) {\n                        throw err.details.originalError.details.originalError.paymentResource;\n                    });\n                },\n\n                onCancel: function (data) {\n                    console.log('checkout.js payment cancelled', JSON.stringify(data, 0, 2));\n\n                    if (typeof events.onCancel === 'function') {\n                        events.onCancel();\n                    }\n                },\n\n                onError: function (err) {\n                    if (err.errorName === 'VALIDATION_ERROR' && err.errorMessage.indexOf('Value is invalid') !== -1) {\n                        Braintree.showError($t('Address failed validation. Please check and confirm your City, State, and Postal Code'));\n                    } else {\n                        Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    }\n                    Braintree.config.paypalInstance = null;\n                    console.error('Paypal checkout.js error', err);\n\n                    if (typeof events.onError === 'function') {\n                        events.onError(err);\n                    }\n                }.bind(this),\n\n                onClick: function (data) {\n                    if (!quote.isVirtual()) {\n                        this.clientConfig.paypal.enableShippingAddress = true;\n                        this.clientConfig.paypal.shippingAddressEditable = false;\n                        this.clientConfig.paypal.shippingAddressOverride = this.getShippingAddress();\n                    }\n\n                    // To check term & conditions input checked - validate additional validators.\n                    if (!additionalValidators.validate()) {\n                        return false;\n                    }\n\n                    if (typeof events.onClick === 'function') {\n                        events.onClick(data);\n                    }\n                }.bind(this),\n\n                onApprove: function (data, actions) {\n                    return paypalCheckoutInstance.tokenizePayment(data)\n                        .then(function (payload) {\n                            onPaymentMethodReceived(payload);\n                        });\n                }\n\n            });\n            if (button.isEligible() && $('#' + Braintree.config.buttonId).length) {\n                button.render('#' + Braintree.config.buttonId).then(function () {\n                    Braintree.enableButton();\n                    if (typeof Braintree.config.onPaymentMethodError === 'function') {\n                        Braintree.config.onPaymentMethodError();\n                    }\n                }.bind(this)).then(function (data) {\n                    if (typeof events.onRender === 'function') {\n                        events.onRender(data);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Get locale\n         * @returns {String}\n         */\n        getLocale: function () {\n            return window.checkoutConfig.payment[this.getCode()].locale;\n        },\n\n        /**\n         * Is Billing Address required from PayPal side\n         * @returns {exports.isRequiredBillingAddress|(function())|boolean}\n         */\n        isRequiredBillingAddress: function () {\n            return window.checkoutConfig.payment[this.getCode()].isRequiredBillingAddress;\n        },\n\n        /**\n         * Get configuration for PayPal\n         * @returns {Object}\n         */\n        getPayPalConfig: function () {\n            var totals = quote.totals(),\n                config = {},\n                isActiveVaultEnabler = this.isActiveVault();\n\n            config.paypal = {\n                flow: 'checkout',\n                amount: parseFloat(this.grandTotalAmount).toFixed(2),\n                currency: totals['base_currency_code'],\n                locale: this.getLocale(),\n\n                /**\n                 * Triggers on any Braintree error\n                 */\n                onError: function () {\n                    this.paymentMethodNonce = null;\n                },\n\n                /**\n                 * Triggers if browser doesn't support PayPal Checkout\n                 */\n                onUnsupported: function () {\n                    this.paymentMethodNonce = null;\n                }\n            };\n\n            if (isActiveVaultEnabler) {\n                config.paypal.requestBillingAgreement = true;\n            }\n\n            if (!quote.isVirtual()) {\n                config.paypal.enableShippingAddress = true;\n                config.paypal.shippingAddressEditable = false;\n                config.paypal.shippingAddressOverride = this.getShippingAddress();\n            }\n\n            if (this.getMerchantName()) {\n                config.paypal.displayName = this.getMerchantName();\n            }\n\n            return config;\n        },\n\n        /**\n         * Get shipping address\n         * @returns {Object}\n         */\n        getShippingAddress: function () {\n            var address = quote.shippingAddress();\n\n            return {\n                recipientName: address.firstname + ' ' + address.lastname,\n                line1: address.street[0],\n                line2: typeof address.street[2] === 'undefined' ? address.street[1] : address.street[1] + ' ' + address.street[2],\n                city: address.city,\n                countryCode: address.countryId,\n                postalCode: address.postcode,\n                state: address.regionCode\n            };\n        },\n\n        /**\n         * Get merchant name\n         * @returns {String}\n         */\n        getMerchantName: function () {\n            return window.checkoutConfig.payment[this.getCode()].merchantName;\n        },\n\n        /**\n         * Get data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.getCode(),\n                'additional_data': {\n                    'payment_method_nonce': this.paymentMethodNonce\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            this.vaultEnabler.visitAdditionalData(data);\n\n            return data;\n        },\n\n        /**\n         * Returns payment acceptance mark image path\n         * @returns {String}\n         */\n        getPaymentAcceptanceMarkSrc: function () {\n            return window.checkoutConfig.payment[this.getCode()].paymentAcceptanceMarkSrc;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getVaultCode: function () {\n            return window.checkoutConfig.payment[this.getCode()].vaultCode;\n        },\n\n        /**\n         * Check if need to skip order review\n         * @returns {Boolean}\n         */\n        isSkipOrderReview: function () {\n            return window.checkoutConfig.payment[this.getCode()].skipOrderReview;\n        },\n\n        /**\n         * Checks if vault is active\n         * @returns {Boolean}\n         */\n        isActiveVault: function () {\n            return this.vaultEnabler.isVaultEnabled() && this.vaultEnabler.isActivePaymentTokenEnabler();\n        },\n\n        /**\n         * Re-init PayPal Auth flow to use Vault\n         */\n        onVaultPaymentTokenEnablerChange: function () {\n            this.clientConfig.paypal.singleUse = !this.isActiveVault();\n            this.reInitPayPal();\n        },\n\n        /**\n         * Disable submit button\n         */\n        disableButton: function () {\n            // stop any previous shown loaders\n            fullScreenLoader.stopLoader(true);\n            fullScreenLoader.startLoader();\n            $('[data-button=\"place\"]').attr('disabled', 'disabled');\n        },\n\n        /**\n         * Enable submit button\n         */\n        enableButton: function () {\n            $('[data-button=\"place\"]').removeAttr('disabled');\n            fullScreenLoader.stopLoader(true);\n        },\n\n        /**\n         * Triggers when customer click \"Continue to PayPal\" button\n         */\n        payWithPayPal: function () {\n            if (additionalValidators.validate()) {\n                Braintree.checkout.paypal.initAuthFlow();\n            }\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getPayPalButtonId: function () {\n            return this.clientConfig.buttonPayPalId;\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getCreditButtonId: function () {\n            return this.clientConfig.buttonCreditId;\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getPaylaterButtonId: function () {\n            return this.clientConfig.buttonPaylaterId;\n        },\n\n        isPaylaterEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['isActive'];\n        },\n\n        isPaylaterMessageEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['isMessageActive'];\n        },\n\n        getGrandTotalAmount: function () {\n            return parseFloat(this.grandTotalAmount).toFixed(2);\n        },\n\n        isCreditEnabled: function () {\n            return window.checkoutConfig.payment['braintree_paypal_credit']['isActive'];\n        },\n\n        /**\n         * Get Message Layout\n         * @returns {*}\n         */\n        getMessagingLayout: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['layout'];\n        },\n\n        /**\n         * Get Message Logo\n         * @returns {*}\n         */\n        getMessagingLogo: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['logo'];\n        },\n\n        /**\n         * Get Message Logo position\n         * @returns {*}\n         */\n        getMessagingLogoPosition: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['logo_position'];\n        },\n\n        /**\n         * Get Message Text Color\n         * @returns {*}\n         */\n        getMessagingTextColor: function () {\n            return window.checkoutConfig.payment['braintree_paypal_paylater']['message']['text_color'];\n        },\n\n        /**\n         * Get line items\n         * @returns {Array}\n         */\n        getLineItems: function () {\n            let self = this;\n            let lineItems = [], storeCredit = 0, giftCardAccount = 0;\n            let giftWrappingItems = 0, giftWrappingOrder = 0;\n            $.each(quote.totals()['total_segments'], function(segmentsKey, segmentsItem) {\n                if (segmentsItem['code'] === 'customerbalance') {\n                    storeCredit = parseFloat(Math.abs(segmentsItem['value']).toString()).toFixed(2);\n                }\n                if (segmentsItem['code'] === 'giftcardaccount') {\n                    giftCardAccount = parseFloat(Math.abs(segmentsItem['value']).toString()).toFixed(2);\n                }\n                if (segmentsItem['code'] === 'giftwrapping') {\n                    let extensionAttributes = segmentsItem['extension_attributes'];\n                    giftWrappingOrder = extensionAttributes['gw_base_price'];\n                    giftWrappingItems = extensionAttributes['gw_items_base_price'];\n                }\n            });\n            if (this.canSendLineItems()) {\n                $.each(quote.getItems(), function(quoteItemKey, quoteItem) {\n                    if (quoteItem.parent_item_id !== null || 0.0 === quoteItem.price) {\n                        return true;\n                    }\n\n                    let itemName = self.replaceUnsupportedCharacters(quoteItem.name);\n                    let itemSku = self.replaceUnsupportedCharacters(quoteItem.sku);\n\n                    let description = '';\n                    let itemQty = parseFloat(quoteItem.qty);\n                    let itemUnitAmount = parseFloat(quoteItem.price);\n                    if (itemQty > Math.floor(itemQty) && itemQty < Math.ceil(itemQty)) {\n                        description = 'Item quantity is ' + itemQty.toFixed(2) + ' and per unit amount is ' + itemUnitAmount.toFixed(2);\n                        itemUnitAmount = parseFloat(itemQty * itemUnitAmount);\n                        itemQty = parseFloat('1');\n                    }\n\n                    let lineItemValues = [\n                        itemName,\n                        'debit',\n                        itemQty.toFixed(2),\n                        itemUnitAmount.toFixed(2),\n                        parseFloat(quoteItem.base_tax_amount).toFixed(2),\n                        itemSku,\n                        description\n                    ];\n\n                    let mappedLineItems = $.map(self.lineItemsArray, function(itemElement, itemIndex) {\n                        return [[\n                            self.lineItemsArray[itemIndex],\n                            lineItemValues[itemIndex]\n                        ]]\n                    });\n\n                    lineItems[quoteItemKey] = Object.fromEntries(mappedLineItems);\n                });\n\n                /**\n                 * Adds credit (refund or discount) kind as LineItems for the\n                 * PayPal transaction if discount amount is greater than 0(Zero)\n                 * as discountAmount lineItem field is not being used by PayPal.\n                 *\n                 * https://developer.paypal.com/braintree/docs/reference/response/transaction-line-item/php#discount_amount\n                 */\n                let baseDiscountAmount = parseFloat(Math.abs(quote.totals()['base_discount_amount']).toString()).toFixed(2);\n                if (baseDiscountAmount > 0) {\n                    let discountLineItem = {\n                        'name': 'Discount',\n                        'kind': 'credit',\n                        'quantity': 1.00,\n                        'unitAmount': baseDiscountAmount\n                    };\n\n                    lineItems = $.merge(lineItems, [discountLineItem]);\n                }\n\n                /**\n                 * Adds shipping as LineItems for the PayPal transaction\n                 * if shipping amount is greater than 0(Zero) to manage\n                 * the totals with client-side implementation as there is\n                 * no any field exist in the client-side implementation\n                 * to send the shipping amount to the Braintree.\n                 */\n                if (quote.totals()['base_shipping_amount'] > 0) {\n                    let shippingLineItem = {\n                        'name': 'Shipping',\n                        'kind': 'debit',\n                        'quantity': 1.00,\n                        'unitAmount': quote.totals()['base_shipping_amount']\n                    };\n\n                    lineItems = $.merge(lineItems, [shippingLineItem]);\n                }\n\n                /**\n                 * Adds credit (Store Credit) kind as LineItems for the\n                 * PayPal transaction if store credit is greater than 0(Zero)\n                 * to manage the totals with client-side implementation\n                 */\n                if (storeCredit > 0) {\n                    let storeCreditItem = {\n                        'name': 'Store Credit',\n                        'kind': 'credit',\n                        'quantity': 1.00,\n                        'unitAmount': storeCredit\n                    };\n\n                    lineItems = $.merge(lineItems, [storeCreditItem]);\n                }\n\n                /**\n                 * Adds Gift Wrapping for items as LineItems for the PayPal\n                 * transaction if it is greater than 0(Zero) to manage\n                 * the totals with client-side implementation\n                 */\n                if (giftWrappingItems > 0) {\n                    let gwItems = {\n                        'name': 'Gift Wrapping for Items',\n                        'kind': 'debit',\n                        'quantity': 1.00,\n                        'unitAmount': giftWrappingItems\n                    };\n\n                    lineItems = $.merge(lineItems, [gwItems]);\n                }\n\n                /**\n                 * Adds Gift Wrapping for order as LineItems for the PayPal\n                 * transaction if it is greater than 0(Zero) to manage\n                 * the totals with client-side implementation\n                 */\n                if (giftWrappingOrder > 0) {\n                    let gwOrderItem = {\n                        'name': 'Gift Wrapping for Order',\n                        'kind': 'debit',\n                        'quantity': 1.00,\n                        'unitAmount': giftWrappingOrder\n                    };\n\n                    lineItems = $.merge(lineItems, [gwOrderItem]);\n                }\n\n                /**\n                 * Adds Gift Cards as credit LineItems for the PayPal\n                 * transaction if it is greater than 0(Zero) to manage\n                 * the totals with client-side implementation\n                 */\n                if (giftCardAccount > 0) {\n                    let giftCardItem = {\n                        'name': 'Gift Cards',\n                        'kind': 'credit',\n                        'quantity': 1.00,\n                        'unitAmount': giftCardAccount\n                    };\n\n                    lineItems = $.merge(lineItems, [giftCardItem]);\n                }\n\n                if (lineItems.length >= 250) {\n                    lineItems = [];\n                }\n            }\n            return lineItems;\n        },\n\n        /**\n         * Regex to replace all unsupported characters.\n         *\n         * @param str\n         */\n        replaceUnsupportedCharacters: function (str) {\n            str.replace('/[^a-zA-Z0-9\\s\\-.\\']/', '');\n            return str.substr(0, 127);\n        },\n\n        /**\n         * Can send line items\n         *\n         * @returns {Boolean}\n         */\n        canSendLineItems: function () {\n            return window.checkoutConfig.payment[this.getCode()].canSendLineItems;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/vault.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'ko',\n    'jquery',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'PayPal_Braintree/js/view/payment/adapter',\n    'Magento_Ui/js/model/messageList',\n    'PayPal_Braintree/js/view/payment/validator-handler',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'braintree',\n    'braintreeHostedFields',\n    'mage/url'\n], function (\n    ko,\n    $,\n    VaultComponent,\n    Braintree,\n    globalMessageList,\n    validatorManager,\n    additionalValidators,\n    fullScreenLoader,\n    client,\n    hostedFields,\n    url\n) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            active: false,\n            hostedFieldsInstance: null,\n            imports: {\n                onActiveChange: 'active'\n            },\n            modules: {\n                hostedFields: '${ $.parentName }.braintree'\n            },\n            template: 'PayPal_Braintree/payment/cc/vault',\n            updatePaymentUrl: url.build('braintree/payment/updatepaymentmethod'),\n            vaultedCVV: ko.observable(\"\"),\n            validatorManager: validatorManager,\n            isValidCvv: false,\n            onInstanceReady: function (instance) {\n                instance.on('validityChange', this.onValidityChange.bind(this));\n            }\n        },\n\n        /**\n         * Event fired by Braintree SDK whenever input value length matches the validation length.\n         * In the case of a CVV, this is 3, or 4 for AMEX.\n         * @param event\n         */\n        onValidityChange: function (event) {\n            if (event.emittedBy === 'cvv') {\n                this.isValidCvv = event.fields.cvv.isValid;\n            }\n        },\n\n        /**\n         * @returns {exports}\n         */\n        initObservable: function () {\n            this._super().observe(['active']);\n            this.validatorManager.initialize();\n            return this;\n        },\n\n        /**\n         * Is payment option active?\n         * @returns {boolean}\n         */\n        isActive: function () {\n            let active = this.getId() === this.isChecked();\n            this.active(active);\n            return active;\n        },\n\n        /**\n         * Fired whenever a payment option is changed.\n         * @param isActive\n         */\n        onActiveChange: function (isActive) {\n            let self = this;\n\n            if (!isActive) {\n                return;\n            }\n\n            if (self.showCvvVerify()) {\n                if (self.hostedFieldsInstance) {\n                    self.hostedFieldsInstance.teardown(function (teardownError) {\n                        if (teardownError) {\n                            globalMessageList.addErrorMessage({\n                                message: teardownError.message\n                            });\n                        }\n                        self.hostedFieldsInstance = null;\n                        self.initHostedCvvField();\n                    });\n                    return;\n                }\n                self.initHostedCvvField();\n            }\n        },\n\n        /**\n         * Initialize the CVV input field with the Braintree Hosted Fields SDK.\n         */\n        initHostedCvvField: function () {\n            let self = this;\n            client.create({\n                authorization: Braintree.getClientToken()\n            }, function (clientError, clientInstance) {\n                if (clientError) {\n                    globalMessageList.addErrorMessage({\n                        message: clientError.message\n                    });\n                }\n                hostedFields.create({\n                    client: clientInstance,\n                    fields: {\n                        cvv: {\n                            selector: '#' + self.getId() + '_cid',\n                            placeholder: '123'\n                        }\n                    }\n                }, function (hostedError, hostedFieldsInstance) {\n                    if (hostedError) {\n                        globalMessageList.addErrorMessage({\n                            message: hostedError.message\n                        });\n                        return;\n                    }\n\n                    self.hostedFieldsInstance = hostedFieldsInstance;\n                    self.onInstanceReady(self.hostedFieldsInstance);\n                });\n            });\n        },\n\n        /**\n         * Return the payment method code.\n         * @returns {string}\n         */\n        getCode: function () {\n            return 'braintree_cc_vault';\n        },\n\n        /**\n         * Get last 4 digits of card\n         * @returns {String}\n         */\n        getMaskedCard: function () {\n            return this.details.maskedCC;\n        },\n\n        /**\n         * Get expiration date\n         * @returns {String}\n         */\n        getExpirationDate: function () {\n            return this.details.expirationDate;\n        },\n\n        /**\n         * Get card type\n         * @returns {String}\n         */\n        getCardType: function () {\n            return this.details.type;\n        },\n\n        /**\n         * Get show CVV Field\n         * @returns {Boolean}\n         */\n        showCvvVerify: function () {\n            return window.checkoutConfig.payment[this.code].cvvVerify;\n        },\n\n        /**\n         * Show or hide the error message.\n         * @param selector\n         * @param state\n         * @returns {boolean}\n         */\n        validateCvv: function (selector, state) {\n            let $selector = $(selector),\n                invalidClass = 'braintree-hosted-fields-invalid';\n\n            if (state === true) {\n                $selector.removeClass(invalidClass);\n                return true;\n            }\n\n            $selector.addClass(invalidClass);\n            return false;\n        },\n\n        /**\n         * Place order\n         */\n        placeOrder: function () {\n            let self = this;\n\n            if (self.showCvvVerify()) {\n                if (!self.validateCvv('#' + self.getId() + '_cid', self.isValidCvv) || !additionalValidators.validate()) {\n                    return;\n                }\n            } else {\n                if (!additionalValidators.validate()) {\n                    return;\n                }\n            }\n\n            fullScreenLoader.startLoader();\n\n            if (self.showCvvVerify() && typeof self.hostedFieldsInstance !== 'undefined') {\n                self.hostedFieldsInstance.tokenize({}, function (error, payload) {\n                    if (error) {\n                        fullScreenLoader.stopLoader();\n                        globalMessageList.addErrorMessage({\n                            message: error.message\n                        });\n                        return;\n                    }\n                    $.getJSON(self.updatePaymentUrl, {\n                        'nonce': payload.nonce,\n                        'public_hash': self.publicHash\n                    }).done(function (response) {\n                        if (response.success === false) {\n                            fullScreenLoader.stopLoader();\n                            globalMessageList.addErrorMessage({\n                                message: 'CVV verification failed.'\n                            });\n                            return;\n                        }\n                        self.getPaymentMethodNonce();\n                    })\n                });\n            } else {\n                self.getPaymentMethodNonce();\n            }\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            let self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash,\n                'cvv': self.vaultedCVV()\n            }).done(function (response) {\n                fullScreenLoader.stopLoader();\n                self.hostedFields(function (formComponent) {\n                    formComponent.setPaymentMethodNonce(response.paymentMethodNonce);\n                    formComponent.setCreditCardBin(response.details.bin);\n                    formComponent.additionalData['public_hash'] = self.publicHash;\n                    formComponent.code = self.code;\n                    if (self.vaultedCVV()) {\n                        formComponent.additionalData['cvv'] = self.vaultedCVV();\n                    }\n\n                    self.validatorManager.validate(formComponent, function () {\n                        fullScreenLoader.stopLoader();\n                        return formComponent.placeOrder('parent');\n                    }, function() {\n                        // No teardown actions required.\n                        fullScreenLoader.stopLoader();\n                        formComponent.setPaymentMethodNonce(null);\n                        formComponent.setCreditCardBin(null);\n                    });\n\n                });\n            }).fail(function (response) {\n                let error = JSON.parse(response.responseText);\n\n                fullScreenLoader.stopLoader();\n                globalMessageList.addErrorMessage({\n                    message: error.message\n                });\n            });\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/venmo.js":"define(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'braintree',\n        'braintreeDataCollector',\n        'braintreeVenmo',\n        'PayPal_Braintree/js/form-builder',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'mage/translate'\n    ],\n    function (\n        Component,\n        braintree,\n        dataCollector,\n        venmo,\n        formBuilder,\n        messageList,\n        fullScreenLoader,\n        additionalValidators,\n        $t\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                deviceData: null,\n                paymentMethodNonce: null,\n                template: 'PayPal_Braintree/payment/venmo',\n                venmoInstance: null\n            },\n\n            clickVenmoBtn: function () {\n                let self = this;\n\n                if (!additionalValidators.validate()) {\n                    return false;\n                }\n\n                if (!this.venmoInstance) {\n                    this.setErrorMsg($t('Venmo not initialized, please try reloading.'));\n                    return;\n                }\n\n                this.venmoInstance.tokenize(function (tokenizeErr, payload) {\n                    if (tokenizeErr) {\n                        if (tokenizeErr.code === 'VENMO_CANCELED') {\n                            self.setErrorMsg($t('Venmo app is not available or the payment flow was cancelled.'));\n                        } else if (tokenizeErr.code === 'VENMO_APP_CANCELED') {\n                            self.setErrorMsg($t('Venmo payment flow cancelled.'));\n                        } else {\n                            self.setErrorMsg(tokenizeErr.message);\n                        }\n                    } else {\n                        self.handleVenmoSuccess(payload);\n                    }\n                });\n            },\n\n            collectDeviceData: function (clientInstance, callback) {\n                let self = this;\n                dataCollector.create({\n                    client: clientInstance,\n                    paypal: true\n                }, function (dataCollectorErr, dataCollectorInstance) {\n                    if (dataCollectorErr) {\n                        return;\n                    }\n                    self.deviceData = dataCollectorInstance.deviceData;\n                    callback();\n                });\n            },\n\n            getClientToken: function () {\n                return window.checkoutConfig.payment[this.getCode()].clientToken;\n            },\n\n            getCode: function() {\n                return 'braintree_venmo';\n            },\n\n            getData: function () {\n                let data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce,\n                        'device_data': this.deviceData\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            getPaymentMarkSrc: function () {\n                return window.checkoutConfig.payment[this.getCode()].paymentMarkSrc;\n            },\n\n            getTitle: function() {\n                return 'Venmo';\n            },\n\n            handleVenmoSuccess: function (payload) {\n                this.setPaymentMethodNonce(payload.nonce);\n                this.placeOrder();\n            },\n\n            initialize: function () {\n                this._super();\n\n                let self = this;\n\n                braintree.create({\n                    authorization: self.getClientToken()\n                }, function (clientError, clientInstance) {\n                    if (clientError) {\n                        this.setErrorMsg($t('Unable to initialize Braintree Client.'));\n                        return;\n                    }\n\n                    // Collect device data\n                    self.collectDeviceData(clientInstance, function () {\n                        // callback from collectDeviceData\n                        venmo.create({\n                            client: clientInstance,\n                            allowDesktop: true,\n                            allowDesktopWebLogin: true,\n                            mobileWebFallBack: true,\n                            paymentMethodUsage: 'single_use',\n                            allowNewBrowserTab: false\n                        }, function (venmoErr, venmoInstance) {\n                            if (venmoErr) {\n                                self.setErrorMsg($t('Error initializing Venmo: %1').replace('%1', venmoErr));\n                                return;\n                            }\n\n                            if (!venmoInstance.isBrowserSupported()) {\n                                console.log('Browser does not support Venmo');\n                                return;\n                            }\n\n                            self.setVenmoInstance(venmoInstance);\n                        });\n                    });\n                });\n\n                return this;\n            },\n\n            isAllowed: function () {\n                return window.checkoutConfig.payment[this.getCode()].isAllowed;\n            },\n\n            setErrorMsg: function (message) {\n                messageList.addErrorMessage({\n                    message: message\n                });\n            },\n\n            setPaymentMethodNonce: function (nonce) {\n                this.paymentMethodNonce = nonce;\n            },\n\n            setVenmoInstance: function (instance) {\n                this.venmoInstance = instance;\n            }\n        });\n    }\n);\n","PayPal_Braintree/js/view/payment/method-renderer/multishipping/hosted-fields.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'PayPal_Braintree/js/view/payment/method-renderer/hosted-fields',\n    'PayPal_Braintree/js/validator',\n    'Magento_Ui/js/model/messageList',\n    'mage/translate',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Checkout/js/action/set-payment-information',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'PayPal_Braintree/js/view/payment/adapter'\n], function (\n    $,\n    Component,\n    validator,\n    messageList,\n    $t,\n    fullScreenLoader,\n    setPaymentInformationAction,\n    additionalValidators,\n    braintree\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/multishipping/form'\n        },\n\n        /**\n         * Get list of available CC types\n         *\n         * @returns {Object}\n         */\n        getCcAvailableTypes: function () {\n            let availableTypes = validator.getAvailableCardTypes(),\n                billingCountryId;\n\n            billingCountryId = $('#multishipping_billing_country_id').val();\n\n            if (billingCountryId && validator.getCountrySpecificCardTypes(billingCountryId)) {\n                return validator.collectTypes(\n                    availableTypes, validator.getCountrySpecificCardTypes(billingCountryId)\n                );\n            }\n\n            return availableTypes;\n        },\n\n        /**\n         * @override\n         */\n        handleNonce: function (payload) {\n            let self = this;\n            this.setPaymentMethodNonce(payload.nonce);\n            this.setCreditCardBin(payload.details.bin);\n\n            // place order on success validation\n            self.validatorManager.validate(self, function () {\n                return self.setPaymentInformation();\n            }, function() {\n                self.isProcessing = false;\n                self.paymentMethodNonce = null;\n                self.creditCardBin = null;\n            });\n        },\n\n        /**\n         * @override\n         */\n        placeOrder: function () {\n            if (this.isProcessing) {\n                return false;\n            } else {\n                this.isProcessing = true;\n            }\n\n            braintree.tokenizeHostedFields();\n            return false;\n        },\n\n        /**\n         * @override\n         */\n        setPaymentInformation: function () {\n            if (additionalValidators.validate()) {\n                fullScreenLoader.startLoader();\n                $.when(\n                    setPaymentInformationAction(\n                        this.messageContainer,\n                        this.getData()\n                    )\n                ).done(this.done.bind(this))\n                    .fail(this.fail.bind(this));\n            }\n        },\n\n        /**\n         * {Function}\n         */\n        fail: function () {\n            fullScreenLoader.stopLoader();\n\n            return this;\n        },\n\n        /**\n         * {Function}\n         */\n        done: function () {\n            fullScreenLoader.stopLoader();\n            $('#multishipping-billing-form').submit();\n\n            return this;\n        }\n    });\n});\n","PayPal_Braintree/js/view/payment/method-renderer/multishipping/paypal.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'braintreeCheckoutPayPalAdapter',\n    'Magento_Checkout/js/model/quote',\n    'PayPal_Braintree/js/view/payment/method-renderer/paypal',\n    'Magento_Checkout/js/action/set-payment-information',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'mage/translate'\n], function (\n    $,\n    _,\n    Braintree,\n    quote,\n    Component,\n    setPaymentInformationAction,\n    additionalValidators,\n    fullScreenLoader,\n    $t\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'PayPal_Braintree/payment/multishipping/paypal',\n            submitButtonSelector: '[id=\"parent-payment-continue\"]',\n            reviewButtonHtml: ''\n        },\n\n        /**\n         * @override\n         */\n        initObservable: function () {\n            this.reviewButtonHtml = $(this.submitButtonSelector).html();\n            return this._super();\n        },\n\n        initClientConfig: function () {\n            this.clientConfig = _.extend(this.clientConfig, this.getPayPalConfig());\n            this.clientConfig.paypal.enableShippingAddress = false;\n\n            _.each(this.clientConfig, function (fn, name) {\n                if (typeof fn === 'function') {\n                    this.clientConfig[name] = fn.bind(this);\n                }\n            }, this);\n            this.clientConfig.buttonPayPalId = 'parent-payment-continue';\n\n        },\n\n        /**\n         * @override\n         */\n        onActiveChange: function (isActive) {\n            this.updateSubmitButtonHtml(isActive);\n            this._super(isActive);\n        },\n\n        /**\n         * @override\n         */\n        beforePlaceOrder: function (data) {\n            this._super(data);\n        },\n\n        /**\n         * Re-init PayPal Auth Flow\n         */\n        reInitPayPal: function () {\n            this.disableButton();\n            this.clientConfig.paypal.amount = parseFloat(this.grandTotalAmount).toFixed(2);\n\n            if (!quote.isVirtual()) {\n                this.clientConfig.paypal.enableShippingAddress = false;\n                this.clientConfig.paypal.shippingAddressEditable = false;\n            }\n\n            Braintree.setConfig(this.clientConfig);\n\n            if (Braintree.getPayPalInstance()) {\n                Braintree.getPayPalInstance().teardown(function () {\n                    Braintree.setup();\n                }.bind(this));\n                Braintree.setPayPalInstance(null);\n            } else {\n                Braintree.setup();\n                this.enableButton();\n            }\n        },\n\n        loadPayPalButton: function (paypalCheckoutInstance, funding) {\n            let paypalPayment = Braintree.config.paypal,\n                onPaymentMethodReceived = Braintree.config.onPaymentMethodReceived;\n            let style = {\n                color: Braintree.getColor(funding),\n                shape: Braintree.getShape(funding),\n                size: Braintree.getSize(funding),\n                label: Braintree.getLabel(funding)\n            };\n\n            if (Braintree.getBranding()) {\n                style.branding = Braintree.getBranding();\n            }\n            if (Braintree.getFundingIcons()) {\n                style.fundingicons = Braintree.getFundingIcons();\n            }\n\n            if (funding === 'credit') {\n                Braintree.config.buttonId = this.clientConfig.buttonCreditId;\n            } else if (funding === 'paylater') {\n                Braintree.config.buttonId = this.clientConfig.buttonPaylaterId;\n            } else {\n                Braintree.config.buttonId = this.clientConfig.buttonPayPalId;\n            }\n\n            // Render\n            Braintree.config.paypalInstance = paypalCheckoutInstance;\n            var events = Braintree.events;\n            $('#' + Braintree.config.buttonId).html('');\n\n            var button = paypal.Buttons({\n                fundingSource: funding,\n                env: Braintree.getEnvironment(),\n                style: style,\n                commit: true,\n                locale: Braintree.config.paypal.locale,\n\n                createOrder: function () {\n                    return paypalCheckoutInstance.createPayment(paypalPayment);\n                },\n\n                onCancel: function (data) {\n                    console.log('checkout.js payment cancelled', JSON.stringify(data, 0, 2));\n\n                    if (typeof events.onCancel === 'function') {\n                        events.onCancel();\n                    }\n                },\n\n                onError: function (err) {\n                    Braintree.showError($t(\"PayPal Checkout could not be initialized. Please contact the store owner.\"));\n                    Braintree.config.paypalInstance = null;\n                    console.error('Paypal checkout.js error', err);\n\n                    if (typeof events.onError === 'function') {\n                        events.onError(err);\n                    }\n                }.bind(this),\n\n                onClick: function (data) {\n                    // To check term & conditions input checked - validate additional validators.\n                    if (!additionalValidators.validate()) {\n                        return false;\n                    }\n\n                    if (typeof events.onClick === 'function') {\n                        events.onClick(data);\n                    }\n                }.bind(this),\n\n                onApprove: function (data, actions) {\n                    return paypalCheckoutInstance.tokenizePayment(data)\n                        .then(function (payload) {\n                            onPaymentMethodReceived(payload);\n                        });\n                }\n\n            });\n            if (button.isEligible() && $('#' + Braintree.config.buttonId).length) {\n\n                button.render('#' + Braintree.config.buttonId).then(function () {\n                    Braintree.enableButton();\n                    if (typeof Braintree.config.onPaymentMethodError === 'function') {\n                        Braintree.config.onPaymentMethodError();\n                    }\n                }.bind(this)).then(function (data) {\n                    if (typeof events.onRender === 'function') {\n                        events.onRender(data);\n                    }\n                });\n            }\n        },\n\n        /**\n         * Get configuration for PayPal\n         * @returns {Object}\n         */\n        getPayPalConfig: function () {\n            var totals = quote.totals(),\n                config = {},\n                isActiveVaultEnabler = this.isActiveVault();\n\n            config.paypal = {\n                flow: 'checkout',\n                amount: parseFloat(this.grandTotalAmount).toFixed(2),\n                currency: totals['base_currency_code'],\n                locale: this.getLocale(),\n                requestBillingAgreement: true,\n                /**\n                 * Triggers on any Braintree error\n                 */\n                onError: function () {\n                    this.paymentMethodNonce = null;\n                },\n\n                /**\n                 * Triggers if browser doesn't support PayPal Checkout\n                 */\n                onUnsupported: function () {\n                    this.paymentMethodNonce = null;\n                }\n            };\n\n            if (!quote.isVirtual()) {\n                config.paypal.enableShippingAddress = false;\n                config.paypal.shippingAddressEditable = false;\n            }\n\n            if (this.getMerchantName()) {\n                config.paypal.displayName = this.getMerchantName();\n            }\n\n            return config;\n        },\n\n        getShippingAddress: function () {\n\n            return {};\n        },\n\n        /**\n         * @override\n         */\n        getData: function () {\n            var data = this._super();\n\n            data['additional_data']['is_active_payment_token_enabler'] = true;\n\n            return data;\n        },\n\n        /**\n         * @override\n         */\n        isActiveVault: function () {\n            return true;\n        },\n\n        /**\n         * Skipping order review step on checkout with multiple addresses is not allowed.\n         *\n         * @returns {Boolean}\n         */\n        isSkipOrderReview: function () {\n            return false;\n        },\n\n        /**\n         * Checks if payment method nonce is already received.\n         *\n         * @returns {Boolean}\n         */\n        isPaymentMethodNonceReceived: function () {\n            return this.paymentMethodNonce !== null;\n        },\n\n        /**\n         * Update submit button on multi-addresses checkout billing form.\n         *\n         * @param {Boolean} isActive\n         */\n        updateSubmitButtonHtml: function (isActive) {\n            $(this.submitButtonSelector).removeClass(\"primary\");\n            if (this.isPaymentMethodNonceReceived() || !isActive) {\n                $(this.submitButtonSelector).addClass(\"primary\");\n                $(this.submitButtonSelector).html(this.reviewButtonHtml);\n            }\n        },\n\n        /**\n         * @override\n         */\n        placeOrder: function () {\n            if (!this.isPaymentMethodNonceReceived()) {\n                this.payWithPayPal();\n            } else {\n                fullScreenLoader.startLoader();\n\n                $.when(\n                    setPaymentInformationAction(\n                        this.messageContainer,\n                        this.getData()\n                    )\n                ).done(this.done.bind(this))\n                    .fail(this.fail.bind(this));\n            }\n        },\n\n        /**\n         * {Function}\n         */\n        fail: function () {\n            fullScreenLoader.stopLoader();\n\n            return this;\n        },\n\n        /**\n         * {Function}\n         */\n        done: function () {\n            fullScreenLoader.stopLoader();\n            $('#multishipping-billing-form').submit();\n\n            return this;\n        }\n    });\n});\n","PL_Psigate/js/view/payment/psigate-payments.js":"define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n\n            {\n                type: 'psigate_htmlmessenger',\n                component: 'PL_Psigate/js/view/payment/method-renderer/psigate-htmlmessenger'\n            },\n            {\n                type: 'psigate_xmlmessenger',\n                component: 'PL_Psigate/js/view/payment/method-renderer/psigate-xmlmessenger'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);","PL_Psigate/js/view/payment/method-renderer/psigate-htmlmessenger.js":"/**\r\n * Created by Linh on 7/31/2020.\r\n */\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'mage/url'\r\n    ],\r\n    function ($, Component, url){\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            redirectAfterPlaceOrder: false,\r\n\r\n            defaults: {\r\n                template: 'PL_Psigate/payment/psigate-htmlmessenger'\r\n            },\r\n\r\n            initialize: function() {\r\n                this._super();\r\n                self = this;\r\n            },\r\n\r\n            getCode: function() {\r\n                return 'psigate_htmlmessenger';\r\n            },\r\n\r\n            getData: function() {\r\n                var data = {\r\n                    'method': this.getCode()\r\n                };\r\n                return data;\r\n            },\r\n\r\n            afterPlaceOrder: function () {\r\n                window.location.replace(url.build('psigate/htmlmessenger/redirect'));\r\n            }\r\n\r\n        });\r\n    }\r\n);","PL_Psigate/js/view/payment/method-renderer/psigate-xmlmessenger.js":"\ndefine(\n    [\n        'Magento_Payment/js/view/payment/cc-form',\n        'jquery',\n        'Magento_Checkout/js/action/place-order',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_Payment/js/model/credit-card-validation/validator'\n    ],\n    function (Component, $) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'PL_Psigate/payment/psigate-form'\n            },\n\n            getCode: function() {\n                return 'psigate_xmlmessenger';\n            },\n\n            isActive: function() {\n                return true;\n            },\n\n            validate: function() {\n                var $form = $('#' + this.getCode() + '-form');\n                return $form.validation() && $form.validation('isValid');\n            }\n        });\n    }\n);\n","requirejs/domReady.js":"/**\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/domReady for details\n */\n/*jslint */\n/*global require: false, define: false, requirejs: false,\n  window: false, clearInterval: false, document: false,\n  self: false, setInterval: false */\n\n\ndefine(function () {\n    'use strict';\n\n    var isTop, testDiv, scrollIntervalId,\n        isBrowser = typeof window !== \"undefined\" && window.document,\n        isPageLoaded = !isBrowser,\n        doc = isBrowser ? document : null,\n        readyCalls = [];\n\n    function runCallbacks(callbacks) {\n        var i;\n        for (i = 0; i < callbacks.length; i += 1) {\n            callbacks[i](doc);\n        }\n    }\n\n    function callReady() {\n        var callbacks = readyCalls;\n\n        if (isPageLoaded) {\n            //Call the DOM ready callbacks\n            if (callbacks.length) {\n                readyCalls = [];\n                runCallbacks(callbacks);\n            }\n        }\n    }\n\n    /**\n     * Sets the page as loaded.\n     */\n    function pageLoaded() {\n        if (!isPageLoaded) {\n            isPageLoaded = true;\n            if (scrollIntervalId) {\n                clearInterval(scrollIntervalId);\n            }\n\n            callReady();\n        }\n    }\n\n    if (isBrowser) {\n        if (document.addEventListener) {\n            //Standards. Hooray! Assumption here that if standards based,\n            //it knows about DOMContentLoaded.\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\n            window.addEventListener(\"load\", pageLoaded, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onload\", pageLoaded);\n\n            testDiv = document.createElement('div');\n            try {\n                isTop = window.frameElement === null;\n            } catch (e) {}\n\n            //DOMContentLoaded approximation that uses a doScroll, as found by\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\n            //but modified by other contributors, including jdalton\n            if (testDiv.doScroll && isTop && window.external) {\n                scrollIntervalId = setInterval(function () {\n                    try {\n                        testDiv.doScroll();\n                        pageLoaded();\n                    } catch (e) {}\n                }, 30);\n            }\n        }\n\n        //Check if document is no longer loading, and if so, just trigger page load\n        //listeners. Latest webkit browsers also use \"interactive\", and\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\n        //entering \"interactive\" or \"complete\". More details:\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\n        //Hmm, this is more complicated on further use, see \"firing too early\"\n        //bug: https://github.com/requirejs/domReady/issues/1\n        //so removing the || document.readyState === \"interactive\" test.\n        //There is still a window.onload binding that should get fired if\n        //DOMContentLoaded is missed.\n        if (document.readyState !== \"loading\") {\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\n            setTimeout(pageLoaded);\n        }\n    }\n\n    /** START OF PUBLIC API **/\n\n    /**\n     * Registers a callback for DOM ready. If DOM is already ready, the\n     * callback is called immediately.\n     * @param {Function} callback\n     */\n    function domReady(callback) {\n        if (isPageLoaded) {\n            callback(doc);\n        } else {\n            readyCalls.push(callback);\n        }\n        return domReady;\n    }\n\n    domReady.version = '2.0.1';\n\n    /**\n     * Loader Plugin API method\n     */\n    domReady.load = function (name, req, onLoad, config) {\n        if (config.isBuild) {\n            onLoad(null);\n        } else {\n            domReady(onLoad);\n        }\n    };\n\n    /** END OF PUBLIC API **/\n\n    return domReady;\n});\n","Sm_AttributesSearch/js/attributes-search.js":"/**\n * @category Magentech\n * @package Sm_AttributesSearch\n * @version 2.0.0\n * @copyright Copyright (c) 2018 YouTech Company. All Rights Reserved.\n * @license - Copyrighted Commercial Software\n * @author YouTech Company <contact@ytcvn.com>\n * @link http://www.magentech.com\n */\n\ndefine(\n    [\n        \"jquery\",\n        \"underscore\",\n        \"jquery/ui\",\n        'mage/translate',\n        \"Sm_AttributesSearch/js/chosen\"\n    ], function ($, _) {\n        $.widget(\n            'Attributes.SearchAttributes', {\n                options: {\n                    elementId: 'attributessearch',\n                    actionUrl: '',\n                    selectElement: '.smas-select',\n                    eleLoading: '.smas-loading',\n                    eleSearch: '.btn-search',\n                    eleReset: '.btn-reset',\n                    selectsArr: [],\n                },\n\n                _create: function () {\n                    var _self = this, _options = _self.options, _element = $('#' + _options.elementId);\n                    _options.selectsArr = _element.find(_options.selectElement);\n                    var _codeFirst = _options.selectsArr.first().attr('name');\n                    _.each(\n                        _options.selectsArr, function (ele) {\n                            var _el = $(ele);\n                            if (_el.is('select')) {\n                                _el.chosen();\n                            }\n                        }\n                    );\n                    _self._loadFirst(_codeFirst);\n                    _element.on('change', _options.selectElement, _self, _self._onSelectChange);\n                },\n\n                _loadFirst: function (code) {\n                    var _self = this, _options = _self.options, _element = $('#' + _options.elementId),\n                        _eleLoading = $(_options.eleLoading, _element),\n                        _select = $('select[name=' + code + ']', _element);\n                    $.ajax(\n                        {\n                            url: _options.actionUrl + '?as=1&filtersList=1&' + code,\n                            data: {\n                                code: code\n                            },\n                            type: 'GET',\n                            dataType: 'json',\n                            beforeSend: function () {\n                                _eleLoading.show();\n                            },\n                            success: function (json) {\n                                _select.empty().append(json.contents);\n                                _select.trigger(\"chosen:updated\");\n                                _eleLoading.hide();\n                            }\n                        }\n                    );\n                    return false;\n                },\n\n                _onSelectChange: function (eve) {\n                    var _idsProducts, _valueOpt, _currOpt, _select = this,\n                        _self = eve.data, _options = _self.options, _selectLoad = null;\n                    if ($(_select).is('select')) {\n                        _valueOpt = _select.value;\n                        _idsProducts = $('option[value=' + _valueOpt + ']', $(_select)).attr('data-ids');\n                    }\n\n                    for (var i = 0; i < _options.selectsArr.length; i++) {\n                        if (_options.selectsArr[i].id === _select.id && i !== _options.selectsArr.length - 1) {\n                            _selectLoad = _options.selectsArr[i + 1];\n                            break;\n                        }\n                    }\n\n                    _self._clearAllValues(_select);\n                    if (_selectLoad && _valueOpt !== 0 && _idsProducts !== \"\") {\n                        _currOpt = $(_select).attr('data-attr-id');\n                        _self._loadSelectValues(_selectLoad, _idsProducts, _currOpt);\n                    }\n                },\n\n                _loadSelectValues: function (selectLoad, idsProducts, currOpt) {\n                    var _self = this, _options = _self.options, _selectLoad = $(selectLoad),\n                        _element = $('#' + _options.elementId), _code = _selectLoad.attr('name'),\n                        _eleLoading = $(_options.eleLoading, _element);\n                    var _form = _element.find('form'), _params = _form.serialize();\n                    if (_code == null) {\n                        return false;\n                    }\n                    $.ajax(\n                        {\n                            url: _options.actionUrl + '?as=1&filtersList=1&' + _params + '&' + _code,\n                            type: 'GET',\n                            data: {\n                                code: _code\n                            },\n                            dataType: 'json',\n                            beforeSend: function () {\n                                _eleLoading.show();\n                            },\n                            success: function (json) {\n                                _eleLoading.hide();\n                                var _selectValue = 0;\n                                _isSelect = _selectLoad.is('select');\n                                _selectLoad = _isSelect ? _selectLoad : _selectLoad.next();\n                                _selectLoad.empty().append(json.contents);\n                                if (_selectLoad.children().length) {\n                                    $('[name=' + _code + ']', _element).removeAttr(\"disabled\");\n                                    _selectValue = _isSelect ? _selectLoad.val() : _selectValue;\n                                }\n\n                                if (_selectValue && _selectValue !== 0) {\n                                    if (_isSelect) {\n                                        _selectLoad.change();\n                                    } else {\n                                        _selectLoad.prev().trigger('change');\n                                    }\n                                }\n\n                                if (_isSelect) {\n                                    _selectLoad.trigger(\"chosen:updated\");\n                                }\n                            }\n                        }\n                    );\n                    return false;\n                },\n\n                _clearAllValues: function (_select) {\n                    var _self = this, _options = _self.options, _startClear = false,\n                        _element = $('#' + _options.elementId),\n                        _currSelect, _isSelect, _eleSearch = $(_options.eleSearch, _element),\n                        _eleReset = $(_options.eleReset, _element);\n                    for (var i = 0; i < _options.selectsArr.length; i++) {\n                        _currSelect = $(_options.selectsArr[i]);\n                        _isSelect = _currSelect.is('select');\n\n                        if (_startClear) {\n                            _currSelect.attr(\"disabled\", \"disabled\");\n                            if (!_isSelect) {\n                                _currSelect.next().children('option:not(:first)').remove();\n                            } else {\n                                _currSelect.children('option:not(:first)').remove();\n                            }\n                        }\n                        if (_options.selectsArr[i].id === _select.id) {\n                            _startClear = true;\n                            if (i === 0) {\n                                if (_select.value !== 0) {\n                                    _eleSearch.removeAttr(\"disabled\");\n                                    _eleReset.show();\n                                    _self._btnAction(_select);\n                                } else {\n                                    _eleSearch.attr(\"disabled\", \"disabled\");\n                                    _eleReset.hide();\n                                }\n                            }\n                        }\n                        if (_isSelect) {\n                            _currSelect.trigger(\"chosen:updated\");\n                        }\n                    }\n                },\n\n                _btnAction: function (_select) {\n                    var _self = this, _options = _self.options, _element = $('#' + _options.elementId),\n                        _eleReset = $(_options.eleReset, _element), _eleSearch = $(_options.eleSearch, _element);\n                    _eleReset.off('click').on(\n                        'click', function (e) {\n                            e.preventDefault();\n                            $(_select).val(\"0\");\n                            _self._clearAllValues(_select);\n                            return false;\n                        }\n                    );\n                    _eleSearch.off('click').on(\n                        'click', function (e) {\n                            e.preventDefault();\n                            var _that = $(this), _form = _that.parents('form'), _urlAction,\n                                _attName, _params = _form.serialize();\n                            for (var i = 0; i < _options.selectsArr.length; i++) {\n                                if (_options.selectsArr[i].value <= 0) {\n                                    _attName = _options.selectsArr[i].name;\n                                    console.log(_attName);\n                                    break;\n                                }\n                            }\n                            _params = _params.replace('&' + _attName + '=0', '');\n                            _urlAction = _options.actionUrl + '?as=1&' + _params;\n                            _form.attr('action', _urlAction);\n                            window.location = _urlAction;\n                            return true;\n                        }\n                    );\n                },\n            }\n        );\n        return $.Attributes.SearchAttributes;\n    }\n);\n\n","Sm_AttributesSearch/js/chosen.jquery.min.js":"/* Chosen v1.8.7 | (c) 2011-2018 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */\n\n(function(){var t,e,s,i,n=function(t,e){return function(){return t.apply(e,arguments)}},r=function(t,e){function s(){this.constructor=t}for(var i in e)o.call(e,i)&&(t[i]=e[i]);return s.prototype=e.prototype,t.prototype=new s,t.__super__=e.prototype,t},o={}.hasOwnProperty;(i=function(){function t(){this.options_index=0,this.parsed=[]}return t.prototype.add_node=function(t){return\"OPTGROUP\"===t.nodeName.toUpperCase()?this.add_group(t):this.add_option(t)},t.prototype.add_group=function(t){var e,s,i,n,r,o;for(e=this.parsed.length,this.parsed.push({array_index:e,group:!0,label:t.label,title:t.title?t.title:void 0,children:0,disabled:t.disabled,classes:t.className}),o=[],s=0,i=(r=t.childNodes).length;s<i;s++)n=r[s],o.push(this.add_option(n,e,t.disabled));return o},t.prototype.add_option=function(t,e,s){if(\"OPTION\"===t.nodeName.toUpperCase())return\"\"!==t.text?(null!=e&&(this.parsed[e].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:t.value,text:t.text,html:t.innerHTML,title:t.title?t.title:void 0,selected:t.selected,disabled:!0===s?s:t.disabled,group_array_index:e,group_label:null!=e?this.parsed[e].label:null,classes:t.className,style:t.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1},t}()).select_to_array=function(t){var e,s,n,r,o;for(r=new i,s=0,n=(o=t.childNodes).length;s<n;s++)e=o[s],r.add_node(e);return r.parsed},e=function(){function t(e,s){this.form_field=e,this.options=null!=s?s:{},this.label_click_handler=n(this.label_click_handler,this),t.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers(),this.on_ready())}return t.prototype.set_default_values=function(){return this.click_test_action=function(t){return function(e){return t.test_active_click(e)}}(this),this.activate_action=function(t){return function(e){return t.activate_field(e)}}(this),this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.is_rtl=this.options.rtl||/\\bchosen-rtl\\b/.test(this.form_field.className),this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&\"\"===this.form_field.options[0].text&&this.options.allow_single_deselect,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null==this.options.enable_split_word_search||this.options.enable_split_word_search,this.group_search=null==this.options.group_search||this.options.group_search,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=null==this.options.single_backstroke_delete||this.options.single_backstroke_delete,this.max_selected_options=this.options.max_selected_options||Infinity,this.inherit_select_classes=this.options.inherit_select_classes||!1,this.display_selected_options=null==this.options.display_selected_options||this.options.display_selected_options,this.display_disabled_options=null==this.options.display_disabled_options||this.options.display_disabled_options,this.include_group_label_in_selected=this.options.include_group_label_in_selected||!1,this.max_shown_results=this.options.max_shown_results||Number.POSITIVE_INFINITY,this.case_sensitive_search=this.options.case_sensitive_search||!1,this.hide_results_on_select=null==this.options.hide_results_on_select||this.options.hide_results_on_select},t.prototype.set_default_text=function(){return this.form_field.getAttribute(\"data-placeholder\")?this.default_text=this.form_field.getAttribute(\"data-placeholder\"):this.is_multiple?this.default_text=this.options.placeholder_text_multiple||this.options.placeholder_text||t.default_multiple_text:this.default_text=this.options.placeholder_text_single||this.options.placeholder_text||t.default_single_text,this.default_text=this.escape_html(this.default_text),this.results_none_found=this.form_field.getAttribute(\"data-no_results_text\")||this.options.no_results_text||t.default_no_result_text},t.prototype.choice_label=function(t){return this.include_group_label_in_selected&&null!=t.group_label?\"<b class='group-name'>\"+this.escape_html(t.group_label)+\"</b>\"+t.html:t.html},t.prototype.mouse_enter=function(){return this.mouse_on_container=!0},t.prototype.mouse_leave=function(){return this.mouse_on_container=!1},t.prototype.input_focus=function(t){if(this.is_multiple){if(!this.active_field)return setTimeout(function(t){return function(){return t.container_mousedown()}}(this),50)}else if(!this.active_field)return this.activate_field()},t.prototype.input_blur=function(t){if(!this.mouse_on_container)return this.active_field=!1,setTimeout(function(t){return function(){return t.blur_test()}}(this),100)},t.prototype.label_click_handler=function(t){return this.is_multiple?this.container_mousedown(t):this.activate_field()},t.prototype.results_option_build=function(t){var e,s,i,n,r,o,h;for(e=\"\",h=0,n=0,r=(o=this.results_data).length;n<r&&(s=o[n],i=\"\",\"\"!==(i=s.group?this.result_add_group(s):this.result_add_option(s))&&(h++,e+=i),(null!=t?t.first:void 0)&&(s.selected&&this.is_multiple?this.choice_build(s):s.selected&&!this.is_multiple&&this.single_set_selected_text(this.choice_label(s))),!(h>=this.max_shown_results));n++);return e},t.prototype.result_add_option=function(t){var e,s;return t.search_match&&this.include_option_in_results(t)?(e=[],t.disabled||t.selected&&this.is_multiple||e.push(\"active-result\"),!t.disabled||t.selected&&this.is_multiple||e.push(\"disabled-result\"),t.selected&&e.push(\"result-selected\"),null!=t.group_array_index&&e.push(\"group-option\"),\"\"!==t.classes&&e.push(t.classes),s=document.createElement(\"li\"),s.className=e.join(\" \"),t.style&&(s.style.cssText=t.style),s.setAttribute(\"data-option-array-index\",t.array_index),s.innerHTML=t.highlighted_html||t.html,t.title&&(s.title=t.title),this.outerHTML(s)):\"\"},t.prototype.result_add_group=function(t){var e,s;return(t.search_match||t.group_match)&&t.active_options>0?((e=[]).push(\"group-result\"),t.classes&&e.push(t.classes),s=document.createElement(\"li\"),s.className=e.join(\" \"),s.innerHTML=t.highlighted_html||this.escape_html(t.label),t.title&&(s.title=t.title),this.outerHTML(s)):\"\"},t.prototype.results_update_field=function(){if(this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.results_build(),this.results_showing)return this.winnow_results()},t.prototype.reset_single_select_options=function(){var t,e,s,i,n;for(n=[],t=0,e=(s=this.results_data).length;t<e;t++)(i=s[t]).selected?n.push(i.selected=!1):n.push(void 0);return n},t.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},t.prototype.results_search=function(t){return this.results_showing?this.winnow_results():this.results_show()},t.prototype.winnow_results=function(t){var e,s,i,n,r,o,h,l,c,_,a,u,d,p,f;for(this.no_results_clear(),_=0,e=(h=this.get_search_text()).replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\"\\\\$&\"),c=this.get_search_regex(e),i=0,n=(l=this.results_data).length;i<n;i++)(r=l[i]).search_match=!1,a=null,u=null,r.highlighted_html=\"\",this.include_option_in_results(r)&&(r.group&&(r.group_match=!1,r.active_options=0),null!=r.group_array_index&&this.results_data[r.group_array_index]&&(0===(a=this.results_data[r.group_array_index]).active_options&&a.search_match&&(_+=1),a.active_options+=1),f=r.group?r.label:r.text,r.group&&!this.group_search||(u=this.search_string_match(f,c),r.search_match=null!=u,r.search_match&&!r.group&&(_+=1),r.search_match?(h.length&&(d=u.index,o=f.slice(0,d),s=f.slice(d,d+h.length),p=f.slice(d+h.length),r.highlighted_html=this.escape_html(o)+\"<em>\"+this.escape_html(s)+\"</em>\"+this.escape_html(p)),null!=a&&(a.group_match=!0)):null!=r.group_array_index&&this.results_data[r.group_array_index].search_match&&(r.search_match=!0)));return this.result_clear_highlight(),_<1&&h.length?(this.update_results_content(\"\"),this.no_results(h)):(this.update_results_content(this.results_option_build()),(null!=t?t.skip_highlight:void 0)?void 0:this.winnow_results_set_highlight())},t.prototype.get_search_regex=function(t){var e,s;return s=this.search_contains?t:\"(^|\\\\s|\\\\b)\"+t+\"[^\\\\s]*\",this.enable_split_word_search||this.search_contains||(s=\"^\"+s),e=this.case_sensitive_search?\"\":\"i\",new RegExp(s,e)},t.prototype.search_string_match=function(t,e){var s;return s=e.exec(t),!this.search_contains&&(null!=s?s[1]:void 0)&&(s.index+=1),s},t.prototype.choices_count=function(){var t,e,s;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,t=0,e=(s=this.form_field.options).length;t<e;t++)s[t].selected&&(this.selected_option_count+=1);return this.selected_option_count},t.prototype.choices_click=function(t){if(t.preventDefault(),this.activate_field(),!this.results_showing&&!this.is_disabled)return this.results_show()},t.prototype.keydown_checker=function(t){var e,s;switch(s=null!=(e=t.which)?e:t.keyCode,this.search_field_scale(),8!==s&&this.pending_backstroke&&this.clear_backstroke(),s){case 8:this.backstroke_length=this.get_search_field_value().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(t),this.mouse_on_container=!1;break;case 13:case 27:this.results_showing&&t.preventDefault();break;case 32:this.disable_search&&t.preventDefault();break;case 38:t.preventDefault(),this.keyup_arrow();break;case 40:t.preventDefault(),this.keydown_arrow()}},t.prototype.keyup_checker=function(t){var e,s;switch(s=null!=(e=t.which)?e:t.keyCode,this.search_field_scale(),s){case 8:this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0?this.keydown_backstroke():this.pending_backstroke||(this.result_clear_highlight(),this.results_search());break;case 13:t.preventDefault(),this.results_showing&&this.result_select(t);break;case 27:this.results_showing&&this.results_hide();break;case 9:case 16:case 17:case 18:case 38:case 40:case 91:break;default:this.results_search()}},t.prototype.clipboard_event_checker=function(t){if(!this.is_disabled)return setTimeout(function(t){return function(){return t.results_search()}}(this),50)},t.prototype.container_width=function(){return null!=this.options.width?this.options.width:this.form_field.offsetWidth+\"px\"},t.prototype.include_option_in_results=function(t){return!(this.is_multiple&&!this.display_selected_options&&t.selected)&&(!(!this.display_disabled_options&&t.disabled)&&!t.empty)},t.prototype.search_results_touchstart=function(t){return this.touch_started=!0,this.search_results_mouseover(t)},t.prototype.search_results_touchmove=function(t){return this.touch_started=!1,this.search_results_mouseout(t)},t.prototype.search_results_touchend=function(t){if(this.touch_started)return this.search_results_mouseup(t)},t.prototype.outerHTML=function(t){var e;return t.outerHTML?t.outerHTML:((e=document.createElement(\"div\")).appendChild(t),e.innerHTML)},t.prototype.get_single_html=function(){return'<a class=\"chosen-single chosen-default\">\\n  <span>'+this.default_text+'</span>\\n  <div><b></b></div>\\n</a>\\n<div class=\"chosen-drop\">\\n  <div class=\"chosen-search\">\\n    <input class=\"chosen-search-input\" type=\"text\" autocomplete=\"off\" />\\n  </div>\\n  <ul class=\"chosen-results\"></ul>\\n</div>'},t.prototype.get_multi_html=function(){return'<ul class=\"chosen-choices\">\\n  <li class=\"search-field\">\\n    <input class=\"chosen-search-input\" type=\"text\" autocomplete=\"off\" value=\"'+this.default_text+'\" />\\n  </li>\\n</ul>\\n<div class=\"chosen-drop\">\\n  <ul class=\"chosen-results\"></ul>\\n</div>'},t.prototype.get_no_results_html=function(t){return'<li class=\"no-results\">\\n  '+this.results_none_found+\" <span>\"+this.escape_html(t)+\"</span>\\n</li>\"},t.browser_is_supported=function(){return\"Microsoft Internet Explorer\"===window.navigator.appName?document.documentMode>=8:!(/iP(od|hone)/i.test(window.navigator.userAgent)||/IEMobile/i.test(window.navigator.userAgent)||/Windows Phone/i.test(window.navigator.userAgent)||/BlackBerry/i.test(window.navigator.userAgent)||/BB10/i.test(window.navigator.userAgent)||/Android.*Mobile/i.test(window.navigator.userAgent))},t.default_multiple_text=\"Select Some Options\",t.default_single_text=\"Select an Option\",t.default_no_result_text=\"No results match\",t}(),(t=jQuery).fn.extend({chosen:function(i){return e.browser_is_supported()?this.each(function(e){var n,r;r=(n=t(this)).data(\"chosen\"),\"destroy\"!==i?r instanceof s||n.data(\"chosen\",new s(this,i)):r instanceof s&&r.destroy()}):this}}),s=function(s){function n(){return n.__super__.constructor.apply(this,arguments)}return r(n,e),n.prototype.setup=function(){return this.form_field_jq=t(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex},n.prototype.set_up_html=function(){var e,s;return(e=[\"chosen-container\"]).push(\"chosen-container-\"+(this.is_multiple?\"multi\":\"single\")),this.inherit_select_classes&&this.form_field.className&&e.push(this.form_field.className),this.is_rtl&&e.push(\"chosen-rtl\"),s={\"class\":e.join(\" \"),title:this.form_field.title},this.form_field.id.length&&(s.id=this.form_field.id.replace(/[^\\w]/g,\"_\")+\"_chosen\"),this.container=t(\"<div />\",s),this.container.width(this.container_width()),this.is_multiple?this.container.html(this.get_multi_html()):this.container.html(this.get_single_html()),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find(\"div.chosen-drop\").first(),this.search_field=this.container.find(\"input\").first(),this.search_results=this.container.find(\"ul.chosen-results\").first(),this.search_field_scale(),this.search_no_results=this.container.find(\"li.no-results\").first(),this.is_multiple?(this.search_choices=this.container.find(\"ul.chosen-choices\").first(),this.search_container=this.container.find(\"li.search-field\").first()):(this.search_container=this.container.find(\"div.chosen-search\").first(),this.selected_item=this.container.find(\".chosen-single\").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior()},n.prototype.on_ready=function(){return this.form_field_jq.trigger(\"chosen:ready\",{chosen:this})},n.prototype.register_observers=function(){return this.container.on(\"touchstart.chosen\",function(t){return function(e){t.container_mousedown(e)}}(this)),this.container.on(\"touchend.chosen\",function(t){return function(e){t.container_mouseup(e)}}(this)),this.container.on(\"mousedown.chosen\",function(t){return function(e){t.container_mousedown(e)}}(this)),this.container.on(\"mouseup.chosen\",function(t){return function(e){t.container_mouseup(e)}}(this)),this.container.on(\"mouseenter.chosen\",function(t){return function(e){t.mouse_enter(e)}}(this)),this.container.on(\"mouseleave.chosen\",function(t){return function(e){t.mouse_leave(e)}}(this)),this.search_results.on(\"mouseup.chosen\",function(t){return function(e){t.search_results_mouseup(e)}}(this)),this.search_results.on(\"mouseover.chosen\",function(t){return function(e){t.search_results_mouseover(e)}}(this)),this.search_results.on(\"mouseout.chosen\",function(t){return function(e){t.search_results_mouseout(e)}}(this)),this.search_results.on(\"mousewheel.chosen DOMMouseScroll.chosen\",function(t){return function(e){t.search_results_mousewheel(e)}}(this)),this.search_results.on(\"touchstart.chosen\",function(t){return function(e){t.search_results_touchstart(e)}}(this)),this.search_results.on(\"touchmove.chosen\",function(t){return function(e){t.search_results_touchmove(e)}}(this)),this.search_results.on(\"touchend.chosen\",function(t){return function(e){t.search_results_touchend(e)}}(this)),this.form_field_jq.on(\"chosen:updated.chosen\",function(t){return function(e){t.results_update_field(e)}}(this)),this.form_field_jq.on(\"chosen:activate.chosen\",function(t){return function(e){t.activate_field(e)}}(this)),this.form_field_jq.on(\"chosen:open.chosen\",function(t){return function(e){t.container_mousedown(e)}}(this)),this.form_field_jq.on(\"chosen:close.chosen\",function(t){return function(e){t.close_field(e)}}(this)),this.search_field.on(\"blur.chosen\",function(t){return function(e){t.input_blur(e)}}(this)),this.search_field.on(\"keyup.chosen\",function(t){return function(e){t.keyup_checker(e)}}(this)),this.search_field.on(\"keydown.chosen\",function(t){return function(e){t.keydown_checker(e)}}(this)),this.search_field.on(\"focus.chosen\",function(t){return function(e){t.input_focus(e)}}(this)),this.search_field.on(\"cut.chosen\",function(t){return function(e){t.clipboard_event_checker(e)}}(this)),this.search_field.on(\"paste.chosen\",function(t){return function(e){t.clipboard_event_checker(e)}}(this)),this.is_multiple?this.search_choices.on(\"click.chosen\",function(t){return function(e){t.choices_click(e)}}(this)):this.container.on(\"click.chosen\",function(t){t.preventDefault()})},n.prototype.destroy=function(){return t(this.container[0].ownerDocument).off(\"click.chosen\",this.click_test_action),this.form_field_label.length>0&&this.form_field_label.off(\"click.chosen\"),this.search_field[0].tabIndex&&(this.form_field_jq[0].tabIndex=this.search_field[0].tabIndex),this.container.remove(),this.form_field_jq.removeData(\"chosen\"),this.form_field_jq.show()},n.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field.disabled||this.form_field_jq.parents(\"fieldset\").is(\":disabled\"),this.container.toggleClass(\"chosen-disabled\",this.is_disabled),this.search_field[0].disabled=this.is_disabled,this.is_multiple||this.selected_item.off(\"focus.chosen\",this.activate_field),this.is_disabled?this.close_field():this.is_multiple?void 0:this.selected_item.on(\"focus.chosen\",this.activate_field)},n.prototype.container_mousedown=function(e){var s;if(!this.is_disabled)return!e||\"mousedown\"!==(s=e.type)&&\"touchstart\"!==s||this.results_showing||e.preventDefault(),null!=e&&t(e.target).hasClass(\"search-choice-close\")?void 0:(this.active_field?this.is_multiple||!e||t(e.target)[0]!==this.selected_item[0]&&!t(e.target).parents(\"a.chosen-single\").length||(e.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(\"\"),t(this.container[0].ownerDocument).on(\"click.chosen\",this.click_test_action),this.results_show()),this.activate_field())},n.prototype.container_mouseup=function(t){if(\"ABBR\"===t.target.nodeName&&!this.is_disabled)return this.results_reset(t)},n.prototype.search_results_mousewheel=function(t){var e;if(t.originalEvent&&(e=t.originalEvent.deltaY||-t.originalEvent.wheelDelta||t.originalEvent.detail),null!=e)return t.preventDefault(),\"DOMMouseScroll\"===t.type&&(e*=40),this.search_results.scrollTop(e+this.search_results.scrollTop())},n.prototype.blur_test=function(t){if(!this.active_field&&this.container.hasClass(\"chosen-container-active\"))return this.close_field()},n.prototype.close_field=function(){return t(this.container[0].ownerDocument).off(\"click.chosen\",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass(\"chosen-container-active\"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale(),this.search_field.blur()},n.prototype.activate_field=function(){if(!this.is_disabled)return this.container.addClass(\"chosen-container-active\"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},n.prototype.test_active_click=function(e){var s;return(s=t(e.target).closest(\".chosen-container\")).length&&this.container[0]===s[0]?this.active_field=!0:this.close_field()},n.prototype.results_build=function(){return this.parsing=!0,this.selected_option_count=null,this.results_data=i.select_to_array(this.form_field),this.is_multiple?this.search_choices.find(\"li.search-choice\").remove():(this.single_set_selected_text(),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass(\"chosen-container-single-nosearch\")):(this.search_field[0].readOnly=!1,this.container.removeClass(\"chosen-container-single-nosearch\"))),this.update_results_content(this.results_option_build({first:!0})),this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.parsing=!1},n.prototype.result_do_highlight=function(t){var e,s,i,n,r;if(t.length){if(this.result_clear_highlight(),this.result_highlight=t,this.result_highlight.addClass(\"highlighted\"),i=parseInt(this.search_results.css(\"maxHeight\"),10),r=this.search_results.scrollTop(),n=i+r,s=this.result_highlight.position().top+this.search_results.scrollTop(),(e=s+this.result_highlight.outerHeight())>=n)return this.search_results.scrollTop(e-i>0?e-i:0);if(s<r)return this.search_results.scrollTop(s)}},n.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass(\"highlighted\"),this.result_highlight=null},n.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger(\"chosen:maxselected\",{chosen:this}),!1):(this.container.addClass(\"chosen-with-drop\"),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.get_search_field_value()),this.winnow_results(),this.form_field_jq.trigger(\"chosen:showing_dropdown\",{chosen:this}))},n.prototype.update_results_content=function(t){return this.search_results.html(t)},n.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass(\"chosen-with-drop\"),this.form_field_jq.trigger(\"chosen:hiding_dropdown\",{chosen:this})),this.results_showing=!1},n.prototype.set_tab_index=function(t){var e;if(this.form_field.tabIndex)return e=this.form_field.tabIndex,this.form_field.tabIndex=-1,this.search_field[0].tabIndex=e},n.prototype.set_label_behavior=function(){if(this.form_field_label=this.form_field_jq.parents(\"label\"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=t(\"label[for='\"+this.form_field.id+\"']\")),this.form_field_label.length>0)return this.form_field_label.on(\"click.chosen\",this.label_click_handler)},n.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass(\"default\")):(this.search_field.val(\"\"),this.search_field.removeClass(\"default\"))},n.prototype.search_results_mouseup=function(e){var s;if((s=t(e.target).hasClass(\"active-result\")?t(e.target):t(e.target).parents(\".active-result\").first()).length)return this.result_highlight=s,this.result_select(e),this.search_field.focus()},n.prototype.search_results_mouseover=function(e){var s;if(s=t(e.target).hasClass(\"active-result\")?t(e.target):t(e.target).parents(\".active-result\").first())return this.result_do_highlight(s)},n.prototype.search_results_mouseout=function(e){if(t(e.target).hasClass(\"active-result\")||t(e.target).parents(\".active-result\").first())return this.result_clear_highlight()},n.prototype.choice_build=function(e){var s,i;return s=t(\"<li />\",{\"class\":\"search-choice\"}).html(\"<span>\"+this.choice_label(e)+\"</span>\"),e.disabled?s.addClass(\"search-choice-disabled\"):((i=t(\"<a />\",{\"class\":\"search-choice-close\",\"data-option-array-index\":e.array_index})).on(\"click.chosen\",function(t){return function(e){return t.choice_destroy_link_click(e)}}(this)),s.append(i)),this.search_container.before(s)},n.prototype.choice_destroy_link_click=function(e){if(e.preventDefault(),e.stopPropagation(),!this.is_disabled)return this.choice_destroy(t(e.target))},n.prototype.choice_destroy=function(t){if(this.result_deselect(t[0].getAttribute(\"data-option-array-index\")))return this.active_field?this.search_field.focus():this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.get_search_field_value().length<1&&this.results_hide(),t.parents(\"li\").first().remove(),this.search_field_scale()},n.prototype.results_reset=function(){if(this.reset_single_select_options(),this.form_field.options[0].selected=!0,this.single_set_selected_text(),this.show_search_field_default(),this.results_reset_cleanup(),this.trigger_form_field_change(),this.active_field)return this.results_hide()},n.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find(\"abbr\").remove()},n.prototype.result_select=function(t){var e,s;if(this.result_highlight)return e=this.result_highlight,this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger(\"chosen:maxselected\",{chosen:this}),!1):(this.is_multiple?e.removeClass(\"active-result\"):this.reset_single_select_options(),e.addClass(\"result-selected\"),s=this.results_data[e[0].getAttribute(\"data-option-array-index\")],s.selected=!0,this.form_field.options[s.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(s):this.single_set_selected_text(this.choice_label(s)),this.is_multiple&&(!this.hide_results_on_select||t.metaKey||t.ctrlKey)?t.metaKey||t.ctrlKey?this.winnow_results({skip_highlight:!0}):(this.search_field.val(\"\"),this.winnow_results()):(this.results_hide(),this.show_search_field_default()),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.trigger_form_field_change({selected:this.form_field.options[s.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,t.preventDefault(),this.search_field_scale())},n.prototype.single_set_selected_text=function(t){return null==t&&(t=this.default_text),t===this.default_text?this.selected_item.addClass(\"chosen-default\"):(this.single_deselect_control_build(),this.selected_item.removeClass(\"chosen-default\")),this.selected_item.find(\"span\").html(t)},n.prototype.result_deselect=function(t){var e;return e=this.results_data[t],!this.form_field.options[e.options_index].disabled&&(e.selected=!1,this.form_field.options[e.options_index].selected=!1,this.selected_option_count=null,this.result_clear_highlight(),this.results_showing&&this.winnow_results(),this.trigger_form_field_change({deselected:this.form_field.options[e.options_index].value}),this.search_field_scale(),!0)},n.prototype.single_deselect_control_build=function(){if(this.allow_single_deselect)return this.selected_item.find(\"abbr\").length||this.selected_item.find(\"span\").first().after('<abbr class=\"search-choice-close\"></abbr>'),this.selected_item.addClass(\"chosen-single-with-deselect\")},n.prototype.get_search_field_value=function(){return this.search_field.val()},n.prototype.get_search_text=function(){return t.trim(this.get_search_field_value())},n.prototype.escape_html=function(e){return t(\"<div/>\").text(e).html()},n.prototype.winnow_results_set_highlight=function(){var t,e;if(e=this.is_multiple?[]:this.search_results.find(\".result-selected.active-result\"),null!=(t=e.length?e.first():this.search_results.find(\".active-result\").first()))return this.result_do_highlight(t)},n.prototype.no_results=function(t){var e;return e=this.get_no_results_html(t),this.search_results.append(e),this.form_field_jq.trigger(\"chosen:no_results\",{chosen:this})},n.prototype.no_results_clear=function(){return this.search_results.find(\".no-results\").remove()},n.prototype.keydown_arrow=function(){var t;return this.results_showing&&this.result_highlight?(t=this.result_highlight.nextAll(\"li.active-result\").first())?this.result_do_highlight(t):void 0:this.results_show()},n.prototype.keyup_arrow=function(){var t;return this.results_showing||this.is_multiple?this.result_highlight?(t=this.result_highlight.prevAll(\"li.active-result\")).length?this.result_do_highlight(t.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight()):void 0:this.results_show()},n.prototype.keydown_backstroke=function(){var t;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find(\"a\").first()),this.clear_backstroke()):(t=this.search_container.siblings(\"li.search-choice\").last()).length&&!t.hasClass(\"search-choice-disabled\")?(this.pending_backstroke=t,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass(\"search-choice-focus\")):void 0},n.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass(\"search-choice-focus\"),this.pending_backstroke=null},n.prototype.search_field_scale=function(){var e,s,i,n,r,o,h;if(this.is_multiple){for(r={position:\"absolute\",left:\"-1000px\",top:\"-1000px\",display:\"none\",whiteSpace:\"pre\"},s=0,i=(o=[\"fontSize\",\"fontStyle\",\"fontWeight\",\"fontFamily\",\"lineHeight\",\"textTransform\",\"letterSpacing\"]).length;s<i;s++)r[n=o[s]]=this.search_field.css(n);return(e=t(\"<div />\").css(r)).text(this.get_search_field_value()),t(\"body\").append(e),h=e.width()+25,e.remove(),this.container.is(\":visible\")&&(h=Math.min(this.container.outerWidth()-10,h)),this.search_field.width(h)}},n.prototype.trigger_form_field_change=function(t){return this.form_field_jq.trigger(\"input\",t),this.form_field_jq.trigger(\"change\",t)},n}()}).call(this);","Sm_AutoCompleteSearch/js/autocomplete.js":"define([\"jquery\", \"uiComponent\", \"ko\"], function ($, Component, ko) {\n    \"use strict\";\n\n    return Component.extend({\n        defaults: {\n            template: \"Sm_AutoCompleteSearch/autocomplete\",\n            addToCartFormSelector:\n                \"[data-role=smautocomplete-tocart-form]\",\n            showPopup: ko.observable(false),\n            result: {\n                suggest: {\n                    data: ko.observableArray([]),\n                },\n                product: {\n                    data: ko.observableArray([]),\n                    size: ko.observable(0),\n                    url: ko.observable(\"\"),\n                },\n            },\n            anyResultCount: false,\n        },\n\n        initialize: function () {\n            var self = this;\n            this._super();\n\n            this.anyResultCount = ko.computed(function () {\n                var sum =\n                    self.result.suggest.data().length +\n                    self.result.product.data().length;\n                if (sum > 0) {\n                    return true;\n                }\n                return false;\n            }, this);\n        },\n    });\n});\n","Sm_AutoCompleteSearch/js/bindEvents.js":"define([\n    'jquery',\n    'uiComponent',\n    'uiRegistry',\n    'mageUtils'\n], function ($, Component, registry, utils) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            minSearchLength: 2\n        },\n\n        initialize: function () {\n            this._super();\n\n            utils.limit(this, 'load', this.searchDelay); // execute 'load' after delay\n\n            $(this.inputSelector)\n               // .unbind('input') // unbind all magento events\n                .on('input', $.proxy(this.load, this)) // bind searchsuiteautocomplete load event\n                .on('input', $.proxy(this.searchButtonStatus, this)) // bind show/hide search button event\n                .on('focus', $.proxy(this.showPopup, this)); // bind show popup event\n            $(document).on('click', $.proxy(this.hidePopup, this)); // bind hide popup event\n\n            $(document).ready($.proxy(this.searchButtonStatus, this));\n        },\n\n        load: function (event) {\n            var self = this;\n            var searchText = $(self.inputSelector).val();\n\n            if (searchText.length < self.minSearchLength) {\n                return false;\n            }\n\n            registry.get('searchsuiteautocompleteDataProvider', function (dataProvider) {\n                dataProvider.searchText = searchText;\n                dataProvider.load();\n            });\n        },\n\n        showPopup: function (event) {\n            var self = this,\n                searchField = $(self.inputSelector),\n                searchFieldHasFocus = searchField.is(':focus') && searchField.val().length >= self.minSearchLength;\n\n            registry.get('smautocomplete_form', function (autocomplete) {\n                autocomplete.showPopup(searchFieldHasFocus);\n            });\n        },\n\n        hidePopup: function (event) {\n            if ($(this.searchFormSelector).has($(event.target)).length <= 0) {\n                registry.get('smautocomplete_form', function (autocomplete) {\n                    autocomplete.showPopup(false);\n                });\n            }\n        },\n\n        searchButtonStatus: function (event) {\n            var self = this,\n                searchField = $(self.inputSelector),\n                searchButton = $(self.searchFormSelector + ' ' + self.searchButtonSelector),\n                searchButtonDisabled = (searchField.val().length > 0) ? false : true;\n\n            searchButton.attr('disabled', searchButtonDisabled);\n        },\n\n        spinnerShow: function () {\n            var spinner = $(this.searchFormSelector);\n            spinner.addClass('loading');\n        },\n\n        spinnerHide: function () {\n            var spinner = $(this.searchFormSelector);\n            spinner.removeClass('loading');\n        }\n\n    });\n});\n","Sm_AutoCompleteSearch/js/dataProvider.js":"define([\n    'jquery',\n    'uiComponent',\n    'uiRegistry',\n    'underscore',\n    'jquery/jquery-storageapi'\n], function ($, Component, registry, _) {\n    'use strict';\n\n    $.Suggestion = function (data) {\n        this.url = data.url;\n        this.title = data.title;\n        this.num_results = data.num_results;\n    };\n\n    $.Product = function (data) {\n        this.name = data.name;\n        this.sku = data.sku;\n        this.image = data.image;\n        this.reviews_rating = data.reviews_rating;\n        this.short_description = data.short_description;\n        this.description = data.description;\n        this.price = data.price;\n        this.url = data.url;\n        this.add_to_cart = data.add_to_cart;\n    };\n\n    return Component.extend({\n        defaults: {\n            localStorage: $.initNamespaceStorage(\"searchsuiteautocomplete\")\n                .localStorage,\n            searchText: \"\",\n        },\n\n        load: function () {\n            var self = this;\n\n            if (this.xhr) {\n                this.xhr.abort();\n            }\n\n            this.xhr = $.ajax({\n                method: \"get\",\n                dataType: \"json\",\n                url: this.url,\n                data: { q: this.searchText },\n                beforeSend: function () {\n                    self.spinnerShow();\n                    if (self.loadFromLocalSorage(self.searchText)) {\n                        self.showPopup();\n                    }\n                },\n                success: $.proxy(function (response) {\n                    self.parseData(response);\n                    self.saveToLocalSorage(response, self.searchText);\n                    self.spinnerHide();\n                    self.showPopup();\n                }),\n            });\n        },\n\n        showPopup: function () {\n            registry.get(\n                \"searchsuiteautocompleteBindEvents\",\n                function (binder) {\n                    binder.showPopup();\n                }\n            );\n        },\n\n        spinnerShow: function () {\n            registry.get(\n                \"searchsuiteautocompleteBindEvents\",\n                function (binder) {\n                    binder.spinnerShow();\n                }\n            );\n        },\n\n        spinnerHide: function () {\n            registry.get(\n                \"searchsuiteautocompleteBindEvents\",\n                function (binder) {\n                    binder.spinnerHide();\n                }\n            );\n        },\n\n        parseData: function (response) {\n            this.setSuggested(this.getResponseData(response, \"suggest\"));\n            this.setProducts(this.getResponseData(response, \"product\"));\n        },\n\n        getResponseData: function (response, code) {\n            var data = [];\n\n            if (_.isUndefined(response.result)) {\n                return data;\n            }\n\n            $.each(response.result, function (index, obj) {\n                if (obj.code == code) {\n                    data = obj;\n                }\n            });\n\n            return data;\n        },\n\n        setSuggested: function (suggestedData) {\n            var suggested = [];\n\n            if (!_.isUndefined(suggestedData.data)) {\n                suggested = $.map(suggestedData.data, function (suggestion) {\n                    return new $.Suggestion(suggestion);\n                });\n            }\n\n            registry.get(\n                \"smautocomplete_form\",\n                function (autocomplete) {\n                    autocomplete.result.suggest.data(suggested);\n                }\n            );\n        },\n\n        setProducts: function (productsData) {\n            var products = [];\n\n            if (!_.isUndefined(productsData.data)) {\n                products = $.map(productsData.data, function (product) {\n                    return new $.Product(product);\n                });\n            }\n\n            registry.get(\n                \"smautocomplete_form\",\n                function (autocomplete) {\n                    autocomplete.result.product.data(products);\n                    autocomplete.result.product.size(productsData.size);\n                    autocomplete.result.product.url(productsData.url);\n                }\n            );\n        },\n\n        loadFromLocalSorage: function (queryText) {\n            if (!this.localStorage) {\n                return;\n            }\n\n            var hash = this._hash(queryText);\n            var data = this.localStorage.get(hash);\n\n            if (!data) {\n                return false;\n            }\n\n            this.parseData(data);\n\n            return true;\n        },\n\n        saveToLocalSorage: function (data, queryText) {\n            if (!this.localStorage) {\n                return;\n            }\n\n            var hash = this._hash(queryText);\n\n            this.localStorage.remove(hash);\n            this.localStorage.set(hash, data);\n        },\n\n        _hash: function (object) {\n            var string = JSON.stringify(object) + \"\";\n\n            var hash = 0,\n                i,\n                chr,\n                len;\n            if (string.length == 0) {\n                return hash;\n            }\n            for (i = 0, len = string.length; i < len; i++) {\n                chr = string.charCodeAt(i);\n                hash = (hash << 5) - hash + chr;\n                hash |= 0;\n            }\n            return \"h\" + hash;\n        },\n    });\n});\n","Sm_BundleImage/js/bundle-image.js":"define([\n        \"jquery\",\n        \"Magento_Ui/js/modal/modal\",\n        \"printThis\",\n        \"mage/translate\",\n        \"mage/validation\",\n        \"domReady!\"\n    ],\n    function ($, modal) {\n        var imgNotSelected = $(\"#bundle-attr-data\").data(\"no-selected\");\n        var quickviewlabel = $(\"#bundle-attr-data\").data(\"quickview-label\");\n        var quickViewEnable = $(\"#bundle-attr-data\").data(\"check-quickview\");\n        var printFile = $(\"#bundle-attr-data\").data(\"style\");\n\n        /**\n         * Select\n         */\n\n        /** Set image default **/\n        $(\".fieldset-bundle-options .bundle-option-select\").each(function () {\n            var imgUrl = $(this).find(':selected').data('image');\n            var productUrl = $(this).find(':selected').data('url');\n            $(this).closest(\".control\").children(\".child-bundle-items\").find(\"img\").attr(\"src\", imgUrl);\n            if (productUrl) {\n                $(this).closest(\".control\").children(\".child-bundle-items\").find(\".bundle-image\").attr(\"href\", productUrl);\n            }\n\n            $(this).change(function () {\n                var value = $(this).val();\n                var quickViewUrl = \"\";\n                if (value) {\n                    imgUrl = this.selectedOptions[0].getAttribute(\"data-image\");\n                    productUrl = this.selectedOptions[0].getAttribute(\"data-url\");\n                    quickViewUrl = this.selectedOptions[0].getAttribute(\"data-quickview-url\");\n\n                    if (imgUrl != null) {\n                        $(this).closest(\".control\").children(\".child-bundle-items\").find(\".item\").removeClass(\"no-select\");\n                        $(this).closest(\".control\").children(\".child-bundle-items\").find(\"img\").attr(\"src\", imgUrl);\n                    }\n\n                    if (productUrl != null) {\n                        $(this).closest(\".control\").children(\".child-bundle-items\").find(\".bundle-image\").attr(\"href\", productUrl);\n                        $(this).closest(\".control\").children(\".child-bundle-items\").removeClass(\"no-quickview\");\n                        $(this).closest(\".control\").children(\".child-bundle-items\").find(\".bundle-quickview\").attr(\"href\", quickViewUrl).addClass(\"quickview-handler sm_quickview_handler\");\n                    } else {\n                        $(this).closest(\".control\").children(\".child-bundle-items\").find(\".bundle-image\").attr(\"href\", productUrl);\n                        $(this).closest(\".control\").children(\".child-bundle-items\").addClass(\"no-quickview\");\n                    }\n                } else {\n                    $(this).closest(\".control\").children(\".child-bundle-items\").find(\".item\").addClass(\"no-select\");\n                    $(this).closest(\".control\").children(\".child-bundle-items\").find(\"img\").attr(\"src\", imgNotSelected);\n                    $(this).closest(\".control\").children(\".child-bundle-items\").find(\".bundle-image\").attr(\"href\", \"javascript:void(0)\");\n                }\n            });\n        });\n\n        /**\n         * Multi select\n         */\n\n        $(\".fieldset-bundle-options .multiselect\").each(function () {\n            var imgUrl;\n            var itemHtml;\n\n            $(this).change(function () {\n                itemHtml = \"\";\n                $(this).find(\":selected\").each(function () {\n                    imgUrl = $(this).data(\"image\");\n                    var productUrl = $(this).data(\"url\");\n                    var quickViewUrl = $(this).data(\"quickview-url\");\n                    var quickViewHtml = \"\";\n\n                    if (typeof productUrl === \"undefined\") {\n                        itemHtml = itemHtml + '<div class=\"item\">' +\n                            '<a class=\"bundle-image\" target=\"_blank\" href=\"javascript:void(0)\"><img src=\"' + imgUrl + '\" /></a>' +\n                            '</div>'\n                    } else {\n                        if (quickViewEnable == \"enable-quickview\") {\n                            quickViewHtml = '<a class=\"bundle-quickview action quickview-handler sm_quickview_handler\" href=\"' + quickViewUrl + '\">' + quickviewlabel + '</a>';\n                        } else {\n                            quickViewHtml = \"\";\n                        }\n\n                        itemHtml = itemHtml + '<div class=\"item\">' +\n                            '<a class=\"bundle-image\" target=\"_blank\" href=\"' + productUrl + '\"><img src=\"' + imgUrl + '\" /></a>' + quickViewHtml + '</div>'\n                    }\n                });\n\n                if (itemHtml) {\n                    $(this).closest(\".control\").find(\".child-bundle-items .item\").remove();\n                    $(this).closest(\".control\").find(\".child-bundle-items\").append(itemHtml);\n                } else {\n                    $(this).closest(\".control\").find(\".child-bundle-items .item\").remove();\n                    $(this).closest(\".control\").find(\".child-bundle-items\").append(\n                        '<div class=\"item no-select\"><a class=\"bundle-image\" href=\"javascript:void(0)\"><img src=\"' + imgNotSelected + '\" /></a></div>'\n                    );\n                }\n\n            })\n        });\n\n        /** Set image default **/\n        $(\".fieldset-bundle-options .multiselect\").each(function () {\n            var imgUrl;\n            var itemHtml = \"\";\n            var productUrl = \"\";\n            var quickViewUrl = \"\";\n            var quickViewHtml = \"\";\n            $(this).find(\":selected\").each(function () {\n                imgUrl = $(this).data(\"image\");\n                productUrl = $(this).data(\"url\");\n                quickViewUrl = $(this).data(\"quickview-url\");\n\n                if (typeof productUrl === \"undefined\") {\n                    itemHtml = itemHtml + '<div class=\"item\">' +\n                        '<a class=\"bundle-image\" target=\"_blank\" href=\"javascript:void(0)\"><img src=\"' + imgUrl + '\" /></a>' +\n                        '</div>'\n                } else {\n                    if (quickViewEnable == \"enable-quickview\") {\n                        quickViewHtml = '<a class=\"bundle-quickview action quickview-handler sm_quickview_handler\" href=\"' + quickViewUrl + '\">' + quickviewlabel + '</a>';\n                    } else {\n                        quickViewHtml = \"\";\n                    }\n\n                    itemHtml = itemHtml + '<div class=\"item\">' +\n                        '<a class=\"bundle-image\" target=\"_blank\" href=\"' + productUrl + '\"><img src=\"' + imgUrl + '\" /></a>' + quickViewHtml + '</div>'\n                }\n            });\n            if (itemHtml) {\n                $(this).closest(\".control\").find(\".child-bundle-items .item\").remove();\n                $(this).closest(\".control\").find(\".child-bundle-items\").append(itemHtml);\n            }\n        });\n\n        /**\n         * Modal view config\n         */\n\n        var popupBundle;\n\n        if ($(\"#popup-modal-bundle\").length) {\n            var options = {\n                type: 'popup',\n                responsive: true,\n                innerScroll: true,\n                title: $.mage.__('Your Configuration'),\n                modalClass: 'sm-bundle-modal',\n                buttons: []\n            };\n\n            popupBundle = modal(options, $('#popup-modal-bundle'));\n\n            $(\"#button-view-config\").on('click', function (e) {\n                e.preventDefault();\n                /** Append data **/\n                $(\".block-bundle-summary .price-as-configured\").clone().appendTo('#bundle-custom-price');\n                $(\"#bundle-summary .bundle.items\").clone().appendTo('#bundle-product-config');\n                $(\"#config-bundle-container .page.messages .messages\").find(\".message\").remove();\n\n                $(\"#popup-modal-bundle\").modal(\"openModal\");\n                $(\"#message-bundle\").css({\"display\": \"none\"});\n            });\n\n            /** Remove data after closed modal **/\n\n            $('#popup-modal-bundle').on('modalclosed', function () {\n                $(\"#bundle-custom-price,#bundle-product-config\").html(\"\");\n            });\n        }\n\n\n        /**\n         * Bundle trigger add to cart\n         */\n\n        var mageError = $.mage.__('Please select required option.');\n        var defaultText = $.mage.__('Add to Cart');\n        var addingText = $.mage.__('Adding...');\n        var addedText = $.mage.__('Added');\n        var checkButton;\n        var checkSuccessMes;\n        var dataForm = $('#product_addtocart_form');\n\n        $(\"#bundle-trigger\").on('click', function (e) {\n            e.preventDefault();\n            var validForm = dataForm.validation('isValid');\n\n            if (validForm) {\n                $(\"#bundleSummary .tocart\").trigger(\"click\");\n                $(\"#bundle-trigger\").addClass(\"loading\").find(\"span\").html(addingText);\n                clearInterval(checkButton);\n                checkSuccessMes = setInterval(checkSuccess, 100);\n            } else {\n                $(\"#message-bundle .error.message span\").html(mageError);\n                $(\"#message-bundle\").addClass(\"msg-error\").removeClass(\"msg-success\").css({\"display\": \"block\"});\n            }\n        });\n\n        function checkSuccess() {\n            if ($(\"#config-bundle-container .page.messages .success.message\").length) {\n                $(\"#bundle-trigger\").removeClass(\"loading\").find(\"span\").html(addedText);\n                clearInterval(checkSuccessMes);\n                setTimeout(function () {\n                    $(\"#bundle-trigger\").removeClass(\"loading\").find(\"span\").html(defaultText);\n                }, 500);\n            }\n        }\n\n        /**\n         * Trigger rating\n         */\n\n        $(\"#config-bundle-container .product-reviews-summary .action.add\").attr(\"href\", \"javascript:void(0)\");\n        $(\"#config-bundle-container .product-reviews-summary .action.view\").attr(\"href\", \"javascript:void(0)\");\n\n        $(\"#config-bundle-container .product-reviews-summary .action.add\").on('click', function () {\n            $(\".sm-bundle-modal .modal-header .action-close\").trigger(\"click\");\n            setTimeout(function () {\n                $(\".product-info-main .product-reviews-summary .action.add\").trigger(\"click\");\n            }, 500);\n        });\n\n        $(\"#config-bundle-container .product-reviews-summary .action.view\").on('click', function () {\n            $(\".sm-bundle-modal .modal-header .action-close\").trigger(\"click\");\n            setTimeout(function () {\n                $(\".product-info-main .product-reviews-summary .action.view\").trigger(\"click\");\n            }, 500);\n        });\n\n        /**\n         * Print\n         */\n\n        $(\"#bundle-print\").on('click', function () {\n            $(\"#config-bundle-container\").printThis({\n                importCSS: false,\n                loadCSS: printFile\n            });\n        });\n    });","Sm_BundleImage/js/printThis.js":"/*\n * printThis v1.15.1\n * @desc Printing plug-in for jQuery\n * @author Jason Day\n *\n * Resources (based on):\n * - jPrintArea: http://plugins.jquery.com/project/jPrintArea\n * - jqPrint: https://github.com/permanenttourist/jquery.jqprint\n * - Ben Nadal: http://www.bennadel.com/blog/1591-Ask-Ben-Print-Part-Of-A-Web-Page-With-jQuery.htm\n *\n * Licensed under the MIT licence:\n *              http://www.opensource.org/licenses/mit-license.php\n *\n * (c) Jason Day 2015-2019\n *\n * Usage:\n *\n *  $(\"#mySelector\").printThis({\n *      debug: false,                   // show the iframe for debugging\n *      importCSS: true,                // import parent page css\n *      importStyle: false,             // import style tags\n *      printContainer: true,           // grab outer container as well as the contents of the selector\n *      loadCSS: \"path/to/my.css\",      // path to additional css file - use an array [] for multiple\n *      pageTitle: \"\",                  // add title to print page\n *      removeInline: false,            // remove all inline styles from print elements\n *      removeInlineSelector: \"body *\", // custom selectors to filter inline styles. removeInline must be true\n *      printDelay: 333,                // variable print delay\n *      header: null,                   // prefix to html\n *      footer: null,                   // postfix to html\n *      base: false,                    // preserve the BASE tag, or accept a string for the URL\n *      formValues: true,               // preserve input/form values\n *      canvas: false,                  // copy canvas elements\n *      doctypeString: '...',           // enter a different doctype for older markup\n *      removeScripts: false,           // remove script tags from print content\n *      copyTagClasses: false           // copy classes from the html & body tag\n *      beforePrintEvent: null,         // callback function for printEvent in iframe\n *      beforePrint: null,              // function called before iframe is filled\n *      afterPrint: null                // function called before iframe is removed\n *  });\n *\n * Notes:\n *  - the loadCSS will load additional CSS (with or without @media print) into the iframe, adjusting layout\n */\n;\n(function($) {\n\n    function appendContent($el, content) {\n        if (!content) return;\n\n        // Simple test for a jQuery element\n        $el.append(content.jquery ? content.clone() : content);\n    }\n\n    function appendBody($body, $element, opt) {\n        // Clone for safety and convenience\n        // Calls clone(withDataAndEvents = true) to copy form values.\n        var $content = $element.clone(opt.formValues);\n\n        if (opt.formValues) {\n            // Copy original select and textarea values to their cloned counterpart\n            // Makes up for inability to clone select and textarea values with clone(true)\n            copyValues($element, $content, 'select, textarea');\n        }\n\n        if (opt.removeScripts) {\n            $content.find('script').remove();\n        }\n\n        if (opt.printContainer) {\n            // grab $.selector as container\n            $content.appendTo($body);\n        } else {\n            // otherwise just print interior elements of container\n            $content.each(function() {\n                $(this).children().appendTo($body)\n            });\n        }\n    }\n\n    // Copies values from origin to clone for passed in elementSelector\n    function copyValues(origin, clone, elementSelector) {\n        var $originalElements = origin.find(elementSelector);\n\n        clone.find(elementSelector).each(function(index, item) {\n            $(item).val($originalElements.eq(index).val());\n        });\n    }\n\n    var opt;\n    $.fn.printThis = function(options) {\n        opt = $.extend({}, $.fn.printThis.defaults, options);\n        var $element = this instanceof jQuery ? this : $(this);\n\n        var strFrameName = \"printThis-\" + (new Date()).getTime();\n\n        if (window.location.hostname !== document.domain && navigator.userAgent.match(/msie/i)) {\n            // Ugly IE hacks due to IE not inheriting document.domain from parent\n            // checks if document.domain is set by comparing the host name against document.domain\n            var iframeSrc = \"javascript:document.write(\\\"<head><script>document.domain=\\\\\\\"\" + document.domain + \"\\\\\\\";</s\" + \"cript></head><body></body>\\\")\";\n            var printI = document.createElement('iframe');\n            printI.name = \"printIframe\";\n            printI.id = strFrameName;\n            printI.className = \"MSIE\";\n            document.body.appendChild(printI);\n            printI.src = iframeSrc;\n\n        } else {\n            // other browsers inherit document.domain, and IE works if document.domain is not explicitly set\n            var $frame = $(\"<iframe id='\" + strFrameName + \"' name='printIframe' />\");\n            $frame.appendTo(\"body\");\n        }\n\n        var $iframe = $(\"#\" + strFrameName);\n\n        // show frame if in debug mode\n        if (!opt.debug) $iframe.css({\n            position: \"absolute\",\n            width: \"0px\",\n            height: \"0px\",\n            left: \"-600px\",\n            top: \"-600px\"\n        });\n\n        // before print callback\n        if (typeof opt.beforePrint === \"function\") {\n            opt.beforePrint();\n        }\n\n        // $iframe.ready() and $iframe.load were inconsistent between browsers\n        setTimeout(function() {\n\n            // Add doctype to fix the style difference between printing and render\n            function setDocType($iframe, doctype){\n                var win, doc;\n                win = $iframe.get(0);\n                win = win.contentWindow || win.contentDocument || win;\n                doc = win.document || win.contentDocument || win;\n                doc.open();\n                doc.write(doctype);\n                doc.close();\n            }\n\n            if (opt.doctypeString){\n                setDocType($iframe, opt.doctypeString);\n            }\n\n            var $doc = $iframe.contents(),\n                $head = $doc.find(\"head\"),\n                $body = $doc.find(\"body\"),\n                $base = $('base'),\n                baseURL;\n\n            // add base tag to ensure elements use the parent domain\n            if (opt.base === true && $base.length > 0) {\n                // take the base tag from the original page\n                baseURL = $base.attr('href');\n            } else if (typeof opt.base === 'string') {\n                // An exact base string is provided\n                baseURL = opt.base;\n            } else {\n                // Use the page URL as the base\n                baseURL = document.location.protocol + '//' + document.location.host;\n            }\n\n            $head.append('<base href=\"' + baseURL + '\">');\n\n            // import page stylesheets\n            if (opt.importCSS) $(\"link[rel=stylesheet]\").each(function() {\n                var href = $(this).attr(\"href\");\n                if (href) {\n                    var media = $(this).attr(\"media\") || \"all\";\n                    $head.append(\"<link type='text/css' rel='stylesheet' href='\" + href + \"' media='\" + media + \"'>\");\n                }\n            });\n\n            // import style tags\n            if (opt.importStyle) $(\"style\").each(function() {\n                $head.append(this.outerHTML);\n            });\n\n            // add title of the page\n            if (opt.pageTitle) $head.append(\"<title>\" + opt.pageTitle + \"</title>\");\n\n            // import additional stylesheet(s)\n            if (opt.loadCSS) {\n                if ($.isArray(opt.loadCSS)) {\n                    jQuery.each(opt.loadCSS, function(index, value) {\n                        $head.append(\"<link type='text/css' rel='stylesheet' href='\" + this + \"'>\");\n                    });\n                } else {\n                    $head.append(\"<link type='text/css' rel='stylesheet' href='\" + opt.loadCSS + \"'>\");\n                }\n            }\n\n            var pageHtml = $('html')[0];\n\n            // CSS VAR in html tag when dynamic apply e.g.  document.documentElement.style.setProperty(\"--foo\", bar);\n            $doc.find('html').prop('style', pageHtml.style.cssText);\n\n            // copy 'root' tag classes\n            var tag = opt.copyTagClasses;\n            if (tag) {\n                tag = tag === true ? 'bh' : tag;\n                if (tag.indexOf('b') !== -1) {\n                    $body.addClass($('body')[0].className);\n                }\n                if (tag.indexOf('h') !== -1) {\n                    $doc.find('html').addClass(pageHtml.className);\n                }\n            }\n\n            // print header\n            appendContent($body, opt.header);\n\n            if (opt.canvas) {\n                // add canvas data-ids for easy access after cloning.\n                var canvasId = 0;\n                // .addBack('canvas') adds the top-level element if it is a canvas.\n                $element.find('canvas').addBack('canvas').each(function(){\n                    $(this).attr('data-printthis', canvasId++);\n                });\n            }\n\n            appendBody($body, $element, opt);\n\n            if (opt.canvas) {\n                // Re-draw new canvases by referencing the originals\n                $body.find('canvas').each(function(){\n                    var cid = $(this).data('printthis'),\n                        $src = $('[data-printthis=\"' + cid + '\"]');\n\n                    this.getContext('2d').drawImage($src[0], 0, 0);\n\n                    // Remove the markup from the original\n                    if ($.isFunction($.fn.removeAttr)) {\n                        $src.removeAttr('data-printthis');\n                    } else {\n                        $.each($src, function(i, el) {\n                            el.removeAttribute('data-printthis');\n                        });\n                    }\n                });\n            }\n\n            // remove inline styles\n            if (opt.removeInline) {\n                // Ensure there is a selector, even if it's been mistakenly removed\n                var selector = opt.removeInlineSelector || '*';\n                // $.removeAttr available jQuery 1.7+\n                if ($.isFunction($.removeAttr)) {\n                    $body.find(selector).removeAttr(\"style\");\n                } else {\n                    $body.find(selector).attr(\"style\", \"\");\n                }\n            }\n\n            // print \"footer\"\n            appendContent($body, opt.footer);\n\n            // attach event handler function to beforePrint event\n            function attachOnBeforePrintEvent($iframe, beforePrintHandler) {\n                var win = $iframe.get(0);\n                win = win.contentWindow || win.contentDocument || win;\n\n                if (typeof beforePrintHandler === \"function\") {\n                    if ('matchMedia' in win) {\n                        win.matchMedia('print').addListener(function(mql) {\n                            if(mql.matches)  beforePrintHandler();\n                        });\n                    } else {\n                        win.onbeforeprint = beforePrintHandler;\n                    }\n                }\n            }\n            attachOnBeforePrintEvent($iframe, opt.beforePrintEvent);\n\n            setTimeout(function() {\n                if ($iframe.hasClass(\"MSIE\")) {\n                    // check if the iframe was created with the ugly hack\n                    // and perform another ugly hack out of neccessity\n                    window.frames[\"printIframe\"].focus();\n                    $head.append(\"<script>  window.print(); </s\" + \"cript>\");\n                } else {\n                    // proper method\n                    if (document.queryCommandSupported(\"print\")) {\n                        $iframe[0].contentWindow.document.execCommand(\"print\", false, null);\n                    } else {\n                        $iframe[0].contentWindow.focus();\n                        $iframe[0].contentWindow.print();\n                    }\n                }\n\n                // remove iframe after print\n                if (!opt.debug) {\n                    setTimeout(function() {\n                        $iframe.remove();\n\n                    }, 1000);\n                }\n\n                // after print callback\n                if (typeof opt.afterPrint === \"function\") {\n                    opt.afterPrint();\n                }\n\n            }, opt.printDelay);\n\n        }, 333);\n\n    };\n\n    // defaults\n    $.fn.printThis.defaults = {\n        debug: false,               // show the iframe for debugging\n        importCSS: true,            // import parent page css\n        importStyle: false,         // import style tags\n        printContainer: true,       // print outer container/$.selector\n        loadCSS: \"\",                // path to additional css file - use an array [] for multiple\n        pageTitle: \"\",              // add title to print page\n        removeInline: false,        // remove inline styles from print elements\n        removeInlineSelector: \"*\",  // custom selectors to filter inline styles. removeInline must be true\n        printDelay: 333,            // variable print delay\n        header: null,               // prefix to html\n        footer: null,               // postfix to html\n        base: false,                // preserve the BASE tag or accept a string for the URL\n        formValues: true,           // preserve input/form values\n        canvas: false,              // copy canvas content\n        doctypeString: '<!DOCTYPE html>', // enter a different doctype for older markup\n        removeScripts: false,       // remove script tags from print content\n        copyTagClasses: false,      // copy classes from the html & body tag\n        beforePrintEvent: null,     // callback function for printEvent in iframe\n        beforePrint: null,          // function called before iframe is filled\n        afterPrint: null            // function called before iframe is removed\n    };\n})(jQuery);\n","Sm_CartQuickPro/js/custom-addtocart.js":"/**\r\n *\r\n * SM CartQuickPro - Version 1.4.0\r\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\r\n * @license - Copyrighted Commercial Software\r\n * Author: YouTech Company\r\n * Websites: http://www.magentech.com\r\n */\r\n\r\ndefine([\r\n\t'jquery',\r\n\t'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/confirm',\r\n\t'customModal',\r\n\t'domReady!'\r\n], function($, alert, confirm, customModal) {\r\n\t\t\"use strict\";\r\n\t\t$.widget('cartQuickPro.ajaxCart',{\r\n\t\t\toptions: {\r\n\t\t\t\tisEnabled: false,\r\n\t\t\t\tisAjaxCart: false,\r\n\t\t\t\tisCheckoutPage: false,\r\n\t\t\t\turlLogin:'',\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\taddUrl: '',\r\n\t\t\t\turlCurrent: '',\r\n\t\t\t\tminicartSelector: '[data-block=\"minicart\"]',\r\n\t\t\t\tisUpdateConfigure: false,\r\n\t\t\t\tisCompareIndex: false,\r\n\t\t\t\tisProductView: false,\r\n\t\t\t\tisWishlistPage: false,\r\n\t\t\t\taddToWishlist: '.action.towishlist, #wishlist-sidebar .btn-remove.action.delete , .wishlist .btn-remove.action.delete, .wishlist .action.edit, .action.towishlist.updated , #wishlist-view-form .action.update, .use-ajax.action.action-towishlist ',\r\n\t\t\t\tformWishlist : '#wishlist-view-form',\r\n\t\t\t\terrorMessage: $.mage.__('Error occurred. Try to refresh page.'),\r\n\t\t\t\twishlistMessage: $.mage.__('You must login first!'),\r\n\t\t\t\taddToCartSelector: '.action.tocart ,  .action.action-edit , .action.action-delete ',\r\n\t\t\t\tcartContainerSelector: '.cart-container',\r\n\t\t\t\tbtnToCompareSelector: '.action.tocompare, #product-comparison a.action.delete, #compare-items a.action.delete , #compare-clear-all',\r\n\t\t\t\tbtnActionPrintCompare: '.action.print',\r\n\t\t\t\ttableCompare: '.catalog-product_compare-index .table-wrapper.comparison',\r\n\t\t\t\tcolMainCompare: '.catalog-product_compare-index .column.main',\r\n\t\t\t\tdeleteCompareSelector: '#product-comparison .action.delete, #compare-items .action.delete',\r\n\t\t\t\tremoveConfirmMessageCompare : $.mage.__( \"Are you sure you want to remove this item from your Compare Products list?\"),\r\n\t\t\t\tclearAllConfirmMessageCompare: $.mage.__(\"Are you sure you want to remove all items from your Compare Products list?\"),\r\n\t\t\t\tcountDownNumber: 20,\r\n\t\t\t\ttimeSetHeight: 0,\r\n\t\t\t\ttimeCountDown: 0,\r\n\t\t\t\temailSelector: '.action.mailto.friend',\r\n\t\t\t\tclsModalPopup: '.smcqp-modal-popup',\r\n\t\t\t\tclsInerWrap: '.smcqp-modal-popup .modal-inner-wrap',\r\n\t\t\t\tidContainer: '#smcqp-container',\r\n\t\t\t\tclsLoading: 'smcqp-loading',\r\n\t\t\t\tclsLoadMark: '#smcqp-container .loading-mask',\r\n\t\t\t\tidIframe: 'smcqp-iframe',\r\n\t\t\t\tidReport: '#smcqp-report',\r\n\t\t\t\tclsMessages: '#smcqp-report .smcqp-messages',\r\n\t\t\t\tidContents: '#smcqp-contents',\r\n\t\t\t\tbtnContinue: '.smcqp-continue',\r\n\t\t\t\tbtnLink: '.smcqp-btn'\r\n\r\n\t\t\t},\r\n\t\t\t _create: function () {\r\n\t\t\t\tif (this.options.isAjaxCart){\r\n\t\t\t\t    this._initAjaxCart();\r\n\t\t\t\t\tthis._initAjaxCompare();\r\n\t\t\t\t\tthis._initAjaxWishlist();\r\n\t\t\t\t\tthis._isEmailOnQuickView();\r\n\t\t\t\t}\r\n\t\t\t\twindow.ajaxCart = this;\r\n\t\t\t},\r\n\t\t\t_isWindowParent : function (){\r\n\t\t\t\tif (window.self !== window.parent){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\t_isCheckoutPage : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif (_self._isWindowParent())\r\n\t\t\t\t\treturn window.parent.ajaxCart.options.isCheckoutPage;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn _options.isCheckoutPage;\r\n\t\t\t},\r\n\t\t\t_isComparePage : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif (_self._isWindowParent())\r\n\t\t\t\t\treturn window.parent.ajaxCart.options.isCompareIndex;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn _options.isCompareIndex;\r\n\t\t\t},\r\n\t\t\t_isWishlistPage : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif (_self._isWindowParent())\r\n\t\t\t\t\treturn window.parent.ajaxCart.options.isWishlistPage;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn _options.isWishlistPage;\r\n\t\t\t},\r\n\r\n\t\t\t_initAjaxWishlist: function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t\r\n\t\t\t\t$('body').off('click', _options.addToWishlist).on('click', _options.addToWishlist, function (e){\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar _that = $(this), _params = '', _oldAction = '', _isaddtocart = false,\r\n\t\t\t\t\t\t_dataPost = (typeof _that.attr('data-post') !== 'undefined') ? $.parseJSON(_that.attr('data-post')) : null; \r\n\t\t\t\t\t\t_dataPost = (typeof _that.attr('data-post-remove') !== 'undefined') ? $.parseJSON(_that.attr('data-post-remove')) : _dataPost;\r\n\t\t\t\t\t\t_dataPost = (_dataPost == null) ? _that.attr('href'): _dataPost;\r\n\t\t\t\t\tif (_that.is('.use-ajax.action.action-towishlist')){\r\n\t\t\t\t\t\t_isaddtocart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!_options.isLoggedIn){\r\n\t\t\t\t\t\tif (_self._isWindowParent()){\r\n\t\t\t\t\t\t\twindow.parent.ajaxCart._closeModalParent(e);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t$('.action.towishlist').removeAttr(\"data-post\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif (_that.is('#wishlist-view-form .action.update')){\r\n\t\t\t\t\t\t\tvar _form = $(this).parents('form') ;\r\n\t\t\t\t\t\t\t_oldAction = _form.attr('action');\r\n\t\t\t\t\t\t\t_params = _form.serialize();\r\n\t\t\t\t\t\t\tif (_params.search('&form_key') == -1){\r\n\t\t\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\t\t\t_params += '&form_key=' + _formKey;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params , _isaddtocart);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif (_dataPost && typeof _dataPost == 'object') {\r\n\t\t\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\t\t\t_params += (typeof _dataPost.data.product !== 'undefined' ? '&product=' + _dataPost.data.product : '');\r\n\t\t\t\t\t\t\t\t_params += (typeof _dataPost.data.item !== 'undefined' ? '&item=' + _dataPost.data.item : '');\r\n\t\t\t\t\t\t\t\t_params += (typeof _dataPost.data.id !== 'undefined' ? '&id=' + _dataPost.data.id : '');\r\n\t\t\t\t\t\t\t\t_params += '&form_key=' + _formKey + '&uenc=' + _dataPost.data.uenc;\r\n\t\t\t\t\t\t\t\t_oldAction = _dataPost.action;\r\n\t\t\t\t\t\t\t\tif (_options.isProductView) {\r\n\t\t\t\t\t\t\t\t\twindow.parent.ajaxCart._sendAjax(_oldAction, _params , _isaddtocart);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params , _isaddtocart);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t_self._requestQuickview(_dataPost);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\r\n\t\t\t},\r\n\t\t\t_initAjaxCompare: function(){\r\n\t\t\t\tvar _self = this ,\r\n\t\t\t\t\t_options = _self.options;\r\n\t\t\t\t\t/** For Button Print **/\r\n\t\t\t\t\t $('body.catalog-product_compare-index').off('click', _options.btnActionPrintCompare).on('click', _options.btnActionPrintCompare, function (e){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\twindow.print();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/** For Button Add, Clear, Remove  **/\r\n\t\t\t\t\t$('body').off('click', _options.btnToCompareSelector).on('click', _options.btnToCompareSelector, function (e){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tvar _that = $(this), _params = '', _oldAction = '',\r\n\t\t\t\t\t\t\t_dataPost = $.parseJSON(_that.attr('data-post'));\r\n\t\t\t\t\t\tif (_dataPost) {\r\n\t\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\t\t_params += 'product=' + _dataPost.data.product + '&form_key=' + _formKey + '&uenc=' + _dataPost.data.uenc;\r\n\t\t\t\t\t\t\t_oldAction = _dataPost.action;\r\n\t\t\t\t\t\t\tif (_that.is('.action.delete') || _that.is('#compare-clear-all')){\r\n\t\t\t\t\t\t\t\t\tconfirm({\r\n\t\t\t\t\t\t\t\t\t\tmodalClass: 'smcqp-confirm',\r\n\t\t\t\t\t\t\t\t\t\tcontent: _that.is('#compare-clear-all') ? _options.clearAllConfirmMessageCompare : _options.removeConfirmMessageCompare,\r\n\t\t\t\t\t\t\t\t\t\tactions: {\r\n\t\t\t\t\t\t\t\t\t\t\tconfirm: function () {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params);\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\talways: function (event) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif (_options.isProductView) {\r\n\t\t\t\t\t\t\t\t\twindow.parent.ajaxCart._sendAjax(_oldAction, _params);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t_isEmailOnQuickView : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif (_self._isWindowParent()){\r\n\t\t\t\t\t$('body').off('click', _options.emailSelector).on('click', _options.emailSelector, function (e){\r\n\t\t\t\t\t\twindow.parent.location = $(this).attr('href');\r\n\t\t\t\t\t\twindow.parent.ajaxCart._closeModalSelf();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_initAjaxCart: function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$('body').off('click sumit', _options.addToCartSelector).on('click', _options.addToCartSelector , function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar _that = $(this), _form = $(this).parents('form') , _isCheck = _form.length ? true : false, _isValid = true , _params = '', _oldAction = '';\r\n\r\n\t\t\t\t\tif (_isCheck && !_form.is(_options.formWishlist) && !_that.is('.action.action-delete') && !_that.is('.action.action-edit')){\r\n\t\t\t\t\t\tif (_form.is('.form.shared.wishlist'))\r\n\t\t\t\t\t\t\treturn ;\r\n\t\t\t\t\t\tif (_form.attr('data-role') == 'tocart-form'){\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t_isValid = _form.valid();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (_isValid){\r\n\t\t\t\t\t\t\t_oldAction = _form.attr('action');\r\n\t\t\t\t\t\t\t_params = _form.serialize();\r\n\t\t\t\t\t\t\tif (_params.search('&form_key') == -1){\r\n\t\t\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\t\t\t_params += '&form_key=' + _formKey;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (_options.isProductView) {\r\n\t\t\t\t\t\t\t\tif (_form.has('input[type=\"file\"]').length && _form.find('input[type=\"file\"]').val() !== '') {\r\n\t\t\t\t\t\t\t\t\treturn _form.submit();\r\n\t\t\t\t\t\t\t\t\t setTimeout(function(){  window.parent.ajaxCart._showLoader();}, 500);\r\n\t\t\t\t\t\t\t\t\treturn  window.parent.location.href = window.parent.checkout.shoppingCartUrl;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\twindow.parent.ajaxCart._sendAjax(_oldAction, _params, true);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif (_form.has('input[type=\"file\"]').length && _form.find('input[type=\"file\"]').val() !== '') {\r\n\t\t\t\t\t\t\t\t\t return _form.submit();\r\n\t\t\t\t\t\t\t\t\t return setTimeout(function(){ _self._showLoader(); window.location.href = window.checkout.shoppingCartUrl;}, 500);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (_that.is('.action.action-edit')){\r\n\t\t\t\t\t\t\t\t\tvar _url =  _that.attr('href');\r\n\t\t\t\t\t\t\t\t\t_self._requestQuickview(_url);\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params , true);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// var _dataPost = $.parseJSON($(this).attr('data-post'));\r\n\t\t\t\t\t\tvar _dataPost = (typeof _that.attr('data-post') !== 'undefined') ? $.parseJSON(_that.attr('data-post')) : null;\r\n\t\t\t\t\t\t if (_dataPost) {\r\n\t\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\t\t_params += (typeof _dataPost.data.product !== 'undefined' ? '&product=' + _dataPost.data.product : '');\r\n\t\t\t\t\t\t\t_params += (typeof _dataPost.data.item !== 'undefined' ? '&item=' + _dataPost.data.item : '');\r\n\t\t\t\t\t\t\t_params += (typeof _dataPost.data.id !== 'undefined' ? '&id=' + _dataPost.data.id : '');\r\n\t\t\t\t\t\t\t_params +=  '&form_key=' + _formKey + '&uenc=' + _dataPost.data.uenc;\r\n\t\t\t\t\t\t\tvar _dataPost2 =  _that.data('post');\r\n\t\t\t\t\t\t\tif (_dataPost2){\r\n\t\t\t\t\t\t\t\t_params += (typeof _dataPost2.data.qty !== 'undefined' ? '&qty=' + _dataPost2.data.qty : '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t_oldAction = _dataPost.action;\r\n\t\t\t\t\t\t\t_self._sendAjax(_oldAction, _params, true );\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (_that.is('.action.action-edit')){\r\n\t\t\t\t\t\t\t\tvar _url =  _that.attr('href');\r\n\t\t\t\t\t\t\t\t_self._requestQuickview(_url);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t_closeModalParent : function (e){\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$(_options.idContainer).customModal(\"closeModal\");\r\n\t\t\t\t_self._comfirmForWishlist(e);\r\n\t\t\t},\r\n\t\t\t_comfirmForWishlist : function (event) {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\treturn confirm({\r\n\t\t\t\t\tmodalClass: 'smcqp-confirm',\r\n\t\t\t\t\tcontent: _options.wishlistMessage ,\r\n\t\t\t\t\tactions: {\r\n\t\t\t\t\t\tconfirm: function () {\r\n\t\t\t\t\t\t\twindow.location.href = _options.urlLogin;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\talways: function (event) {\r\n\t\t\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t_showLoader : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$(_options.idContainer).customModal(\"openModal\");\r\n\t\t\t},\r\n\r\n\t\t\t_hideLoader : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$(_options.clsLoadMark).hide();\r\n                $(_options.clsInerWrap).removeClass(_options.clsLoading).removeClass('report-messages');\r\n\t\t\t\t$(_options.clsMessages).html('').removeClass('msg-success msg-error');\r\n\t\t\t},\r\n\t\t\t_checkBtnLink : function (json) {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$(_options.btnLink).removeClass('smcqp-open');\r\n\t\t\t\tif (typeof json.isAddToCartBtn !== 'undefined' && json.isAddToCartBtn){\r\n\t\t\t\t\t$(_options.btnLink+'.smcqp-view-cart').addClass('smcqp-open');\r\n\t\t\t\t}else if (typeof json.isCompareBtn !== 'undefined' && json.isCompareBtn){\r\n\t\t\t\t\t$(_options.btnLink+'.smcqp-view-compare').addClass('smcqp-open');\r\n\t\t\t\t}else if (typeof json.isWishlistBtn !== 'undefined' && json.isWishlistBtn){\r\n\t\t\t\t\t$(_options.btnLink+'.smcqp-view-wishlist').addClass('smcqp-open');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_afterAjax: function (json){\r\n\t\t\t\tvar _self = this , _options = _self.options, _msg = json.messages;\r\n\t\t\t\t$(_options.idReport).show();\r\n\t\t\t\t_self._hideLoader();\r\n\t\t\t\t_self._checkBtnLink(json);\r\n\t\t\t\t$(_options.clsInerWrap).addClass('report-messages');\r\n\t\t\t\t$(_options.clsMessages).html(_msg);\r\n\t\t\t\tif (json.success){\r\n\t\t\t\t\t$(_options.clsMessages).addClass('msg-success');\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$(_options.clsMessages).addClass('msg-error');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof json.isPageCheckoutContent  !== 'undefined' && json.isPageCheckoutContent){\r\n\t\t\t\t\tvar _content = $(json.content).html();\r\n\t\t\t\t\tif ($('form.form.form-cart', $(json.content)).length){\r\n\t\t\t\t\t\t$('form.form.form-cart',$(_options.cartContainerSelector )).replaceWith($(json.content).html());\r\n\t\t\t\t\t\t$('form.form.form-cart',$(_options.cartContainerSelector )).prepend('<input name=\"form_key\" type=\"hidden\" value=\"'+$.mage.cookies.get('form_key')+'\">');\r\n\t\t\t\t\t\tvar deferred = $.Deferred();\r\n\t\t\t\t\t\t require(['Magento_Checkout/js/action/get-totals'], function (getTotalsAction) {\r\n\t\t\t\t\t\t\t getTotalsAction([], deferred);\r\n\t\t\t\t\t\t });\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t$(_options.cartContainerSelector ).replaceWith($(json.content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof json.isComparePageContent  !== 'undefined' && json.isComparePageContent){\r\n\t\t\t\t\t$(_options.btnActionPrintCompare ).remove();\r\n\t\t\t\t\t$(_options.tableCompare ).replaceWith($(json.content));\r\n\t\t\t\t\t/*$(json.content).appendTo($(_options.colMainCompare));*/\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof json.isWishlistPageContent !== 'undefined' &&  json.isWishlistPageContent){\r\n\t\t\t\t\t$('.toolbar.wishlist-toolbar').remove();\r\n\t\t\t\t\t$('script#form-tmpl').remove()\r\n\t\t\t\t\t$(_options.formWishlist).replaceWith($(json.content));\r\n\t\t\t\t}\r\n\t\t\t\tif(_options.countDownNumber){\r\n\t\t\t\t\t_self._closeBoxComfim(_options.countDownNumber);\r\n\t\t\t\t}\r\n\t\t\t\t_self._clickContinue();\r\n\t\t\t},\r\n\t\t\t_clickContinue : function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$('body').off('click', _options.btnContinue).on('click', _options.btnContinue, function (e){\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t_self._closeModalSelf();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t_prepareUrl: function (url){\r\n\t\t\t\tif (typeof url !=='undefined' && url !== null){\r\n\t\t\t\t\tif (url.search('checkout/cart') !== -1){\r\n\t\t\t\t\t\treturn url = url.replace('checkout/cart', 'cartquickpro/cart');\r\n\t\t\t\t\t}else if (url.search('wishlist/index') !== -1){\r\n\t\t\t\t\t\treturn url = url.replace('wishlist/index', 'cartquickpro/wishlist_index')\r\n\t\t\t\t\t}else if (url.search('catalog/product_compare')!== -1){\r\n\t\t\t\t\t\treturn url = url.replace('catalog/product_compare', 'cartquickpro/product_compare')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn url;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_sendAjax: function (oldAction, data, isaddtocart) {\r\n\t\t\t\tisaddtocart = isaddtocart || false;\r\n\t\t\t\tvar _self = this , _options = _self.options , _url_basic = oldAction , _url_ajax = oldAction;\r\n\t\t\t\tif (oldAction.search('options=cart') !== -1){\r\n\t\t\t\t\t_url_ajax = _self.options.addUrl;\r\n\t\t\t\t}\r\n\t\t\t\tif (_self._isCheckoutPage()){\r\n\t\t\t\t\tdata += '&isCheckoutPage=1';\r\n\t\t\t\t}else if (_self._isComparePage()){\r\n\t\t\t\t\tdata += '&isComparePage=1';\r\n\t\t\t\t}else if (_self._isWishlistPage()){\r\n\t\t\t\t\tdata += '&isWishlistPage=1';\r\n\t\t\t\t}\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\ttype: 'post',\r\n\t\t\t\t\turl: _self._prepareUrl(_url_ajax),\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tbeforeSend: function (){\r\n\t\t\t\t\t\tif (isaddtocart){\r\n\t\t\t\t\t\t\t$(_options.minicartSelector).trigger('contentLoading');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_self._showLoader();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: function (data) {},\r\n\t\t\t\t\tcomplete: function () {},\r\n\t\t\t\t\terror: function () {\r\n\t\t\t\t\t}\r\n\t\t\t\t}).done(function (json){\r\n\t\t\t\t\tif (typeof json.url !== 'undefined' && json.url !== null){\r\n\t\t\t\t\t\t_self._requestQuickview(json.url);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_self._afterAjax(json);\r\n\t\t\t\t\t\tif (isaddtocart){\r\n\t\t\t\t\t\t\t$(_options.minicartSelector).trigger('contentUpdated');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$(document).trigger(\"afterAjaxProductsLoaded\");\r\n\t\t\t\t\t\t$(document).trigger(\"afterAjaxLazyLoad\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}).fail(function (error) {\r\n\t\t\t\t\tconsole.log(JSON.stringify(error));\r\n\t\t\t\t\t$(_options.idContainer).customModal(\"closeModal\");\r\n\t\t\t\t\talert({\r\n\t\t\t\t\t\tmodalClass: 'smcqp-confirm',\r\n\t\t\t\t\t\tcontent: _options.errorMessage ,\r\n\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\tactions: {\r\n\t\t\t\t\t\t\talways: function (event) {\r\n\t\t\t\t\t\t\t\tvar e = typeof event !== 'undefined' ? event :jQuery.Event( \"click\" );\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\twindow.location.href = _options.urlCurrent;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n                });\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\t_closeBoxComfim : function (_time) {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif (_time){\r\n\t\t\t\t\t_time = _time - 1;\r\n\t\t\t\t\t$(_options.btnContinue).attr('data-count',_time);\r\n\t\t\t\t\t_options.timeCountDown = setTimeout(function() {\r\n\t\t\t\t\t\tif(typeof _options.timeCountDown !== \"undefined\"){\r\n\t\t\t\t\t\t\t  window.clearTimeout(_options.timeCountDown);\r\n\t\t\t\t\t\t\t  _options.timeCountDown = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_self._closeBoxComfim(_time);\r\n\t\t\t\t\t}, 1000);\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\t_self._closeModalSelf();\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\t_closeModalSelf : function (){\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tif(typeof _options.timeCountDown !== \"undefined\"){\r\n\t\t\t\t\t  window.clearTimeout(_options.timeCountDown);\r\n\t\t\t\t\t  _options.timeCountDown = 0;\r\n\t\t\t\t}\r\n\t\t\t\t$(_options.idContainer).customModal(\"closeModal\");\r\n\t\t\t},\r\n\r\n\t\t\t_requestQuickview : function (_link){\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tvar _url = _self._prepareUrl(_link);\r\n\t\t\t\t\t_url =  _url.substr(_url.length - 1) == '/' ?  _url.substring(0,_url.length - 1) : _url;\r\n\t\t\t\t\t$(_options.idContainer).customModal(\"openModal\");\r\n\t\t\t\t\t$(_options.clsInerWrap).addClass('smcqp-options');\r\n\t\t\t\tif ($('#'+_options.idIframe).length){\r\n\t\t\t\t\t$('#'+_options.idIframe).remove();\r\n\t\t\t\t}\r\n\t\t\t\tvar ifr=$('<iframe/>', {\r\n\t\t\t\t\tid:_options.idIframe,\r\n\t\t\t\t\tsrc:_url+\"/randtime/\" + new Date().getTime(),\r\n\t\t\t\t\tscrolling: 'no',\r\n\t\t\t\t\tframeborder:0,\r\n\t\t\t\t\twidth:'100%',\r\n\t\t\t\t\theight: '301px',\r\n\r\n\t\t\t\t});\r\n\t\t\t\tifr.on('load', function(){\r\n\t\t\t\t\t\t_self._hideLoader();\r\n\t\t\t\t\t\t$(_options.idContents).show();\r\n\t\t\t\t\t\t_self.setHeightIframe(ifr);\r\n\t\t\t\t})\r\n\t\t\t\t$(_options.idContents).append(ifr);\r\n\t\t\t\t$(_options.idContents).trigger('contentUpdated');\r\n\r\n\t\t\t},\r\n\t\t\tsetHeightIframe: function(ifr) {\r\n\t\t\t\tvar _self = this , _options = _self.options,\r\n\t\t\t\t\t_time = _self.options.timeSetHeight ,\r\n\t\t\t\t\t_ifr = document.getElementById(_options.idIframe);\r\n\t\t\t\tif (typeof ifr === 'undefined' || ifr === null || typeof _ifr === 'undefined' || _ifr === null) return;\r\n\t\t\t\t\tvar ifr_height = _ifr.getAttribute('height'),\r\n\t\t\t\t\t\t_content = _ifr.contentWindow;\r\n\t\t\t\t\tif (typeof _content === 'undefined' || _content === null || _content.document.body === null) return;\r\n\t\t\t\t\tvar _content_temp = _content.document.body.scrollHeight;\r\n\t\t\t\t\tvar _diff = window.innerHeight - _content_temp ;\r\n\t\t\t\t\tvar _content_height = _diff >0 ? _content_temp  : window.innerHeight - 100;\r\n\t\t\t\t\tif (typeof _content_temp !== 'undefined') {\r\n\t\t\t\t\t\tif (ifr.height() !== _content_temp){\r\n\t\t\t\t\t\t\tifr.height(_content_temp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tif (_time == 'undefined') _time = 0;\r\n\t\t\t\tclearTimeout(_time);\r\n\t\t\t\t_time = setTimeout(function() {\r\n\t\t\t\t\t_self.setHeightIframe(ifr);\r\n\t\t\t\t}, 500);\r\n\t\t\t},\r\n\r\n\t\t});\r\n    return $.cartQuickPro.ajaxCart;\r\n});\r\n","Sm_CartQuickPro/js/custom-compare.js":"/**\n *\n * SM CartQuickPro - Version 1.4.0\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\n * @license - Copyrighted Commercial Software\n * Author: YouTech Company\n * Websites: http://www.magentech.com\n */\ndefine([\n    \"jquery\",\n    'jquery-ui-modules/widget',\n    \"mage/decorate\",\n\t\"ajaxCart\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.compareItems', {\n        _create: function() {\n            this.element.decorate('list', true);\n            this._confirm(this.options.removeSelector, this.options.removeConfirmMessage);\n            this._confirm(this.options.clearAllSelector, this.options.clearAllConfirmMessage);\n        },\n\n        /**\n         * Set up a click event on the given selector to display a confirmation request message\n         * and ask for that confirmation.\n         * @param selector Selector for the confirmation on click event\n         * @param message Message to display asking for confirmation to perform action\n         * @private\n         */\n        _confirm: function(selector, message) {\n\t\t\tif (typeof ajaxCart !== 'undefined' && !ajaxCart.options.isAjaxCart){\n\t\t\t\t$(selector).on('click', function() {\n\t\t\t\t\treturn confirm(message);\n\t\t\t\t});\n\t\t\t}\n        }\n    });\n\n    return $.mage.compareItems;\n});\n","Sm_CartQuickPro/js/custom-modal.js":"/**\r\n *\r\n * SM CartQuickPro - Version 1.4.0\r\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\r\n * @license - Copyrighted Commercial Software\r\n * Author: YouTech Company\r\n * Websites: http://www.magentech.com\r\n */\r\n \r\ndefine(['jquery',  'Magento_Ui/js/modal/modal'],\r\n\tfunction($) {\r\n\t\t\"use strict\";\r\n\t\t$.widget('cartQuickPro.customModal', $.mage.modal, {\r\n\t\t\t options: {\r\n\t\t\t\tclsModalPopup: '.smcqp-modal-popup',\r\n\t\t\t\tclsInerWrap: '.smcqp-modal-popup .modal-inner-wrap',\r\n\t\t\t\tclsLoadMark: '#smcqp-container .loading-mask',\r\n\t\t\t\tidContents: '#smcqp-contents',\r\n\t\t\t\tidReport: '#smcqp-report'\r\n\t\t\t },\r\n\t\t\t_init: function() {\r\n\t\t\t\tthis._super();\r\n\t\t\t},\r\n\t\t\topenModal: function() {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\tvar _el = $('.smcqp-modal-popup');\r\n\t\t\t\t$(_options.clsInerWrap).removeClass(\"smcqp-options report-messages\");\r\n\t\t\t\t$(_options.clsInerWrap).addClass(\"smcqp-loading\");\r\n\t\t\t\t$(_options.clsLoadMark).show();\r\n\t\t\t\t$(_options.idContents).html('').hide();\r\n\t\t\t\treturn this._super();\r\n\t\t\t},\r\n\t\t\tcloseModal: function () {\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$(_options.idContents).html('').hide();\r\n\t\t\t\t$(_options.idReport).hide();\r\n\t\t\t\tif(typeof window.ajaxCart !== \"undefined\" && typeof window.ajaxCart.options.timeCountDown !== \"undefined\"){\r\n\t\t\t\t\t  window.clearTimeout(window.ajaxCart.options.timeCountDown);\r\n\t\t\t\t\t  window.ajaxCart.options.timeCountDown = 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._super();\r\n\t\t\t},\r\n\t\t});\r\n    return $.cartQuickPro.customModal;\r\n});\r\n\t\t","Sm_CartQuickPro/js/custom-msrp.js":"/**\n *\n * SM CartQuickPro - Version 1.4.0\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\n * @license - Copyrighted Commercial Software\n * Author: YouTech Company\n * Websites: http://www.magentech.com\n */\n \ndefine([\n 'jquery',\n    'Magento_Catalog/js/price-utils',\n    'underscore',\n    'jquery-ui-modules/widget',\n    'mage/dropdown',\n    'mage/template',\n\t'ajaxCart'\n], function ($, priceUtils, _) {\n    'use strict';\n\n    $.widget('mage.addToCart', {\n        options: {\n            showAddToCart: true,\n            submitUrl: '',\n            cartButtonId: '',\n            singleOpenDropDown: true,\n            dialog: {}, // Options for mage/dropdown\n            dialogDelay: 500, // Delay in ms after resize dropdown shown again\n            origin: '', //Required, type of popup: 'msrp', 'tier' or 'info' popup\n\n            // Selectors\n            cartForm: '.form.map.checkout',\n            msrpLabelId: '#map-popup-msrp',\n            priceLabelId: '#map-popup-price',\n            popUpAttr: '[data-role=msrp-popup-template]',\n            popupCartButtonId: '#map-popup-button',\n            paypalCheckoutButons: '[data-action=checkout-form-submit]',\n            popupId: '',\n            realPrice: '',\n            isSaleable: '',\n            msrpPrice: '',\n            helpLinkId: '',\n            addToCartButton: '',\n\n            // Text options\n            productName: '',\n            addToCartUrl: ''\n        },\n\n        openDropDown: null,\n        triggerClass: 'dropdown-active',\n\n        popUpOptions: {\n            appendTo: 'body',\n            dialogContentClass: 'active',\n            closeOnMouseLeave: false,\n            autoPosition: true,\n            closeOnClickOutside: false,\n            'dialogClass': 'popup map-popup-wrapper',\n            position: {\n                my: 'left top',\n                collision: 'fit none',\n                at: 'left bottom',\n                within: 'body'\n            },\n            shadowHinter: 'popup popup-pointer'\n        },\n        popupOpened: false,\n\n        /**\n         * Creates widget instance\n         * @private\n         */\n        _create: function () {\n            if (this.options.origin === 'msrp') {\n                this.initMsrpPopup();\n            } else if (this.options.origin === 'info') {\n                this.initInfoPopup();\n            } else if (this.options.origin === 'tier') {\n                this.initTierPopup();\n            }\n\t\t\tif (typeof ajaxCart !== 'undefined' && !ajaxCart.options.isAjaxCart){\n\t\t\t\t$(this.options.cartButtonId).on('click', this._addToCartSubmit.bind(this));\n\t\t\t}\n            $(document).on('updateMsrpPriceBlock', this.onUpdateMsrpPrice.bind(this));\n            $(this.options.cartForm).on('submit', this._onSubmitForm.bind(this));\n\t\t   \n        },\n\n        /**\n         * Init msrp popup\n         * @private\n         */\n        initMsrpPopup: function () {\n            var popupDOM = $(this.options.popUpAttr)[0],\n                $msrpPopup = $(popupDOM.innerHTML.trim());\n\n            $msrpPopup.find(this.options.productIdInput).val(this.options.productId);\n            $('body').append($msrpPopup);\n            $msrpPopup.trigger('contentUpdated');\n\n            $msrpPopup.find('button')\n                .on('click',\n                this.handleMsrpAddToCart.bind(this))\n                .filter(this.options.popupCartButtonId)\n                .text($(this.options.addToCartButton).text());\n\n            $msrpPopup.find(this.options.paypalCheckoutButons).on('click',\n                this.handleMsrpPaypalCheckout.bind(this));\n\n            $(this.options.popupId).on('click',\n                this.openPopup.bind(this));\n\n            this.$popup = $msrpPopup;\n        },\n\n        /**\n         * Init info popup\n         * @private\n         */\n        initInfoPopup: function () {\n            var infoPopupDOM = $('[data-role=msrp-info-template]')[0],\n                $infoPopup = $(infoPopupDOM.innerHTML.trim());\n\n            $('body').append($infoPopup);\n\n            $(this.options.helpLinkId).on('click', function (e) {\n                this.popUpOptions.position.of = $(e.target);\n                $infoPopup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\n                this._toggle($infoPopup);\n            }.bind(this));\n\n            this.$popup = $infoPopup;\n        },\n\n        /**\n         * Init tier price popup\n         * @private\n         */\n        initTierPopup: function () {\n            var popupDOM = $(this.options.popUpAttr)[0],\n                $tierPopup = $(popupDOM.innerHTML.trim());\n\n            $('body').append($tierPopup);\n            $tierPopup.find(this.options.productIdInput).val(this.options.productId);\n            this.popUpOptions.position.of = $(this.options.helpLinkId);\n\n            $tierPopup.find('button').on('click',\n                this.handleTierAddToCart.bind(this))\n                .filter(this.options.popupCartButtonId)\n                .text($(this.options.addToCartButton).text());\n\n            $tierPopup.find(this.options.paypalCheckoutButons).on('click',\n                this.handleTierPaypalCheckout.bind(this));\n\n            $(this.options.attr).on('click', function (e) {\n                this.$popup = $tierPopup;\n                this.tierOptions = $(e.target).data('tier-price');\n                this.openPopup(e);\n            }.bind(this));\n        },\n\n        /**\n         * handle 'AddToCart' click on Msrp popup\n         * @param {Object} ev\n         *\n         * @private\n         */\n        handleMsrpAddToCart: function (ev) {\n            ev.preventDefault();\n\n            if (this.options.addToCartButton) {\n                $(this.options.addToCartButton).click();\n                this.closePopup(this.$popup);\n            }\n        },\n\n        /**\n         * handle 'paypal checkout buttons' click on Msrp popup\n         *\n         * @private\n         */\n        handleMsrpPaypalCheckout: function () {\n            this.closePopup(this.$popup);\n        },\n\n        /**\n         * handle 'AddToCart' click on Tier popup\n         *\n         * @param {Object} ev\n         * @private\n         */\n        handleTierAddToCart: function (ev) {\n            ev.preventDefault();\n\n            if (this.options.addToCartButton &&\n                this.options.inputQty && !isNaN(this.tierOptions.qty)\n            ) {\n                $(this.options.inputQty).val(this.tierOptions.qty);\n                $(this.options.addToCartButton).click();\n                this.closePopup(this.$popup);\n            }\n        },\n\n        /**\n         * handle 'paypal checkout buttons' click on Tier popup\n         *\n         * @private\n         */\n        handleTierPaypalCheckout: function () {\n            if (this.options.inputQty && !isNaN(this.tierOptions.qty)\n            ) {\n                $(this.options.inputQty).val(this.tierOptions.qty);\n                this.closePopup(this.$popup);\n            }\n        },\n\n        /**\n         * Open and set up popup\n         *\n         * @param {Object} event\n         */\n        openPopup: function (event) {\n            var options = this.tierOptions || this.options;\n\n            this.popUpOptions.position.of = $(event.target);\n            this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\n            this.$popup.find(this.options.priceLabelId).html(options.realPrice);\n            this.$popup.dropdownDialog(this.popUpOptions).dropdownDialog('open');\n            this._toggle(this.$popup);\n\n            if (!this.options.isSaleable) {\n                this.$popup.find('form').hide();\n            }\n        },\n\n        /**\n         *\n         * @param {HTMLElement} $elem\n         * @private\n         */\n        _toggle: function ($elem) {\n            $(document).on('mouseup.msrp touchend.msrp', function (e) {\n                if (!$elem.is(e.target) && $elem.has(e.target).length === 0) {\n                    this.closePopup($elem);\n                }\n            }.bind(this));\n            $(window).on('resize', function () {\n                this.closePopup($elem);\n            }.bind(this));\n        },\n\n        /**\n         *\n         * @param {HTMLElement} $elem\n         */\n        closePopup: function ($elem) {\n            $elem.dropdownDialog('close');\n            $(document).off('mouseup.msrp touchend.msrp');\n        },\n\n        /**\n         * Handler for addToCart action\n         */\n        _addToCartSubmit: function () {\n            this.element.trigger('addToCart', this.element);\n\n            if (this.element.data('stop-processing')) {\n                return false;\n            }\n\n            if (this.options.addToCartButton) {\n                $(this.options.addToCartButton).click();\n\n                return false;\n            }\n\n            if (this.options.addToCartUrl) {\n                $('.mage-dropdown-dialog > .ui-dialog-content').dropdownDialog('close');\n            }\n            $(this.options.cartForm).submit();\n\n        },\n\t\t\n\t\t/**\n         * Call on event updatePrice. Proxy to updateMsrpPrice method.\n         *\n         * @param {Event} event\n         * @param {mixed} priceIndex\n         * @param {Object} prices\n         */\n        onUpdateMsrpPrice: function onUpdateMsrpPrice(event, priceIndex, prices) {\n\n            var defaultMsrp,\n                defaultPrice,\n                msrpPrice,\n                finalPrice;\n\n            defaultMsrp = _.chain(prices).map(function (price) {\n                return price.msrpPrice.amount;\n            }).reject(function (p) {\n                return p === null;\n            }).max().value();\n\n            defaultPrice = _.chain(prices).map(function (p) {\n                return p.finalPrice.amount;\n            }).min().value();\n\n            if (typeof priceIndex !== 'undefined') {\n                msrpPrice = prices[priceIndex].msrpPrice.amount;\n                finalPrice = prices[priceIndex].finalPrice.amount;\n\n                if (msrpPrice === null || msrpPrice <= finalPrice) {\n                    this.updateNonMsrpPrice(priceUtils.formatPrice(finalPrice));\n                } else {\n                    this.updateMsrpPrice(\n                        priceUtils.formatPrice(finalPrice),\n                        priceUtils.formatPrice(msrpPrice),\n                        false);\n                }\n            } else {\n                this.updateMsrpPrice(\n                    priceUtils.formatPrice(defaultPrice),\n                    priceUtils.formatPrice(defaultMsrp),\n                    true);\n            }\n        },\n\n        /**\n         * Update prices for configurable product with MSRP enabled\n         *\n         * @param {String} finalPrice\n         * @param {String} msrpPrice\n         * @param {Boolean} useDefaultPrice\n         */\n        updateMsrpPrice: function (finalPrice, msrpPrice, useDefaultPrice) {\n            var options = this.tierOptions || this.options;\n\n            $(this.options.fallbackPriceContainer).hide();\n            $(this.options.displayPriceContainer).show();\n            $(this.options.mapInfoLinks).show();\n\n            if (useDefaultPrice || !this.wasOpened) {\n                this.$popup.find(this.options.msrpLabelId).html(options.msrpPrice);\n                this.$popup.find(this.options.priceLabelId).html(options.realPrice);\n                $(this.options.displayPriceElement).html(msrpPrice);\n                this.wasOpened = true;\n            }\n\n            if (!useDefaultPrice) {\n                this.$popup.find(this.options.msrpPriceElement).html(msrpPrice);\n                this.$popup.find(this.options.priceElement).html(finalPrice);\n                $(this.options.displayPriceElement).html(msrpPrice);\n            }\n        },\n\n        /**\n         * Display non MAP price for irrelevant products\n         *\n         * @param {String} price\n         */\n        updateNonMsrpPrice: function (price) {\n            $(this.options.fallbackPriceElement).html(price);\n            $(this.options.displayPriceContainer).hide();\n            $(this.options.mapInfoLinks).hide();\n            $(this.options.fallbackPriceContainer).show();\n        },\n\n        /**\n         * Handler for submit form\n         *\n         * @private\n         */\n        _onSubmitForm: function () {\n            if ($(this.options.cartForm).valid()) {\n                $(this.options.cartButtonId).prop('disabled', true);\n            }\n        }\n    });\n\n    return $.mage.addToCart;\n});\n","Sm_CartQuickPro/js/custom-quickview.js":"/**\r\n *\r\n * SM CartQuickPro - Version 1.4.0\r\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\r\n * @license - Copyrighted Commercial Software\r\n * Author: YouTech Company\r\n * Websites: http://www.magentech.com\r\n */\r\n \r\ndefine(['jquery',  \r\n\t\t'customModal' , \r\n\t\t'mage/dataPost'],\r\n\tfunction($, customModal){\r\n\t\t;(function($) {\r\n\t\t\tfunction QuickView(element, options) {\r\n\t\t\t\tthis.options = $.extend({}, QuickView.Defaults , options);\r\n\t\t\t\tthis.$element = $(element);\r\n\t\t\t\tthis._plugins = {};\r\n\t\t\t\t$.each(QuickView.Plugins, $.proxy(function(key, plugin) {\r\n\t\t\t\t\tthis._plugins[key[0].toLowerCase() + key.slice(1)]\r\n\t\t\t\t\t\t= new plugin(this);\r\n\t\t\t\t}, this));\r\n\t\t\t\tthis.initialize();\r\n\t\t\t\tif (this.options.isQuickView){\r\n\t\t\t\t\tthis.requestQuickView();\r\n\t\t\t\t\tif (this.options.isAjaxCart == false){\r\n\t\t\t\t\t\tthis.processLink();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twindow.ajaxQuickView = this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tQuickView.Defaults = {\r\n\t\t\t\tisQuickView: false,\r\n\t\t\t\tisAjaxCart: false\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tQuickView.Plugins = {};\r\n\t\t\t\r\n\t\t\tQuickView.prototype.initialize = function() {\r\n\t\t\t\t$('#smcqp-container').customModal({\r\n\t\t\t\t\tautoOpen: false,\r\n\t\t\t\t\tclickableOverlay: false,\r\n\t\t\t\t\tinnerScroll: true,\r\n\t\t\t\t\tmodalClass: \"smcqp-modal-popup\",\r\n\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\ttype: 'popup',\r\n\t\t\t\t\tclosed: function() {},\r\n\t\t\t\t\topened: function() {}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\tif (this.options.isQuickView){\r\n\t\t\t\t\tvar that = this;\r\n\t\t\t\t\tvar _product_container = $(this.options.product_container);\r\n\t\t\t\t\t_product_container.each(function(){\r\n\t\t\t\t\t\tvar _self = $(this),\r\n\t\t\t\t\t\t   _id_product = _self.find('[data-product-id]').attr('data-product-id');\r\n\t\t\t\t\t\t  if (typeof _id_product !== 'undefined' &&  _id_product !== null){\r\n\t\t\t\t\t\t\t   var  _url = that.options.base_url+'cartquickpro/catalog_product/view/id/'+_id_product,\r\n\t\t\t\t\t\t\t   _button_container = _self.find(that.options.button_container).length ? _self.find(that.options.button_container) :  _self,\r\n\t\t\t\t\t\t\t\t_button = \"<a class='action quickview-handler sm_quickview_handler' title='\"+that.options.label_button+\"' href='\"+_url+\"'><span>\"+that.options.label_button+\"</span></a>\";\r\n\t\t\t\t\t\t\t   if ($('.quickview-handler',_button_container).length <= 0){\r\n\t\t\t\t\t\t\t\t\t_button_container.append(_button);\r\n\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tQuickView.prototype.setHeightIframe = function(ifr) {\r\n\t\t\t\tvar _self = this , \r\n\t\t\t\t\t_time = 0 , \r\n\t\t\t\t\t_ifr = document.getElementById('smcqp-iframe');\r\n\t\t\t\tif (typeof ifr === 'undefined' || ifr === null || typeof _ifr === 'undefined' || _ifr === null) return;\r\n\t\t\t\t\tvar ifr_height = _ifr.getAttribute('height'),\r\n\t\t\t\t\t\t_content = _ifr.contentWindow;\r\n\t\t\t\t\tif (typeof _content === 'undefined' || _content === null || _content.document.body === null) return;\t\r\n\t\t\t\t\tvar _content_temp = $(_content.document.body).height();\r\n\t\t\t\t\tif (typeof _content_temp !== 'undefined') {\r\n\t\t\t\t\t\t$('.gallery-placeholder',$(_content.document.body)).trigger('contentUpdate');\r\n\t\t\t\t\t\tif (ifr.height() !== _content_temp){\r\n\t\t\t\t\t\t\tifr.height(_content_temp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tif (_time == 'undefined') _time = 0;\r\n\t\t\t\tclearTimeout(_time);\r\n\t\t\t\t_time = setTimeout(function() {\r\n\t\t\t\t\t_self.setHeightIframe(ifr);\r\n\t\t\t\t}, 500);\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tQuickView.prototype.setHeightQuickview = function(ifr) {\r\n\t\t\t\tvar _self = this , \r\n\t\t\t\t\t_time = 0 , \r\n\t\t\t\t\t_ifr = document.getElementById('smcqp-iframe');\r\n\t\t\t\tif (typeof ifr === 'undefined' || ifr === null || typeof _ifr === 'undefined' || _ifr === null) return;\r\n\t\t\t\t\tvar ifr_height = _ifr.getAttribute('height'),\r\n\t\t\t\t\t\t_content = _ifr.contentWindow;\r\n\t\t\t\t\tif (typeof _content === 'undefined' || _content === null || _content.document.body === null) return;\t\r\n\t\t\t\t\tvar _content_temp = $(_content.document.body).height();\r\n\t\t\t\t\tif (typeof _content_temp !== 'undefined') {\r\n\t\t\t\t\t\t$('.gallery-placeholder',$(_content.document.body)).trigger('contentUpdate');\r\n\t\t\t\t\t\tif (ifr.height() !== _content_temp){\r\n\t\t\t\t\t\t\tifr.height(_content_temp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\tif (_time == 'undefined') _time = 0;\r\n\t\t\t\tclearTimeout(_time);\r\n\t\t\t\t_time = setTimeout(function() {\r\n\t\t\t\t\t_self.setHeightIframe(ifr);\r\n\t\t\t\t}, 500);\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tQuickView.prototype.requestQuickView = function() {\r\n\t\t\t\tvar _self = this ;\r\n\t\t\t\tvar _handler = $('.quickview-handler');\r\n\t\t\t\tif (_handler.length){\r\n\t\t\t\t\t$('body').off('click', '.quickview-handler').on('click', '.quickview-handler', function(e){\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t$('#smcqp-container').customModal(\"openModal\");\r\n\t\t\t\t\t\tvar self = $(this), _link = self.attr('href');\r\n\t\t\t\t\t\t$(\".modal-content\").css(\"overflow-y\", \"hidden\");\r\n\t\t\t\t\t\t$(\"#smcqp-contents\").css(\"visibility\", \"hidden\");\r\n\t\t\t\t\t\t$(\"#smcqp-contents\").show();\r\n\t\t\t\t\t\tvar ifr=$('<iframe/>', {\r\n\t\t\t\t\t\t\tid:'smcqp-iframe',\r\n\t\t\t\t\t\t\tsrc:_link+\"/randtime/\" + new Date().getTime(),\r\n\t\t\t\t\t\t\tscrolling: 'no',\r\n\t\t\t\t\t\t\tframeborder:0,\r\n\t\t\t\t\t\t\twidth:'100%',\r\n\t\t\t\t\t\t\theight:'100%'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tifr.on('load', function(){\r\n\t\t\t\t\t\t\t$(\"#smcqp-container .loading-mask\").hide();\r\n\t\t\t\t\t\t\t$(\".smcqp-modal-popup .modal-inner-wrap\").removeClass(\"smcqp-loading\");\r\n\t\t\t\t\t\t\t$(\".modal-content\").css(\"overflow-y\", \"auto\");\r\n\t\t\t\t\t\t\t$(\"#smcqp-contents\").css(\"visibility\", \"visible\");\r\n\t\t\t\t\t\t\t_self.setHeightIframe(ifr);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$('#smcqp-contents').append(ifr);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tQuickView.prototype.closeModalHandler = function(_action) {\r\n\t\t\t\t\t$('#smcqp-container').customModal(\"closeModal\");\r\n\t\t\t\t\twindow.location.href = _action;\r\n\t\t\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tQuickView.prototype.processLink = function() {\r\n\t\t\t\t$('body').off('click', '.action.mailto.friend').on('click', '.action.mailto.friend', function (e){\r\n\t\t\t\t\twindow.parent.location = $(this).attr('href');\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$('body').off('click', '.action.tocart').on('click', '.action.tocart', function (e){\r\n\t\t\t\t\tvar _that = $(this), _form = _that.parents('form') ;\r\n\t\t\t\t\tif (_form.length){\r\n\t\t\t\t\t\t_isValid = _form.valid();\r\n\t\t\t\t\t\tif (_isValid){\r\n\t\t\t\t\t\t\t_oldAction = _form.attr('action');\r\n\t\t\t\t\t\t\t_params = _form.serialize();\r\n\t\t\t\t\t\t\tvar _action = _oldAction+_params;\r\n\t\t\t\t\t\t\twindow.parent.location = _action;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$('body').off('click', '.action.tocompare, .action.towishlist').on('click', '.action.tocompare, .action.towishlist', function (e){\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar _self = this ;\r\n\t\t\t\t\tvar _that = $(this), _dataPost = $.parseJSON(_that.attr('data-post'));\r\n\t\t\t\t\tif (_dataPost){\r\n\t\t\t\t\t\tvar _formKey = $(\"input[name='form_key']\").val();\r\n\t\t\t\t\t\tvar _params = 'product=' + _dataPost.data.product + '&form_key=' + _formKey + '&uenc=' + _dataPost.data.uenc;\r\n\t\t\t\t\t\tvar _action =  _dataPost.action+_params;\r\n\t\t\t\t\t\t _dataPost.data.form_key = _formKey;\r\n\t\t\t\t\t\tif (window.self !== window.parent){\r\n\t\t\t\t\t\t\t $.mage.dataPost().postData(_dataPost);\r\n\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\twindow.parent.ajaxQuickView.closeModalHandler(_action);\r\n\t\t\t\t\t\t\t},2000);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.fn.cartQuickView = function(options) {\r\n\t\t\t\treturn $(this).data('cartQuickView', new QuickView(this, options));\r\n\t\t\t};\r\n\t\t\t\r\n\t\t}(jQuery));\r\n\t}\r\n);\r\n\t\t\r\n","Sm_CartQuickPro/js/custom-sidebar.js":"/**\r\n *\r\n * SM CartQuickPro - Version 1.4.0\r\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\r\n * @license - Copyrighted Commercial Software\r\n * Author: YouTech Company\r\n * Websites: http://www.magentech.com\r\n */\r\n \r\ndefine([\r\n    'jquery',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'Magento_Customer/js/customer-data',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'mage/decorate',\r\n    'mage/collapsible',\r\n    'mage/cookies',\r\n    'jquery-ui-modules/effect-fade',\r\n\t'ajaxCart'\r\n], function ($, authenticationPopup, customerData, alert, confirm) {\r\n\r\n    $.widget('mage.sidebar', {\r\n        options: {\r\n            isRecursive: true,\r\n            minicart: {\r\n                maxItemsVisible: 3\r\n            },\r\n\t\t\tminicartSelector: '[data-block=\"minicart\"]',\r\n\t\t\tactionEdit : '.action.edit',\r\n\t\t\turlRemoveItem: window.checkout.baseUrl+'cartquickpro/sidebar/removeItem/',\r\n\t\t\turlUpdateItemQty: window.checkout.baseUrl+'cartquickpro/sidebar/updateItemQty/'\r\n        },\r\n        scrollHeight: 0,\r\n\r\n        /**\r\n         * Create sidebar.\r\n         * @private\r\n         */\r\n        _create: function () {\r\n            this._initContent();\r\n        },\r\n\r\n        /**\r\n         * Update sidebar block.\r\n         */\r\n        update: function () {\r\n            $(this.options.targetElement).trigger('contentUpdated');\r\n            this._calcHeight();\r\n            this._isOverflowed();\r\n        },\r\n\r\n        _initContent: function () {\r\n            var self = this,\r\n                events = {};\r\n\r\n            this.element.decorate('list', this.options.isRecursive);\r\n\r\n            events['click ' + this.options.button.close] = function (event) {\r\n                event.stopPropagation();\r\n                $(self.options.targetElement).dropdownDialog('close');\r\n            };\r\n            events['click ' + this.options.button.checkout] = $.proxy(function () {\r\n                var cart = customerData.get('cart'),\r\n                    customer = customerData.get('customer');\r\n\r\n                if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                    // set URL for redirect on successful login/registration. It's postprocessed on backend.\r\n                    $.cookie('login_redirect', this.options.url.checkout);\r\n                    if (this.options.url.isRedirectRequired) {\r\n                        location.href = this.options.url.loginUrl;\r\n                    } else {\r\n                        authenticationPopup.showModal();\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n                location.href = this.options.url.checkout;\r\n            }, this);\r\n            events['click ' + this.options.button.remove] =  function (event) {\r\n                event.stopPropagation();\r\n                confirm({\r\n\t\t\t\t\tmodalClass: typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart ?  'smcqp-confirm' : '',\r\n                    content: self.options.confirmMessage,\r\n                    actions: {\r\n                        confirm: function () {\r\n                            self._removeItem($(event.currentTarget));\r\n                        },\r\n                        always: function (event) {\r\n                            event.stopImmediatePropagation();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            events['keyup ' + this.options.item.qty] = function (event) {\r\n                self._showItemButton($(event.target));\r\n            };\r\n            events['click ' + this.options.item.button] = function (event) {\r\n                event.stopPropagation();\r\n                self._updateItemQty($(event.currentTarget));\r\n            };\r\n            events['focusout ' + this.options.item.qty] = function (event) {\r\n                self._validateQty($(event.currentTarget));\r\n            };\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\tevents['click ' + this.options.actionEdit] = function (event) {\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\tvar _url =  $(event.currentTarget).attr('href');\r\n\t\t\t\t\t $(self.options.targetElement).dropdownDialog('close');\r\n\t\t\t\t\twindow.ajaxCart._requestQuickview(_url);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\t\t\t}\r\n            this._on(this.element, events);\r\n            this._calcHeight();\r\n            this._isOverflowed();\r\n        },\r\n\r\n        /**\r\n         * Add 'overflowed' class to minicart items wrapper element\r\n         *\r\n         * @private\r\n         */\r\n        _isOverflowed: function () {\r\n            var list = $(this.options.minicart.list),\r\n                cssOverflowClass = 'overflowed';\r\n\r\n            if (this.scrollHeight > list.innerHeight()) {\r\n                list.parent().addClass(cssOverflowClass);\r\n            } else {\r\n                list.parent().removeClass(cssOverflowClass);\r\n            }\r\n        },\r\n\r\n        _showItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item'),\r\n                itemQty = elem.data('item-qty');\r\n\r\n            if (this._isValidQty(itemQty, elem.val())) {\r\n                $('#update-cart-item-' + itemId).show('fade', 300);\r\n            } else if (elem.val() === 0) {\r\n                this._hideItemButton(elem);\r\n            } else {\r\n                this._hideItemButton(elem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param origin - origin qty. 'data-item-qty' attribute.\r\n         * @param changed - new qty.\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n         _isValidQty: function (origin, changed) {\r\n            return origin != changed && //eslint-disable-line eqeqeq\r\n                changed.length > 0 &&\r\n                changed - 0 == changed && //eslint-disable-line eqeqeq\r\n                changed - 0 > 0;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} elem\r\n         * @private\r\n         */\r\n        _validateQty: function (elem) {\r\n            var itemQty = elem.data('item-qty');\r\n\r\n            if (!this._isValidQty(itemQty, elem.val())) {\r\n                elem.val(itemQty);\r\n            }\r\n        },\r\n\r\n        _hideItemButton: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n            $('#update-cart-item-' + itemId).hide('fade', 300);\r\n        },\r\n\r\n        _updateItemQty: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\tthis._ajax(this.options.urlUpdateItemQty, {\r\n\t\t\t\t\titem_id: itemId,\r\n\t\t\t\t\titem_qty: $('#cart-item-' + itemId + '-qty').val()\r\n\t\t\t\t}, elem, this._updateItemQtyAfter);\r\n\t\t\t}else{\r\n\t\t\t\tthis._ajax(this.options.url.update, {\r\n\t\t\t\t\titem_id: itemId,\r\n\t\t\t\t\titem_qty: $('#cart-item-' + itemId + '-qty').val()\r\n\t\t\t\t}, elem, this._updateItemQtyAfter);\r\n\t\t\t}\r\n        },\r\n\r\n        /**\r\n         * Update content after update qty\r\n         *\r\n         * @param elem\r\n         * @param response\r\n         */\r\n        _updateItemQtyAfter: function (elem, response) {\r\n\t\t\tthis._hideItemButton(elem);\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\twindow.ajaxCart._afterAjax(response);\r\n\t\t\t}\t\r\n            \r\n        },\r\n\r\n        _removeItem: function (elem) {\r\n            var itemId = elem.data('cart-item');\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\tthis._ajax(this.options.urlRemoveItem, {\r\n\t\t\t\t\titem_id: itemId\r\n\t\t\t\t}, elem, this._removeItemAfter);\r\n\t\t\t}else{\r\n\t\t\t\tthis._ajax(this.options.url.remove, {\r\n\t\t\t\t\titem_id: itemId\r\n\t\t\t\t}, elem, this._removeItemAfter);\r\n\t\t\t}\r\n        },\r\n\r\n        /**\r\n         * Update content after item remove\r\n         *\r\n         * @param elem\r\n         * @param response\r\n         * @private\r\n         */\r\n        _removeItemAfter: function (elem, response) {\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\twindow.ajaxCart._afterAjax(response);\r\n\t\t\t}\r\n        },\r\n\t\t\r\n        /**\r\n         * @param {String} url - ajax url\r\n         * @param {Object} data - post data for ajax call\r\n         * @param {Object} elem - element that initiated the event\r\n         * @param {Function} callback - callback method to execute after AJAX success\r\n         */\r\n        _ajax: function (url, data, elem, callback) {\r\n\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\tvar _self = this , _options = _self.options;\r\n\t\t\t\t$.extend(data, {\r\n\t\t\t\t\t'form_key': $.mage.cookies.get('form_key')\r\n\t\t\t\t});\r\n\t\t\t\tif (window.ajaxCart._isCheckoutPage()){\r\n\t\t\t\t\t$.extend(data, {\r\n\t\t\t\t\t\t'isCheckoutPage': 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}else if (window.ajaxCart._isComparePage()){\r\n\t\t\t\t\t$.extend(data, {\r\n\t\t\t\t\t\t'isComparePage': 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}else if (window.ajaxCart._isWishlistPage()){\r\n\t\t\t\t\t$.extend(data, {\r\n\t\t\t\t\t\t'isWishlistPage': 1\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n            $.ajax({\r\n                url: url,\r\n                data: data,\r\n                type: 'post',\r\n                dataType: 'json',\r\n                context: this,\r\n                beforeSend: function () {\r\n\t\t\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\t\t\t$(_options.targetElement).dropdownDialog('close');\r\n\t\t\t\t\t\t$(_options.minicartSelector).trigger('contentLoading');\r\n\t\t\t\t\t\twindow.ajaxCart._showLoader();\r\n\t\t\t\t\t}\r\n                    elem.attr('disabled', 'disabled');\r\n                },\r\n                complete: function () {\r\n                    elem.attr('disabled', null);\r\n                }\r\n            })\r\n                .done(function (response) {\r\n                    if (response.success) {\r\n\t\t\t\t\t\tif (typeof ajaxCart !== 'undefined' && ajaxCart.options.isAjaxCart){\r\n\t\t\t\t\t\t\t$(_options.minicartSelector).trigger('contentUpdated');\r\n\t\t\t\t\t\t}\r\n                        callback.call(this, elem, response);\r\n                    } else {\r\n\t\t\t\t\t\tcallback.call(this, elem, response);\r\n                        var msg = response.error_message;\r\n\r\n                        if (msg) {\r\n                            alert({\r\n                                content: $.mage.__(msg)\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .fail(function (error) {\r\n                    console.log(JSON.stringify(error));\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Calculate height of minicart list\r\n         *\r\n         * @private\r\n         */\r\n        _calcHeight: function () {\r\n            var self = this,\r\n                height = 0,\r\n                counter = this.options.minicart.maxItemsVisible,\r\n                target = $(this.options.minicart.list),\r\n                outerHeight;\r\n\r\n            self.scrollHeight = 0;\r\n            target.children().each(function () {\r\n\r\n                if ($(this).find('.options').length > 0) {\r\n                    $(this).collapsible();\r\n                }\r\n                outerHeight = $(this).outerHeight();\r\n\r\n                if (counter-- > 0) {\r\n                    height += outerHeight;\r\n                }\r\n                self.scrollHeight += outerHeight;\r\n            });\r\n            target.parent().height(height);\r\n        }\r\n    });\r\n\r\n    return $.mage.sidebar;\r\n});\r\n","Sm_CartQuickPro/js/custom-wishlist.js":"/**\n *\n * SM CartQuickPro - Version 1.4.0\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\n * @license - Copyrighted Commercial Software\n * Author: YouTech Company\n * Websites: http://www.magentech.com\n */\n \ndefine([\n   'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'jquery-ui-modules/widget',\n    'mage/validation/validation',\n    'mage/dataPost',\n\t'ajaxCart'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.wishlist', {\n        options: {\n            dataAttribute: 'item-id',\n            nameFormat: 'qty[{0}]',\n            btnRemoveSelector: '[data-role=remove]',\n            qtySelector: '[data-role=qty]',\n            addToCartSelector: '[data-role=tocart]',\n            addAllToCartSelector: '[data-role=all-tocart]',\n            commentInputType: 'textarea',\n            infoList: false\n        },\n\n        /**\n         * Bind handlers to events.\n         */\n        _create: function () {\n            var _this = this;\n            if (!this.options.infoList) {\n\t\t\t\tif (typeof ajaxCart !== 'undefined' &&  ajaxCart.options.isAjaxCart) {\n\t\t\t\t\tthis.element\n\t\t\t\t\t\t.on('addToCart', function (event, context) {\n\t\t\t\t\t\t\tevent.stopPropagation(event);\n\t\t\t\t\t\t\t$(context).data('stop-processing', true);\n\t\t\t\t\t\t\tvar urlParams = _this._getItemsToCartParams(\n\t\t\t\t\t\t\t\t$(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t$.mage.dataPost().postData(urlParams);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\n\t\t\t\t\t\t.on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\n\t\t\t\t\t\t $('body').off('click',  this.options.addAllToCartSelector).on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this));\n\t\t\t\t}else{\n\t\t\t\t\t this.element\n\t\t\t\t\t\t.on('addToCart', function (event, context) {\n\t\t\t\t\t\t\tevent.stopPropagation(event);\n\t\t\t\t\t\t\t$(context).data('stop-processing', true);\n\t\t\t\t\t\t\tvar urlParams = _this._getItemsToCartParams(\n\t\t\t\t\t\t\t\t$(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t$.mage.dataPost().postData(urlParams);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on('click', this.options.btnRemoveSelector, $.proxy(function (event) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t$.mage.dataPost().postData($(event.currentTarget).data('post-remove'));\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\n\t\t\t\t\t\t.on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this))\n\t\t\t\t\t\t.on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\n\t\t\t\t}\t \n            }\n\n            // Setup validation for the form\n            this.element.mage('validation', {\n                errorPlacement: function (error, element) {\n                    error.insertAfter(element.next());\n                }\n            });\n        },\n\n        /**\n         * Process data before add to cart\n         *\n         * - update item's qty value.\n         *\n         * @param {Event} event\n         * @private\n         */\n       _beforeAddToCart: function (event) {\n            var elem = $(event.currentTarget),\n                itemId = elem.data(this.options.dataAttribute),\n                qtyName = $.validator.format(this.options.nameFormat, itemId),\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val(),\n                params = elem.data('post');\n            if (params) {\n                params.data = $.extend({}, params.data, {\n                    'qty': qtyValue\n                });\n                elem.data('post', params);\n            }\n        },\n\n        /**\n         * Add wish list items to cart.\n         * @private\n         * @param {jQuery} elem - clicked 'add to cart' button\n         */\n        _getItemsToCartParams: function (elem) {\n            var itemId, url, qtyName, qtyValue;\n\n            if (elem.data(this.options.dataAttribute)) {\n                itemId = elem.data(this.options.dataAttribute);\n                url = this.options.addToCartUrl;\n                qtyName = $.validator.format(this.options.nameFormat, itemId);\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val();\n                url.data.item = itemId;\n                url.data.qty = qtyValue;\n\n                return url;\n            }\n        },\n\n        /**\n         * Add all wish list items to cart\n         * @private\n         */\n        _addAllWItemsToCart: function () {\n            var urlParams = this.options.addAllToCartUrl,\n                separator = (urlParams.action.indexOf('?') >= 0) ? '&' : '?';\n\n            this.element.find(this.options.qtySelector).each(function (index, element) {\n                urlParams.action += separator + $(element).prop('name') + '=' + encodeURIComponent($(element).val());\n                separator = '&';\n            });\n            $.mage.dataPost().postData(urlParams);\n        },\n\n        /**\n         * Toggle comment string.\n         * @private\n         * @param {Event} e\n         */\n        _focusComment: function (e) {\n            var commentInput = e.currentTarget;\n\n            if (commentInput.value === '' || commentInput.value === this.options.commentString) {\n                commentInput.value = commentInput.value === this.options.commentString ?\n                    '' : this.options.commentString;\n            }\n        }\n    });\n\n    // Extension for mage.wishlist - Select All checkbox\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            selectAllCheckbox: '#select-all',\n            parentContainer: '#wishlist-table'\n        },\n\n        _create: function () {\n            this._super();\n            var selectAllCheckboxParent = $(this.options.selectAllCheckbox).parents(this.options.parentContainer),\n                checkboxCount = selectAllCheckboxParent.find('input:checkbox:not(' + this.options.selectAllCheckbox + ')').length;\n            // If Select all checkbox is checked, check all item checkboxes, if unchecked, uncheck all item checkboxes\n            $(this.options.selectAllCheckbox).on('click', function () {\n                selectAllCheckboxParent.find('input:checkbox').attr('checked', $(this).is(':checked'));\n            });\n            // If all item checkboxes are checked, check select all checkbox,\n            // if not all item checkboxes are checked, uncheck select all checkbox\n            selectAllCheckboxParent.on('click', 'input:checkbox:not(' + this.options.selectAllCheckbox + ')', $.proxy(function () {\n                var checkedCount = selectAllCheckboxParent.find('input:checkbox:checked:not(' + this.options.selectAllCheckbox + ')').length;\n                $(this.options.selectAllCheckbox).attr('checked', checkboxCount === checkedCount);\n            }, this));\n        }\n    });\n    // Extension for mage.wishlist info add to cart\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        _create: function () {\n            this._super();\n\n            if (this.options.infoList) {\n                this.element.on('addToCart', $.proxy(function (event, context) {\n                    this.element.find('input:checkbox').attr('checked', false);\n                    $(context).closest('tr').find('input:checkbox').attr('checked', true);\n                    this.element.submit();\n                }, this));\n                this._checkBoxValidate();\n            }\n        },\n\n        /**\n         * validate checkbox selection.\n         * @private\n         */\n        _checkBoxValidate: function () {\n            this.element.validation({\n                submitHandler: $.proxy(function (form) {\n                    if ($(form).find('input:checkbox:checked').length) {\n                        form.submit();\n                    } else {\n                        alert({\n                            content: this.options.checkBoxValidationMessage\n                        });\n                    }\n                }, this)\n            });\n        }\n    });\n\n    // Extension for mage.wishlist - Add Wishlist item to Gift Registry\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            formTmplSelector: '#form-tmpl',\n            formTmplId: '#wishlist-hidden-form'\n        },\n\n        _create: function () {\n            this._super();\n            var _this = this;\n            this.element.on('click', '[data-wishlist-to-giftregistry]', function () {\n                var json = $(this).data('wishlist-to-giftregistry'),\n                    tmplJson = {\n                        item: json.itemId,\n                        entity: json.entity,\n                        url: json.url\n                    },\n                    html = mageTemplate(_this.options.formTmplSelector, {\n                        data: tmplJson\n                    });\n\n                $(html).appendTo('body');\n                $(_this.options.formTmplId).submit();\n            });\n        }\n    });\n\n    return $.mage.wishlist;\n});\n","Sm_DegreeView/js/spritespin.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\n            (factory((global.SpriteSpin = {})));\n}(this, (function (exports) { 'use strict';\n\n    /**\n     * @internal\n     */\n    var Api = /** @class */ (function () {\n        function Api(data) {\n            this.data = data;\n        }\n        return Api;\n    }());\n    /**\n     * Adds methods to the SpriteSpin api\n     *\n     * @public\n     */\n    function extendApi(methods) {\n        var api = Api.prototype;\n        for (var key in methods) {\n            if (methods.hasOwnProperty(key)) {\n                if (api[key]) {\n                    throw new Error('API method is already defined: ' + key);\n                }\n                else {\n                    api[key] = methods[key];\n                }\n            }\n        }\n        return api;\n    }\n\n    var $$1 = window.jQuery || window.$;\n\n    function getCursorPosition(event) {\n        var touches = event.touches;\n        var source = event;\n        // jQuery Event normalization does not preserve the 'event.touches'\n        // try to grab touches from the original event\n        if (event.touches === undefined && event.originalEvent !== undefined) {\n            touches = event.originalEvent.touches;\n        }\n        // get current touch or mouse position\n        if (touches !== undefined && touches.length > 0) {\n            source = touches[0];\n        }\n        return {\n            x: source.clientX || 0,\n            y: source.clientY || 0\n        };\n    }\n\n    var canvas;\n    var context;\n    function detectionContext() {\n        if (context) {\n            return context;\n        }\n        if (!canvas) {\n            canvas = document.createElement('canvas');\n        }\n        if (!canvas || !canvas.getContext) {\n            return null;\n        }\n        context = canvas.getContext('2d');\n        return context;\n    }\n    /**\n     * Idea taken from https://github.com/stomita/ios-imagefile-megapixel\n     * Detects whether the image has been sub sampled by the browser and does not have its original dimensions.\n     * This method unfortunately does not work for images that have transparent background.\n     */\n    function detectSubsampling(img, width, height) {\n        if (!detectionContext()) {\n            return false;\n        }\n        // sub sampling happens on images above 1 megapixel\n        if (width * height <= 1024 * 1024) {\n            return false;\n        }\n        // set canvas to 1x1 pixel size and fill it with magenta color\n        canvas.width = canvas.height = 1;\n        context.fillStyle = '#FF00FF';\n        context.fillRect(0, 0, 1, 1);\n        // render the image with a negative offset to the left so that it would\n        // fill the canvas pixel with the top right pixel of the image.\n        context.drawImage(img, -width + 1, 0);\n        // check color value to confirm image is covering edge pixel or not.\n        // if color still magenta, the image is assumed to be sub sampled.\n        try {\n            var dat = context.getImageData(0, 0, 1, 1).data;\n            return (dat[0] === 255) && (dat[1] === 0) && (dat[2] === 255);\n        }\n        catch (err) {\n            // avoids cross origin exception for chrome when code runs without a server\n            return false;\n        }\n    }\n\n    /**\n     *\n     */\n    function getOuterSize(data) {\n        var width = Math.floor(data.width || data.frameWidth || data.target.innerWidth());\n        var height = Math.floor(data.height || data.frameHeight || data.target.innerHeight());\n        return {\n            aspect: width / height,\n            height: height,\n            width: width\n        };\n    }\n    function getComputedSize(data) {\n        var size = getOuterSize(data);\n        if (typeof window.getComputedStyle !== 'function') {\n            return size;\n        }\n        var style = window.getComputedStyle(data.target[0]);\n        if (!style.width) {\n            return size;\n        }\n        size.width = Math.floor(Number(style.width.replace('px', '')));\n        size.height = Math.floor(size.width / size.aspect);\n        return size;\n    }\n    /**\n     *\n     */\n    function getInnerSize(data) {\n        var width = Math.floor(data.frameWidth || data.width || data.target.innerWidth());\n        var height = Math.floor(data.frameHeight || data.height || data.target.innerHeight());\n        return {\n            aspect: width / height,\n            height: height,\n            width: width\n        };\n    }\n    /**\n     *\n     */\n    function getInnerLayout(mode, inner, outer) {\n        // get mode\n        var isFit = mode === 'fit';\n        var isFill = mode === 'fill';\n        var isMatch = mode === 'stretch';\n        // resulting layout\n        var layout = {\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            overflow: 'hidden'\n        };\n        // no calculation here\n        if (!mode || isMatch) {\n            return layout;\n        }\n        // get size and aspect\n        var aspectIsGreater = inner.aspect >= outer.aspect;\n        // mode == original\n        var width = inner.width;\n        var height = inner.height;\n        // keep aspect ratio but fit/fill into container\n        if (isFit && aspectIsGreater || isFill && !aspectIsGreater) {\n            width = outer.width;\n            height = outer.width / inner.aspect;\n        }\n        if (isFill && aspectIsGreater || isFit && !aspectIsGreater) {\n            height = outer.height;\n            width = outer.height * inner.aspect;\n        }\n        // floor the numbers\n        width = Math.floor(width);\n        height = Math.floor(height);\n        // position in center\n        layout.width = width;\n        layout.height = height;\n        layout.top = Math.floor((outer.height - height) / 2);\n        layout.left = Math.floor((outer.width - width) / 2);\n        layout.right = layout.left;\n        layout.bottom = layout.top;\n        return layout;\n    }\n\n    var img;\n    /**\n     * gets the original width and height of an image element\n     */\n    function naturalSize(image) {\n        // for browsers that support naturalWidth and naturalHeight properties\n        if (image.naturalWidth) {\n            return {\n                height: image.naturalHeight,\n                width: image.naturalWidth\n            };\n        }\n        // browsers that do not support naturalWidth and naturalHeight properties have to fall back to the width and\n        // height properties. However, the image might have a css style applied so width and height would return the\n        // css size. To avoid thet create a new Image object that is free of css rules and grab width and height\n        // properties\n        //\n        // assume that the src has already been downloaded, so no onload callback is needed.\n        img = img || new Image();\n        img.src = image.src;\n        return {\n            height: img.height,\n            width: img.width\n        };\n    }\n\n    /**\n     * Measures the image frames that are used in the given data object\n     */\n    function measure(images, options) {\n        if (images.length === 1) {\n            return [measureSheet(images[0], options)];\n        }\n        else if (options.framesX && options.framesY) {\n            return measureMutipleSheets(images, options);\n        }\n        else {\n            return measureFrames(images, options);\n        }\n    }\n    function measureSheet(image, options) {\n        var result = { id: 0, sprites: [] };\n        measureImage(image, options, result);\n        var frames = options.frames;\n        var framesX = Number(options.framesX) || frames;\n        var framesY = Math.ceil(frames / framesX);\n        var frameWidth = Math.floor(result.width / framesX);\n        var frameHeight = Math.floor(result.height / framesY);\n        var divisor = result.isSubsampled ? 2 : 1;\n        for (var i = 0; i < frames; i++) {\n            var x = (i % framesX) * frameWidth;\n            var y = Math.floor(i / framesX) * frameHeight;\n            result.sprites.push({\n                id: i,\n                x: x, y: y,\n                width: frameWidth,\n                height: frameHeight,\n                sampledX: x / divisor,\n                sampledY: y / divisor,\n                sampledWidth: frameWidth / divisor,\n                sampledHeight: frameHeight / divisor\n            });\n        }\n        return result;\n    }\n    function measureFrames(images, options) {\n        var result = [];\n        for (var id = 0; id < images.length; id++) {\n            // TODO: optimize\n            // dont measure images with same size twice\n            var sheet = measureSheet(images[id], { frames: 1, framesX: 1, detectSubsampling: options.detectSubsampling });\n            sheet.id = id;\n            result.push(sheet);\n        }\n        return result;\n    }\n    function measureMutipleSheets(images, options) {\n        var result = [];\n        for (var id = 0; id < images.length; id++) {\n            // TODO: optimize\n            // dont measure images with same size twice\n            var sheet = measureSheet(images[id], {\n                frames: undefined,\n                framesX: options.framesX,\n                framesY: options.framesY,\n                detectSubsampling: options.detectSubsampling\n            });\n            sheet.id = id;\n            result.push(sheet);\n        }\n        return result;\n    }\n    function measureImage(image, options, result) {\n        var size = naturalSize(image);\n        result.isSubsampled = options.detectSubsampling && detectSubsampling(image, size.width, size.height);\n        result.width = size.width;\n        result.height = size.height;\n        result.sampledWidth = size.width / (result.isSubsampled ? 2 : 1);\n        result.sampledHeight = size.height / (result.isSubsampled ? 2 : 1);\n        return result;\n    }\n    function findSpecs(metrics, frames, frame, lane) {\n        var spriteId = lane * frames + frame;\n        var sheetId = 0;\n        var sprite = null;\n        var sheet = null;\n        while (true) {\n            sheet = metrics[sheetId];\n            if (!sheet) {\n                break;\n            }\n            if (spriteId >= sheet.sprites.length) {\n                spriteId -= sheet.sprites.length;\n                sheetId++;\n                continue;\n            }\n            sprite = sheet.sprites[spriteId];\n            break;\n        }\n        return { sprite: sprite, sheet: sheet };\n    }\n\n    function indexOf(element, arr) {\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] === element) {\n                return i;\n            }\n        }\n    }\n    function noop() {\n        //\n    }\n    function preload(opts) {\n        var src;\n        var input = opts.source;\n        src = typeof input === 'string' ? [input] : input;\n        // const src: string[] =  ? [opts.source] : opts.source\n        var images = [];\n        var targetCount = (opts.preloadCount || src.length);\n        var onInitiated = opts.initiated || noop;\n        var onProgress = opts.progress || noop;\n        var onComplete = opts.complete || noop;\n        var count = 0;\n        var completed = false;\n        var firstLoaded = false;\n        var tick = function () {\n            count += 1;\n            onProgress({\n                index: indexOf(this, images),\n                loaded: count,\n                total: src.length,\n                percent: Math.round((count / src.length) * 100)\n            });\n            firstLoaded = firstLoaded || (this === images[0]);\n            if (firstLoaded && !completed && (count >= targetCount)) {\n                completed = true;\n                onComplete(images);\n            }\n        };\n        for (var _i = 0, src_1 = src; _i < src_1.length; _i++) {\n            var url = src_1[_i];\n            var img = new Image();\n            // push result\n            images.push(img);\n            // bind logic, dont care about abort/errors\n            img.onload = img.onabort = img.onerror = tick;\n            // begin load\n            img.src = url;\n        }\n        onInitiated(images);\n    }\n\n    function padNumber(num, length, pad) {\n        var result = String(num);\n        while (result.length < length) {\n            result = String(pad) + result;\n        }\n        return result;\n    }\n    /**\n     * Generates an array of source strings\n     *\n     * @remarks\n     * Takes a template string and generates an array of strings by interpolating {lane} and {frame} placeholders.\n     *\n     * ```\n     * sourceArray('http://example.com/image_{frame}.jpg, { frame: [1, 3], digits: 2 })\n     * // gives:\n     * // [ 'http://example.com/image_01.jpg', 'http://example.com/image_02.jpg', 'http://example.com/image_03.jpg' ]\n     *\n     * sourceArray('http://example.com/image_FRAME.jpg, { frame: [1, 3], digits: 2, framePlacer: 'FRAME' })\n     * // gives:\n     * // [ 'http://example.com/image_01.jpg', 'http://example.com/image_02.jpg', 'http://example.com/image_03.jpg' ]\n     * ```\n     *\n     * @param template - The template string\n     * @param opts - Interpolation options\n     *\n     * @public\n     */\n    function sourceArray(template, opts) {\n        var digits = opts.digits || 2;\n        var lPlacer = opts.lanePlacer || '{lane}';\n        var fPlacer = opts.framePlacer || '{frame}';\n        var fStart = 0;\n        var fEnd = 0;\n        if (opts.frame) {\n            fStart = opts.frame[0];\n            fEnd = opts.frame[1];\n        }\n        var lStart = 0;\n        var lEnd = 0;\n        if (opts.lane) {\n            lStart = opts.lane[0];\n            lEnd = opts.lane[1];\n        }\n        var result = [];\n        for (var lane = lStart; lane <= lEnd; lane += 1) {\n            for (var frame = fStart; frame <= fEnd; frame += 1) {\n                result.push(template\n                    .replace(lPlacer, padNumber(lane, digits, '0'))\n                    .replace(fPlacer, padNumber(frame, digits, '0')));\n            }\n        }\n        return result;\n    }\n\n    /**\n     * The namespace that is used to bind functions to DOM events and store the data object\n     */\n    var namespace = 'spritespin';\n    /**\n     * Event names that are recognized by SpriteSpin. A module can implement any of these and they will be bound\n     * to the target element on which the plugin is called.\n     */\n    var eventNames = [\n        'mousedown',\n        'mousemove',\n        'mouseup',\n        'mouseenter',\n        'mouseover',\n        'mouseleave',\n        'mousewheel',\n        'wheel',\n        'click',\n        'dblclick',\n        'touchstart',\n        'touchmove',\n        'touchend',\n        'touchcancel',\n        'selectstart',\n        'gesturestart',\n        'gesturechange',\n        'gestureend'\n    ];\n    /**\n     *\n     */\n    var callbackNames = [\n        'onInit',\n        'onProgress',\n        'onLoad',\n        'onFrameChanged',\n        'onFrame',\n        'onDraw',\n        'onComplete',\n        'onDestroy'\n    ];\n    /**\n     * Names of events for that the default behavior should be prevented.\n     */\n    var eventsToPrevent = [\n        'dragstart'\n    ];\n    /**\n     * Default set of SpriteSpin options. This also represents the majority of data attributes that are used during the\n     * lifetime of a SpriteSpin instance. The data is stored inside the target DOM element on which the plugin is called.\n     */\n    var defaults = {\n        source: undefined,\n        width: undefined,\n        height: undefined,\n        frames: undefined,\n        framesX: undefined,\n        lanes: 1,\n        sizeMode: undefined,\n        renderer: 'canvas',\n        lane: 0,\n        frame: 0,\n        frameTime: 40,\n        animate: true,\n        retainAnimate: false,\n        reverse: false,\n        loop: true,\n        stopFrame: 0,\n        wrap: true,\n        wrapLane: false,\n        sense: 1,\n        senseLane: undefined,\n        orientation: 'horizontal',\n        detectSubsampling: true,\n        preloadCount: undefined,\n        touchScrollTimer: [200, 1500],\n        responsive: undefined,\n        plugins: undefined\n    };\n\n    function noop$1() {\n        // noop\n    }\n    function wrapConsole(type) {\n        return console && console[type] ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return console.log.apply(console, args);\n        } : noop$1;\n    }\n    var log = wrapConsole('log');\n    var warn = wrapConsole('warn');\n    var error = wrapConsole('error');\n    function toArray(value) {\n        return Array.isArray(value) ? value : [value];\n    }\n    /**\n     * clamps the given value by the given min and max values\n     */\n    function clamp(value, min, max) {\n        return (value > max ? max : (value < min ? min : value));\n    }\n    /**\n     *\n     */\n    function wrap(value, min, max, size) {\n        while (value > max) {\n            value -= size;\n        }\n        while (value < min) {\n            value += size;\n        }\n        return value;\n    }\n    /**\n     * prevents default action on the given event\n     */\n    function prevent(e) {\n        e.preventDefault();\n        return false;\n    }\n    /**\n     * Binds on the given target and event the given function.\n     * The SpriteSpin namespace is attached to the event name\n     */\n    function bind(target, event, func) {\n        if (func) {\n            target.bind(event + '.' + namespace, function (e) {\n                func.apply(target, [e, target.spritespin('data')]);\n            });\n        }\n    }\n    /**\n     * Unbinds all SpriteSpin events from given target element\n     */\n    function unbind(target) {\n        target.unbind('.' + namespace);\n    }\n    /**\n     * Checks if given object is a function\n     */\n    function isFunction(fn) {\n        return typeof fn === 'function';\n    }\n    function pixelRatio(context) {\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        var backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio || 1;\n        return devicePixelRatio / backingStoreRatio;\n    }\n\n\n\n    var _Utils = Object.freeze({\n        $: $$1,\n        getCursorPosition: getCursorPosition,\n        detectSubsampling: detectSubsampling,\n        getOuterSize: getOuterSize,\n        getComputedSize: getComputedSize,\n        getInnerSize: getInnerSize,\n        getInnerLayout: getInnerLayout,\n        measure: measure,\n        findSpecs: findSpecs,\n        naturalSize: naturalSize,\n        preload: preload,\n        sourceArray: sourceArray,\n        noop: noop$1,\n        log: log,\n        warn: warn,\n        error: error,\n        toArray: toArray,\n        clamp: clamp,\n        wrap: wrap,\n        prevent: prevent,\n        bind: bind,\n        unbind: unbind,\n        isFunction: isFunction,\n        pixelRatio: pixelRatio\n    });\n\n    /**\n     * Applies css attributes to layout the SpriteSpin containers.\n     *\n     * @internal\n     */\n    function applyLayout(data) {\n        // disable selection\n        data.target\n            .attr('unselectable', 'on')\n            .css({\n                width: '',\n                height: '',\n                '-ms-user-select': 'none',\n                '-moz-user-select': 'none',\n                '-khtml-user-select': 'none',\n                '-webkit-user-select': 'none',\n                'user-select': 'none'\n            });\n        var size = data.responsive ? getComputedSize(data) : getOuterSize(data);\n        var layout = getInnerLayout(data.sizeMode, getInnerSize(data), size);\n        // apply layout on target\n        data.target.css({\n            width: size.width,\n            height: size.height,\n            position: 'relative',\n            overflow: 'hidden'\n        });\n        // apply layout on stage\n        data.stage\n            .css(layout)\n            .hide();\n        if (!data.canvas) {\n            return;\n        }\n        // apply layout on canvas\n        data.canvas.css(layout).hide();\n        // apply pixel ratio on canvas\n        data.canvasRatio = data.canvasRatio || pixelRatio(data.context);\n        if (typeof layout.width === 'number' && typeof layout.height === 'number') {\n            data.canvas[0].width = (layout.width * data.canvasRatio) || size.width;\n            data.canvas[0].height = (layout.height * data.canvasRatio) || size.height;\n        }\n        else {\n            data.canvas[0].width = (size.width * data.canvasRatio);\n            data.canvas[0].height = (size.height * data.canvasRatio);\n        }\n        // width and height must be set before calling scale\n        data.context.scale(data.canvasRatio, data.canvasRatio);\n    }\n\n    /**\n     * Gets a state object by name.\n     * @internal\n     * @param data - The SpriteSpin instance data\n     * @param name - The name of the state object\n     */\n    function getState(data, name) {\n        data.state = data.state || {};\n        data.state[name] = data.state[name] || {};\n        return data.state[name];\n    }\n    /**\n     * Gets a plugin state object by name.\n     *\n     * @remarks\n     * Plugins should use this method to get or create a state object where they can\n     * store any instance variables.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     * @param name - The name of the plugin\n     */\n    function getPluginState(data, name) {\n        var state = getState(data, 'plugin');\n        state[name] = state[name] || {};\n        return state[name];\n    }\n    /**\n     * Checks whether a flag is set. See {@link flag}.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     * @param key - The name of the flag\n     */\n    function is(data, key) {\n        return !!getState(data, 'flags')[key];\n    }\n    /**\n     * Sets a flag value. See {@link is}.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     * @param key - The name of the flag\n     * @param value - The value to set\n     */\n    function flag(data, key, value) {\n        getState(data, 'flags')[key] = !!value;\n    }\n\n    /**\n     * Gets the playback state\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     */\n    function getPlaybackState(data) {\n        return getState(data, 'playback');\n    }\n    function updateLane(data, lane) {\n        data.lane = data.wrapLane\n            ? wrap(lane, 0, data.lanes - 1, data.lanes)\n            : clamp(lane, 0, data.lanes - 1);\n    }\n    function updateAnimationFrame(data) {\n        data.frame += (data.reverse ? -1 : 1);\n        // wrap the frame value to fit in range [0, data.frames)\n        data.frame = wrap(data.frame, 0, data.frames - 1, data.frames);\n        // stop animation if loop is disabled and the stopFrame is reached\n        if (!data.loop && (data.frame === data.stopFrame)) {\n            stopAnimation(data);\n        }\n    }\n    function updateInputFrame(data, frame) {\n        data.frame = Number(frame);\n        data.frame = data.wrap\n            ? wrap(data.frame, 0, data.frames - 1, data.frames)\n            : clamp(data.frame, 0, data.frames - 1);\n    }\n    function updateAnimation(data) {\n        var state = getPlaybackState(data);\n        if (state.handler) {\n            updateBefore(data);\n            updateAnimationFrame(data);\n            updateAfter(data);\n        }\n    }\n    function updateBefore(data) {\n        var state = getPlaybackState(data);\n        state.lastFrame = data.frame;\n        state.lastLane = data.lane;\n    }\n    function updateAfter(data) {\n        var state = getPlaybackState(data);\n        if (state.lastFrame !== data.frame || state.lastLane !== data.lane) {\n            data.target.trigger('onFrameChanged.' + namespace, data);\n        }\n        data.target.trigger('onFrame.' + namespace, data);\n        data.target.trigger('onDraw.' + namespace, data);\n    }\n    /**\n     * Updates the frame or lane number of the SpriteSpin data.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     * @param frame - The frame number to set\n     * @param lane - The lane number to set\n     */\n    function updateFrame(data, frame, lane) {\n        updateBefore(data);\n        if (frame != null) {\n            updateInputFrame(data, frame);\n        }\n        if (lane != null) {\n            updateLane(data, lane);\n        }\n        updateAfter(data);\n    }\n    /**\n     * Stops the running animation.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     */\n    function stopAnimation(data) {\n        data.animate = false;\n        var state = getPlaybackState(data);\n        if (state.handler != null) {\n            window.clearInterval(state.handler);\n            state.handler = null;\n        }\n    }\n    /**\n     * Starts animation playback if needed.\n     *\n     * @remarks\n     * Starts animation playback if `animate` property is `true` and the animation is not yet running.\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     */\n    function applyAnimation(data) {\n        var state = getPlaybackState(data);\n        if (state.handler && (!data.animate || state.frameTime !== data.frameTime)) {\n            stopAnimation(data);\n        }\n        if (data.animate && !state.handler) {\n            state.frameTime = data.frameTime;\n            state.handler = window.setInterval(function () { return updateAnimation(data); }, state.frameTime);\n        }\n    }\n    /**\n     * Starts the animation playback\n     *\n     * @remarks\n     * Starts the animation playback and also sets the `animate` property to `true`\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     */\n    function startAnimation(data) {\n        data.animate = true;\n        applyAnimation(data);\n    }\n\n    var plugins = {};\n    /**\n     * Registers a plugin.\n     *\n     * @remarks\n     * Use this to add custom Rendering or Updating modules that can be addressed with the 'module' option.\n     *\n     * @public\n     * @param name - The name of the plugin\n     * @param plugin - The plugin implementation\n     */\n    function registerPlugin(name, plugin) {\n        if (plugins[name]) {\n            error(\"Plugin name \\\"\" + name + \"\\\" is already taken\");\n            return;\n        }\n        plugin = plugin || {};\n        plugins[name] = plugin;\n        return plugin;\n    }\n    /**\n     * Registers a plugin.\n     *\n     * @public\n     * @deprecated Use {@link registerPlugin} instead\n     * @param name - The name of the plugin\n     * @param plugin - The plugin implementation\n     */\n    function registerModule(name, plugin) {\n        warn('\"registerModule\" is deprecated, use \"registerPlugin\" instead');\n        registerPlugin(name, plugin);\n    }\n    /**\n     * Gets an active plugin by name\n     *\n     * @internal\n     * @param name - The name of the plugin\n     */\n    function getPlugin(name) {\n        return plugins[name];\n    }\n    /**\n     * Replaces module names on given SpriteSpin data and replaces them with actual implementations.\n     * @internal\n     */\n    function applyPlugins(data) {\n        fixPlugins(data);\n        for (var i = 0; i < data.plugins.length; i += 1) {\n            var name_1 = data.plugins[i];\n            if (typeof name_1 !== 'string') {\n                continue;\n            }\n            var plugin = getPlugin(name_1);\n            if (!plugin) {\n                error('No plugin found with name ' + name_1);\n                continue;\n            }\n            data.plugins[i] = plugin;\n        }\n    }\n    function fixPlugins(data) {\n        // tslint:disable no-string-literal\n        if (data['mods']) {\n            warn('\"mods\" option is deprecated, use \"plugins\" instead');\n            data.plugins = data['mods'];\n            delete data['mods'];\n        }\n        if (data['behavior']) {\n            warn('\"behavior\" option is deprecated, use \"plugins\" instead');\n            data.plugins.push(data['behavior']);\n            delete data['behavior'];\n        }\n        if (data['module']) {\n            warn('\"module\" option is deprecated, use \"plugins\" instead');\n            data.plugins.push(data['module']);\n            delete data['module'];\n        }\n    }\n\n    var $$2 = $$1;\n    var counter = 0;\n    /**\n     * Collection of all SpriteSpin instances\n     */\n    var instances = {};\n    function pushInstance(data) {\n        counter += 1;\n        data.id = String(counter);\n        instances[data.id] = data;\n    }\n    function popInstance(data) {\n        delete instances[data.id];\n    }\n    function eachInstance(cb) {\n        for (var id in instances) {\n            if (instances.hasOwnProperty(id)) {\n                cb(instances[id]);\n            }\n        }\n    }\n    var lazyinit = function () {\n        // replace function with a noop\n        // this logic must run only once\n        lazyinit = function () { };\n        function onEvent(eventName, e) {\n            eachInstance(function (data) {\n                for (var _i = 0, _a = data.plugins; _i < _a.length; _i++) {\n                    var module_1 = _a[_i];\n                    if (typeof module_1[eventName] === 'function') {\n                        module_1[eventName].apply(data.target, [e, data]);\n                    }\n                }\n            });\n        }\n        function onResize() {\n            eachInstance(function (data) {\n                if (data.responsive) {\n                    boot(data);\n                }\n            });\n        }\n        var _loop_1 = function (eventName) {\n            $$2(window.document).bind(eventName + '.' + namespace, function (e) {\n                onEvent('document' + eventName, e);\n            });\n        };\n        for (var _i = 0, eventNames_1 = eventNames; _i < eventNames_1.length; _i++) {\n            var eventName = eventNames_1[_i];\n            _loop_1(eventName);\n        }\n        var resizeTimeout = null;\n        $$2(window).on('resize', function () {\n            window.clearTimeout(resizeTimeout);\n            resizeTimeout = window.setTimeout(onResize, 100);\n        });\n    };\n    /**\n     * (re)binds all spritespin events on the target element\n     *\n     * @internal\n     */\n    function applyEvents(data) {\n        var target = data.target;\n        // Clear all SpriteSpin events on the target element\n        unbind(target);\n        // disable all default browser behavior on the following events\n        // mainly prevents image drag operation\n        for (var _i = 0, eventsToPrevent_1 = eventsToPrevent; _i < eventsToPrevent_1.length; _i++) {\n            var eName = eventsToPrevent_1[_i];\n            bind(target, eName, prevent);\n        }\n        // Bind module functions to SpriteSpin events\n        for (var _a = 0, _b = data.plugins; _a < _b.length; _a++) {\n            var plugin = _b[_a];\n            for (var _c = 0, eventNames_2 = eventNames; _c < eventNames_2.length; _c++) {\n                var eName = eventNames_2[_c];\n                bind(target, eName, plugin[eName]);\n            }\n            for (var _d = 0, callbackNames_1 = callbackNames; _d < callbackNames_1.length; _d++) {\n                var eName = callbackNames_1[_d];\n                bind(target, eName, plugin[eName]);\n            }\n        }\n        // bind auto start function to load event.\n        bind(target, 'onLoad', function (e, d) {\n            applyAnimation(d);\n        });\n        // bind all user events that have been passed on initialization\n        for (var _e = 0, callbackNames_2 = callbackNames; _e < callbackNames_2.length; _e++) {\n            var eName = callbackNames_2[_e];\n            bind(target, eName, data[eName]);\n        }\n    }\n    function applyMetrics(data) {\n        if (!data.images) {\n            data.metrics = [];\n        }\n        data.metrics = measure(data.images, data);\n        var spec = findSpecs(data.metrics, data.frames, 0, 0);\n        if (spec.sprite) {\n            // TODO: try to remove frameWidth/frameHeight\n            data.frameWidth = spec.sprite.width;\n            data.frameHeight = spec.sprite.height;\n        }\n    }\n    /**\n     * Runs the boot process.\n     *\n     * @remarks\n     * (re)initializes plugins, (re)initializes the layout, (re)binds events and loads source images.\n     *\n     * @internal\n     */\n    function boot(data) {\n        applyPlugins(data);\n        applyEvents(data);\n        applyLayout(data);\n        data.source = toArray(data.source);\n        data.loading = true;\n        data.target\n            .addClass('loading')\n            .trigger('onInit.' + namespace, data);\n        preload({\n            source: data.source,\n            preloadCount: data.preloadCount,\n            progress: function (progress) {\n                data.progress = progress;\n                data.target.trigger('onProgress.' + namespace, data);\n            },\n            complete: function (images) {\n                data.images = images;\n                data.loading = false;\n                data.frames = data.frames || images.length;\n                applyMetrics(data);\n                applyLayout(data);\n                data.stage.show();\n                data.target\n                    .removeClass('loading')\n                    .trigger('onLoad.' + namespace, data)\n                    .trigger('onFrame.' + namespace, data)\n                    .trigger('onDraw.' + namespace, data)\n                    .trigger('onComplete.' + namespace, data);\n            }\n        });\n    }\n    /**\n     * Creates a new SpriteSpin instance\n     *\n     * @public\n     */\n    function create(options) {\n        var _this = this;\n        var target = options.target;\n        // SpriteSpin is not initialized\n        // Create default settings object and extend with given options\n        var data = $$2.extend(true, {}, defaults, options);\n        // ensure source is set\n        data.source = data.source || [];\n        // ensure plugins are set\n        data.plugins = data.plugins || [\n            '360',\n            'drag'\n        ];\n        // if image tags are contained inside this DOM element\n        // use these images as the source files\n        target.find('img').each(function () {\n            if (!Array.isArray(data.source)) {\n                data.source = [];\n            }\n            data.source.push($$2(_this).attr('src'));\n        });\n        // build inner html\n        // <div>\n        //   <div class='spritespin-stage'></div>\n        //   <canvas class='spritespin-canvas'></canvas>\n        // </div>\n        target\n            .empty()\n            .addClass('spritespin-instance')\n            .append(\"<div class='spritespin-stage'></div>\");\n        // add the canvas element if canvas rendering is enabled and supported\n        if (data.renderer === 'canvas') {\n            var canvas = document.createElement('canvas');\n            if (!!(canvas.getContext && canvas.getContext('2d'))) {\n                data.canvas = $$2(canvas).addClass('spritespin-canvas');\n                data.context = canvas.getContext('2d');\n                target.append(data.canvas);\n                target.addClass('with-canvas');\n            }\n            else {\n                // fallback to image rendering mode\n                data.renderer = 'image';\n            }\n        }\n        // setup references to DOM elements\n        data.target = target;\n        data.stage = target.find('.spritespin-stage');\n        // store the data\n        target.data(namespace, data);\n        pushInstance(data);\n        return data;\n    }\n    /**\n     * Creates a new SpriteSpin instance, or updates an existing one\n     *\n     * @public\n     */\n    function createOrUpdate(options) {\n        lazyinit();\n        var data = options.target.data(namespace);\n        if (!data) {\n            data = create(options);\n        }\n        else {\n            $$2.extend(data, options);\n        }\n        boot(data);\n        return data;\n    }\n    /**\n     * Destroys the SpriteSpin instance\n     *\n     * @remarks\n     * - stops running animation\n     * - unbinds all events\n     * - deletes the data on the target element\n     *\n     * @public\n     */\n    function destroy(data) {\n        popInstance(data);\n        stopAnimation(data);\n        data.target\n            .trigger('onDestroy', data)\n            .html(null)\n            .attr('style', null)\n            .attr('unselectable', null)\n            .removeClass(['spritespin-instance', 'with-canvas']);\n        unbind(data.target);\n        data.target.removeData(namespace);\n    }\n\n    /**\n     * Gets the current input state\n     *\n     * @public\n     * @param data - The SpriteSpin instance data\n     */\n    function getInputState(data) {\n        return getState(data, 'input');\n    }\n    /**\n     * Updates the input state using a mous or touch event.\n     *\n     * @public\n     * @param e - The input event\n     * @param data - The SpriteSpin instance data\n     */\n    function updateInput(e, data) {\n        var cursor = getCursorPosition(e);\n        var state = getInputState(data);\n        // cache positions from previous frame\n        state.oldX = state.currentX;\n        state.oldY = state.currentY;\n        state.currentX = cursor.x;\n        state.currentY = cursor.y;\n        // Fix old position.\n        if (state.oldX === undefined || state.oldY === undefined) {\n            state.oldX = state.currentX;\n            state.oldY = state.currentY;\n        }\n        // Cache the initial click/touch position and store the frame number at which the click happened.\n        // Useful for different behavior implementations. This must be restored when the click/touch is released.\n        if (state.startX === undefined || state.startY === undefined) {\n            state.startX = state.currentX;\n            state.startY = state.currentY;\n            state.clickframe = data.frame;\n            state.clicklane = data.lane;\n        }\n        // Calculate the vector from start position to current pointer position.\n        state.dX = state.currentX - state.startX;\n        state.dY = state.currentY - state.startY;\n        // Calculate the vector from last frame position to current pointer position.\n        state.ddX = state.currentX - state.oldX;\n        state.ddY = state.currentY - state.oldY;\n        // Normalize vectors to range [-1:+1]\n        state.ndX = state.dX / data.target.innerWidth();\n        state.ndY = state.dY / data.target.innerHeight();\n        state.nddX = state.ddX / data.target.innerWidth();\n        state.nddY = state.ddY / data.target.innerHeight();\n    }\n    /**\n     * Resets the input state.\n     *\n     * @public\n     */\n    function resetInput(data) {\n        var input = getInputState(data);\n        input.startX = input.startY = undefined;\n        input.currentX = input.currentY = undefined;\n        input.oldX = input.oldY = undefined;\n        input.dX = input.dY = 0;\n        input.ddX = input.ddY = 0;\n        input.ndX = input.ndY = 0;\n        input.nddX = input.nddY = 0;\n    }\n\n    function extension(option, value) {\n        var $target = $$1(this);\n        if (option === 'data') {\n            return $target.data(namespace);\n        }\n        if (option === 'api') {\n            var data = $target.data(namespace);\n            data.api = data.api || new Api(data);\n            return data.api;\n        }\n        if (option === 'destroy') {\n            return $target.each(function () {\n                var data = $target.data(namespace);\n                if (data) {\n                    destroy(data);\n                }\n            });\n        }\n        if (arguments.length === 2 && typeof option === 'string') {\n            option = (_a = {}, _a[option] = value, _a);\n        }\n        if (typeof option === 'object') {\n            return createOrUpdate($$1.extend(true, { target: $target }, option)).target;\n        }\n        throw new Error('Invalid call to spritespin');\n        var _a;\n    }\n    $$1.fn[namespace] = extension;\n\n// tslint:disable:object-literal-shorthand\n// tslint:disable:only-arrow-functions\n    extendApi({\n        // Gets a value indicating whether the animation is currently running.\n        isPlaying: function () {\n            return getPlaybackState(this.data).handler != null;\n        },\n        // Gets a value indicating whether the animation looping is enabled.\n        isLooping: function () {\n            return this.data.loop;\n        },\n        // Starts/Stops the animation playback\n        toggleAnimation: function () {\n            if (this.isPlaying()) {\n                this.stopAnimation();\n            }\n            else {\n                this.startAnimation();\n            }\n        },\n        // Stops animation playback\n        stopAnimation: function () {\n            this.data.animate = false;\n            stopAnimation(this.data);\n        },\n        // Starts animation playback\n        startAnimation: function () {\n            this.data.animate = true;\n            applyAnimation(this.data);\n        },\n        // Sets a value indicating whether the animation should be looped or not.\n        // This might start the animation (if the 'animate' data attribute is set to true)\n        loop: function (value) {\n            this.data.loop = value;\n            applyAnimation(this.data);\n            return this;\n        },\n        // Gets the current frame number\n        currentFrame: function () {\n            return this.data.frame;\n        },\n        // Updates SpriteSpin to the specified frame.\n        updateFrame: function (frame) {\n            updateFrame(this.data, frame);\n            return this;\n        },\n        // Skips the given number of frames\n        skipFrames: function (step) {\n            var data = this.data;\n            updateFrame(data, data.frame + (data.reverse ? -step : +step));\n            return this;\n        },\n        // Updates SpriteSpin so that the next frame is shown\n        nextFrame: function () {\n            return this.skipFrames(1);\n        },\n        // Updates SpriteSpin so that the previous frame is shown\n        prevFrame: function () {\n            return this.skipFrames(-1);\n        },\n        // Starts the animations that will play until the given frame number is reached\n        // options:\n        //   force [boolean] starts the animation, even if current frame is the target frame\n        //   nearest [boolean] animates to the direction with minimum distance to the target frame\n        playTo: function (frame, options) {\n            var data = this.data;\n            options = options || {};\n            if (!options.force && data.frame === frame) {\n                return;\n            }\n            if (options.nearest) {\n                // distance to the target frame\n                var a = frame - data.frame;\n                // distance to last frame and the to target frame\n                var b = frame > data.frame ? a - data.frames : a + data.frames;\n                // minimum distance\n                var c = Math.abs(a) < Math.abs(b) ? a : b;\n                data.reverse = c < 0;\n            }\n            data.animate = true;\n            data.loop = false;\n            data.stopFrame = frame;\n            applyAnimation(data);\n            return this;\n        }\n    });\n\n    function pick(target, names) {\n        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n            var name_1 = names_1[_i];\n            if (target[name_1] || name_1 in target) {\n                return name_1;\n            }\n        }\n        return names[0];\n    }\n    var browser = {\n        requestFullscreen: pick(document.documentElement, [\n            'requestFullscreen',\n            'webkitRequestFullScreen',\n            'mozRequestFullScreen',\n            'msRequestFullscreen'\n        ]),\n        exitFullscreen: pick(document, [\n            'exitFullscreen',\n            'webkitExitFullscreen',\n            'webkitCancelFullScreen',\n            'mozCancelFullScreen',\n            'msExitFullscreen'\n        ]),\n        fullscreenElement: pick(document, [\n            'fullscreenElement',\n            'webkitFullscreenElement',\n            'webkitCurrentFullScreenElement',\n            'mozFullScreenElement',\n            'msFullscreenElement'\n        ]),\n        fullscreenEnabled: pick(document, [\n            'fullscreenEnabled',\n            'webkitFullscreenEnabled',\n            'mozFullScreenEnabled',\n            'msFullscreenEnabled'\n        ]),\n        fullscreenchange: pick(document, [\n            'onfullscreenchange',\n            'onwebkitfullscreenchange',\n            'onmozfullscreenchange',\n            'onMSFullscreenChange'\n        ]).replace(/^on/, ''),\n        fullscreenerror: pick(document, [\n            'onfullscreenerror',\n            'onwebkitfullscreenerror',\n            'onmozfullscreenerror',\n            'onMSFullscreenError'\n        ]).replace(/^on/, '')\n    };\n    var changeEvent = browser.fullscreenchange + '.' + namespace + '-fullscreen';\n    function unbindChangeEvent() {\n        $$1(document).unbind(changeEvent);\n    }\n    function bindChangeEvent(callback) {\n        unbindChangeEvent();\n        $$1(document).bind(changeEvent, callback);\n    }\n    var orientationEvent = 'orientationchange.' + namespace + '-fullscreen';\n    function unbindOrientationEvent() {\n        $$1(window).unbind(orientationEvent);\n    }\n    function bindOrientationEvent(callback) {\n        unbindOrientationEvent();\n        $$1(window).bind(orientationEvent, callback);\n    }\n    function requestFullscreenNative(e) {\n        e = e || document.documentElement;\n        e[browser.requestFullscreen]();\n    }\n    function exitFullscreen() {\n        return document[browser.exitFullscreen]();\n    }\n    function fullscreenEnabled() {\n        return document[browser.fullscreenEnabled];\n    }\n    function fullscreenElement() {\n        return document[browser.fullscreenElement];\n    }\n    function isFullscreen() {\n        return !!fullscreenElement();\n    }\n    function toggleFullscreen(data, opts) {\n        if (isFullscreen()) {\n            this.apiRequestFullscreen(opts);\n        }\n        else {\n            this.exitFullscreen();\n        }\n    }\n    function requestFullscreen(data, opts) {\n        opts = opts || {};\n        var oWidth = data.width;\n        var oHeight = data.height;\n        var oSource = data.source;\n        var oSize = data.sizeMode;\n        var oResponsive = data.responsive;\n        var enter = function () {\n            data.width = window.screen.width;\n            data.height = window.screen.height;\n            data.source = (opts.source || oSource);\n            data.sizeMode = opts.sizeMode || 'fit';\n            data.responsive = false;\n            boot(data);\n        };\n        var exit = function () {\n            data.width = oWidth;\n            data.height = oHeight;\n            data.source = oSource;\n            data.sizeMode = oSize;\n            data.responsive = oResponsive;\n            boot(data);\n        };\n        bindChangeEvent(function () {\n            if (isFullscreen()) {\n                enter();\n                bindOrientationEvent(enter);\n            }\n            else {\n                unbindChangeEvent();\n                unbindOrientationEvent();\n                exit();\n            }\n        });\n        requestFullscreenNative(data.target[0]);\n    }\n    extendApi({\n        fullscreenEnabled: fullscreenEnabled,\n        fullscreenElement: fullscreenElement,\n        exitFullscreen: exitFullscreen,\n        toggleFullscreen: function (opts) {\n            toggleFullscreen(this.data, opts);\n        },\n        requestFullscreen: function (opts) {\n            requestFullscreen(this.data, opts);\n        }\n    });\n\n    (function () {\n        var NAME = 'click';\n        function click(e, data) {\n            if (data.loading || !data.stage.is(':visible')) {\n                return;\n            }\n            updateInput(e, data);\n            var input = getInputState(data);\n            var half, pos;\n            var target = data.target, offset = target.offset();\n            if (data.orientation === 'horizontal') {\n                half = target.innerWidth() / 2;\n                pos = input.currentX - offset.left;\n            }\n            else {\n                half = target.innerHeight() / 2;\n                pos = input.currentY - offset.top;\n            }\n            updateFrame(data, data.frame + (pos > half ? 1 : -1));\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            mouseup: click,\n            touchend: click\n        });\n    })();\n\n    (function () {\n        var NAME = 'drag';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getAxis(data) {\n            if (typeof data.orientation === 'number') {\n                return data.orientation * Math.PI / 180;\n            }\n            if (data.orientation === 'horizontal') {\n                return 0;\n            }\n            return Math.PI / 2;\n        }\n        function onInit(e, data) {\n            var state = getState$$1(data);\n            var d = [200, 1500];\n            var t = data.touchScrollTimer || d;\n            state.minTime = t[0] || d[0];\n            state.maxTime = t[1] || d[1];\n        }\n        function dragStart(e, data) {\n            var state = getState$$1(data);\n            if (data.loading || is(data, 'dragging') || data['zoomPinFrame'] && !data.stage.is(':visible')) {\n                return;\n            }\n            // Touch scroll can only be disabled by cancelling the 'touchstart' event.\n            // If we would try to cancel the 'touchmove' event during a scroll\n            // chrome browser raises an error\n            //\n            // When a user interacts with sprite spin, we dont know whether the intention\n            // is to scroll the page or to roll the spin.\n            //\n            // On first interaction with SpriteSpin the scroll is not disabled\n            // On double tap within 200ms the scroll is not disabled\n            // Scroll is only disabled if there was an interaction with SpriteSpin in the past 1500ms\n            var now = new Date().getTime();\n            if (state.endAt && (now - state.endAt > state.maxTime)) {\n                // reset timer if the user has no interaction with spritespin within 1500ms\n                state.startAt = null;\n                state.endAt = null;\n            }\n            if (state.startAt && (now - state.startAt > state.minTime)) {\n                // disable scroll only if there was already an interaction with spritespin\n                // however, allow scrolling on double tab within 200ms\n                e.preventDefault();\n            }\n            state.startAt = now;\n            state.wasPlaying = !!getPlaybackState(data).handler;\n            state.frame = data.frame || 0;\n            state.lane = data.lane || 0;\n            flag(data, 'dragging', true);\n            updateInput(e, data);\n        }\n        function dragEnd(e, data) {\n            if (is(data, 'dragging')) {\n                getState$$1(data).endAt = new Date().getTime();\n                flag(data, 'dragging', false);\n                resetInput(data);\n                if (data.retainAnimate && getState$$1(data).wasPlaying) {\n                    startAnimation(data);\n                }\n            }\n        }\n        function drag(e, data) {\n            var state = getState$$1(data);\n            var input = getInputState(data);\n            if (!is(data, 'dragging')) {\n                return;\n            }\n            updateInput(e, data);\n            var rad = getAxis(data);\n            var sn = Math.sin(rad);\n            var cs = Math.cos(rad);\n            var x = ((input.nddX * cs - input.nddY * sn) * data.sense) || 0;\n            var y = ((input.nddX * sn + input.nddY * cs) * (data.senseLane || data.sense)) || 0;\n            // accumulate\n            state.frame += data.frames * x;\n            state.lane += data.lanes * y;\n            // update spritespin\n            var oldFrame = data.frame;\n            var oldLane = data.lane;\n            updateFrame(data, Math.floor(state.frame), Math.floor(state.lane));\n            stopAnimation(data);\n        }\n        function mousemove(e, data) {\n            dragStart(e, data);\n            drag(e, data);\n        }\n        registerPlugin('drag', {\n            name: 'drag',\n            onInit: onInit,\n            mousedown: dragStart,\n            mousemove: drag,\n            mouseup: dragEnd,\n            documentmousemove: drag,\n            documentmouseup: dragEnd,\n            touchstart: dragStart,\n            touchmove: drag,\n            touchend: dragEnd,\n            touchcancel: dragEnd\n        });\n        registerPlugin('move', {\n            name: 'move',\n            onInit: onInit,\n            mousemove: mousemove,\n            mouseleave: dragEnd,\n            touchstart: dragStart,\n            touchmove: drag,\n            touchend: dragEnd,\n            touchcancel: dragEnd\n        });\n    })();\n\n    (function () {\n        var NAME = 'hold';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function rememberOptions(data) {\n            var state = getState$$1(data);\n            state.frameTime = data.frameTime;\n            state.animate = data.animate;\n            state.reverse = data.reverse;\n        }\n        function restoreOptions(data) {\n            var state = getState$$1(data);\n            data.frameTime = state.frameTime;\n            data.animate = state.animate;\n            data.reverse = state.reverse;\n        }\n        function start(e, data) {\n            if (is(data, 'loading') || is(data, 'dragging') || !data.stage.is(':visible')) {\n                return;\n            }\n            rememberOptions(data);\n            updateInput(e, data);\n            flag(data, 'dragging', true);\n            data.animate = true;\n            applyAnimation(data);\n        }\n        function stop(e, data) {\n            flag(data, 'dragging', false);\n            resetInput(data);\n            stopAnimation(data);\n            restoreOptions(data);\n            applyAnimation(data);\n        }\n        function update(e, data) {\n            if (!is(data, 'dragging')) {\n                return;\n            }\n            updateInput(e, data);\n            var input = getInputState(data);\n            var half, delta;\n            var target = data.target, offset = target.offset();\n            if (data.orientation === 'horizontal') {\n                half = target.innerWidth() / 2;\n                delta = (input.currentX - offset.left - half) / half;\n            }\n            else {\n                half = (data.height / 2);\n                delta = (input.currentY - offset.top - half) / half;\n            }\n            data.reverse = delta < 0;\n            delta = delta < 0 ? -delta : delta;\n            data.frameTime = 80 * (1 - delta) + 20;\n            if (((data.orientation === 'horizontal') && (input.dX < input.dY)) ||\n                ((data.orientation === 'vertical') && (input.dX < input.dY))) {\n                e.preventDefault();\n            }\n        }\n        function onFrame(e, data) {\n            data.animate = true;\n            applyAnimation(data);\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            mousedown: start,\n            mousemove: update,\n            mouseup: stop,\n            mouseleave: stop,\n            touchstart: start,\n            touchmove: update,\n            touchend: stop,\n            touchcancel: stop,\n            onFrame: onFrame\n        });\n    })();\n\n    (function () {\n        var NAME = 'swipe';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getOption(data, name, fallback) {\n            return data[name] || fallback;\n        }\n        function init(e, data) {\n            var state = getState$$1(data);\n            state.fling = getOption(data, 'swipeFling', 10);\n            state.snap = getOption(data, 'swipeSnap', 0.50);\n        }\n        function start(e, data) {\n            if (!data.loading && !is(data, 'dragging')) {\n                updateInput(e, data);\n                flag(data, 'dragging', true);\n            }\n        }\n        function update(e, data) {\n            if (!is(data, 'dragging')) {\n                return;\n            }\n            updateInput(e, data);\n            var frame = data.frame;\n            var lane = data.lane;\n            updateFrame(data, frame, lane);\n        }\n        function end(e, data) {\n            if (!is(data, 'dragging')) {\n                return;\n            }\n            flag(data, 'dragging', false);\n            var state = getState$$1(data);\n            var input = getInputState(data);\n            var frame = data.frame;\n            var lane = data.lane;\n            var snap = state.snap;\n            var fling = state.fling;\n            var dS, dF;\n            if (data.orientation === 'horizontal') {\n                dS = input.ndX;\n                dF = input.ddX;\n            }\n            else {\n                dS = input.ndY;\n                dF = input.ddY;\n            }\n            if (dS >= snap || dF >= fling) {\n                frame = data.frame - 1;\n            }\n            else if (dS <= -snap || dF <= -fling) {\n                frame = data.frame + 1;\n            }\n            resetInput(data);\n            updateFrame(data, frame, lane);\n            stopAnimation(data);\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: init,\n            mousedown: start,\n            mousemove: update,\n            mouseup: end,\n            mouseleave: end,\n            touchstart: start,\n            touchmove: update,\n            touchend: end,\n            touchcancel: end\n        });\n    })();\n\n    (function () {\n        var NAME = 'wheel';\n        function wheel(e, data) {\n            if (!data.loading && data.stage.is(':visible')) {\n                e.preventDefault();\n                var we = e.originalEvent;\n                var signX = we.deltaX === 0 ? 0 : we.deltaX > 0 ? 1 : -1;\n                var signY = we.deltaY === 0 ? 0 : we.deltaY > 0 ? 1 : -1;\n                updateFrame(data, data.frame + signY, data.lane + signX);\n            }\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            wheel: wheel\n        });\n    })();\n\n    (function () {\n        var template = \"\\n<div class='spritespin-progress'>\\n  <div class='spritespin-progress-label'></div>\\n  <div class='spritespin-progress-bar'></div>\\n</div>\\n\";\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        var NAME = 'progress';\n        function onInit(e, data) {\n            var state = getState$$1(data);\n            if (!state.stage) {\n                state.stage = $$1(template);\n                state.stage.appendTo(data.target);\n            }\n            state.stage.find('.spritespin-progress-label')\n                .text(\"0%\")\n                .css({ 'text-align': 'center' });\n            state.stage.find('.spritespin-progress-bar').css({\n                width: \"0%\"\n            });\n            state.stage.hide().fadeIn();\n        }\n        function onProgress(e, data) {\n            var state = getState$$1(data);\n            state.stage.find('.spritespin-progress-label')\n                .text(data.progress.percent + \"%\")\n                .css({ 'text-align': 'center' });\n            state.stage.find('.spritespin-progress-bar').css({\n                width: data.progress.percent + \"%\"\n            });\n        }\n        function onLoad(e, data) {\n            $$1(getState$$1(data).stage).fadeOut();\n        }\n        function onDestroy(e, data) {\n            $$1(getState$$1(data).stage).remove();\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onInit: onInit,\n            onProgress: onProgress,\n            onLoad: onLoad,\n            onDestroy: onDestroy\n        });\n    })();\n\n    (function () {\n        var NAME = '360';\n        function onLoad(e, data) {\n            data.stage.find('.spritespin-frames').detach();\n            if (data.renderer === 'image') {\n                $(data.images).addClass('spritespin-frames').appendTo(data.stage);\n            }\n        }\n        function onDraw(e, data) {\n            var specs = findSpecs(data.metrics, data.frames, data.frame, data.lane);\n            var sheet = specs.sheet;\n            var sprite = specs.sprite;\n            if (!sheet || !sprite) {\n                return;\n            }\n            var src = data.source[sheet.id];\n            var image = data.images[sheet.id];\n            if (data.renderer === 'canvas') {\n                data.canvas.show();\n                var w = data.canvas[0].width / data.canvasRatio;\n                var h = data.canvas[0].height / data.canvasRatio;\n                data.context.clearRect(0, 0, w, h);\n                data.context.drawImage(image, sprite.sampledX, sprite.sampledY, sprite.sampledWidth, sprite.sampledHeight, 0, 0, w, h);\n                return;\n            }\n            var scaleX = data.stage.innerWidth() / sprite.sampledWidth;\n            var scaleY = data.stage.innerHeight() / sprite.sampledHeight;\n            var top = Math.floor(-sprite.sampledY * scaleY);\n            var left = Math.floor(-sprite.sampledX * scaleX);\n            var width = Math.floor(sheet.sampledWidth * scaleX);\n            var height = Math.floor(sheet.sampledHeight * scaleY);\n            if (data.renderer === 'background') {\n                data.stage.css({\n                    'background-image': \"url('\" + src + \"')\",\n                    'background-position': left + \"px \" + top + \"px\",\n                    'background-repeat': 'no-repeat',\n                    // set custom background size to enable responsive rendering\n                    '-webkit-background-size': width + \"px \" + height + \"px\",\n                    '-moz-background-size': width + \"px \" + height + \"px\",\n                    '-o-background-size': width + \"px \" + height + \"px\",\n                    'background-size': width + \"px \" + height + \"px\" /* Chrome, Firefox 4+, IE 9+, Opera, Safari 5+ */\n                });\n                return;\n            }\n            $(data.images).hide();\n            $(image).show().css({\n                position: 'absolute',\n                top: top,\n                left: left,\n                'max-width': 'initial',\n                width: width,\n                height: height\n            });\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: onLoad,\n            onDraw: onDraw\n        });\n    })();\n\n    (function () {\n        var NAME = 'blur';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getOption(data, name, fallback) {\n            return data[name] || fallback;\n        }\n        function init(e, data) {\n            var state = getState$$1(data);\n            state.canvas = state.canvas || $$1(\"<canvas class='blur-layer'></canvas>\");\n            state.context = state.context || state.canvas[0].getContext('2d');\n            state.steps = state.steps || [];\n            state.fadeTime = Math.max(getOption(data, 'blurFadeTime', 200), 1);\n            state.frameTime = Math.max(getOption(data, 'blurFrameTime', data.frameTime), 16);\n            state.trackTime = null;\n            state.cssBlur = !!getOption(data, 'blurCss', false);\n            var inner = getInnerSize(data);\n            var outer = data.responsive ? getComputedSize(data) : getOuterSize(data);\n            var css = getInnerLayout(data.sizeMode, inner, outer);\n            state.canvas[0].width = data.width * data.canvasRatio;\n            state.canvas[0].height = data.height * data.canvasRatio;\n            state.canvas.css(css).show();\n            state.context.scale(data.canvasRatio, data.canvasRatio);\n            data.target.append(state.canvas);\n        }\n        function onFrame(e, data) {\n            var state = getState$$1(data);\n            trackFrame(data);\n            if (state.timeout == null) {\n                loop(data);\n            }\n        }\n        function trackFrame(data) {\n            var state = getState$$1(data);\n            var ani = getPlaybackState(data);\n            // distance between frames\n            var d = Math.abs(data.frame - ani.lastFrame);\n            // shortest distance\n            d = d >= data.frames / 2 ? data.frames - d : d;\n            state.steps.unshift({\n                frame: data.frame,\n                lane: data.lane,\n                live: 1,\n                step: state.frameTime / state.fadeTime,\n                d: d,\n                alpha: 0\n            });\n        }\n        var toRemove = [];\n        function removeOldFrames(frames) {\n            toRemove.length = 0;\n            for (var i = 0; i < frames.length; i += 1) {\n                if (frames[i].alpha <= 0) {\n                    toRemove.push(i);\n                }\n            }\n            for (var _i = 0, toRemove_1 = toRemove; _i < toRemove_1.length; _i++) {\n                var item = toRemove_1[_i];\n                frames.splice(item, 1);\n            }\n        }\n        function loop(data) {\n            var state = getState$$1(data);\n            state.timeout = window.setTimeout(function () { tick(data); }, state.frameTime);\n        }\n        function killLoop(data) {\n            var state = getState$$1(data);\n            window.clearTimeout(state.timeout);\n            state.timeout = null;\n        }\n        function applyCssBlur(canvas, d) {\n            var amount = Math.min(Math.max((d / 2) - 4, 0), 2.5);\n            var blur = \"blur(\" + amount + \"px)\";\n            canvas.css({\n                '-webkit-filter': blur,\n                filter: blur\n            });\n        }\n        function clearFrame(data, state) {\n            state.canvas.show();\n            var w = state.canvas[0].width / data.canvasRatio;\n            var h = state.canvas[0].height / data.canvasRatio;\n            // state.context.clearRect(0, 0, w, h)\n        }\n        function drawFrame(data, state, step) {\n            if (step.alpha <= 0) {\n                return;\n            }\n            var specs = findSpecs(data.metrics, data.frames, step.frame, step.lane);\n            var sheet = specs.sheet;\n            var sprite = specs.sprite;\n            if (!sheet || !sprite) {\n                return;\n            }\n            var src = data.source[sheet.id];\n            var image = data.images[sheet.id];\n            if (image.complete === false) {\n                return;\n            }\n            state.canvas.show();\n            var w = state.canvas[0].width / data.canvasRatio;\n            var h = state.canvas[0].height / data.canvasRatio;\n            state.context.globalAlpha = step.alpha;\n            state.context.drawImage(image, sprite.sampledX, sprite.sampledY, sprite.sampledWidth, sprite.sampledHeight, 0, 0, w, h);\n        }\n        function tick(data) {\n            var state = getState$$1(data);\n            killLoop(data);\n            if (!state.context) {\n                return;\n            }\n            var d = 0;\n            clearFrame(data, state);\n            state.context.clearRect(0, 0, data.width, data.height);\n            for (var _i = 0, _a = state.steps; _i < _a.length; _i++) {\n                var step = _a[_i];\n                step.live = Math.max(step.live - step.step, 0);\n                step.alpha = Math.max(step.live - 0.25, 0);\n                drawFrame(data, state, step);\n                d += step.alpha + step.d;\n            }\n            if (state.cssBlur) {\n                applyCssBlur(state.canvas, d);\n            }\n            removeOldFrames(state.steps);\n            if (state.steps.length) {\n                loop(data);\n            }\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: init,\n            onFrameChanged: onFrame\n        });\n    })();\n\n    (function () {\n        var max = Math.max;\n        var min = Math.min;\n        var NAME = 'ease';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getOption(data, name, fallback) {\n            return data[name] || fallback;\n        }\n        function init(e, data) {\n            var state = getState$$1(data);\n            state.maxSamples = max(getOption(data, 'easeMaxSamples', 5), 0);\n            state.damping = max(min(getOption(data, 'easeDamping', 0.9), 0.999), 0);\n            state.abortTime = max(getOption(data, 'easeAbortTime', 250), 16);\n            state.updateTime = max(getOption(data, 'easeUpdateTime', data.frameTime), 16);\n            state.samples = [];\n            state.steps = [];\n        }\n        function update(e, data) {\n            if (is(data, 'dragging')) {\n                killLoop(data);\n                sampleInput(data);\n            }\n        }\n        function end(e, data) {\n            var state = getState$$1(data);\n            var samples = state.samples;\n            var last;\n            var lanes = 0;\n            var frames = 0;\n            var time = 0;\n            for (var _i = 0, samples_1 = samples; _i < samples_1.length; _i++) {\n                var sample = samples_1[_i];\n                if (!last) {\n                    last = sample;\n                    continue;\n                }\n                var dt = sample.time - last.time;\n                if (dt > state.abortTime) {\n                    lanes = frames = time = 0;\n                    return killLoop(data);\n                }\n                frames += sample.frame - last.frame;\n                lanes += sample.lane - last.lane;\n                time += dt;\n                last = sample;\n            }\n            samples.length = 0;\n            if (!time) {\n                return;\n            }\n            state.lane = data.lane;\n            state.lanes = 0;\n            state.laneStep = lanes / time * state.updateTime;\n            state.frame = data.frame;\n            state.frames = 0;\n            state.frameStep = frames / time * state.updateTime;\n            loop(data);\n        }\n        function sampleInput(data) {\n            var state = getState$$1(data);\n            // add a new sample\n            state.samples.push({\n                time: new Date().getTime(),\n                frame: data.frame,\n                lane: data.lane\n            });\n            // drop old samples\n            while (state.samples.length > state.maxSamples) {\n                state.samples.shift();\n            }\n        }\n        function killLoop(data) {\n            var state = getState$$1(data);\n            if (state.handler != null) {\n                window.clearTimeout(state.handler);\n                state.handler = null;\n            }\n        }\n        function loop(data) {\n            var state = getState$$1(data);\n            state.handler = window.setTimeout(function () { tick(data); }, state.updateTime);\n        }\n        function tick(data) {\n            var state = getState$$1(data);\n            state.lanes += state.laneStep;\n            state.frames += state.frameStep;\n            state.laneStep *= state.damping;\n            state.frameStep *= state.damping;\n            var frame = Math.floor(state.frame + state.frames);\n            var lane = Math.floor(state.lane + state.lanes);\n            updateFrame(data, frame, lane);\n            if (is(data, 'dragging')) {\n                killLoop(data);\n            }\n            else if (Math.abs(state.frameStep) > 0.005 || Math.abs(state.laneStep) > 0.005) {\n                loop(data);\n            }\n            else {\n                killLoop(data);\n            }\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: init,\n            mousemove: update,\n            mouseup: end,\n            mouseleave: end,\n            touchmove: update,\n            touchend: end,\n            touchcancel: end\n        });\n    })();\n\n    (function () {\n        var NAME = 'gallery';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getOption(data, name, fallback) {\n            return data[name] || fallback;\n        }\n        function load(e, data) {\n            var state = getState$$1(data);\n            state.images = [];\n            state.offsets = [];\n            state.frame = data.frame;\n            state.speed = getOption(data, 'gallerySpeed', 500);\n            state.opacity = getOption(data, 'galleryOpacity', 0.25);\n            state.stage = getOption(data, 'galleryStage', $$1('<div></div>'));\n            state.stage.empty().addClass('gallery-stage').prependTo(data.stage);\n            var size = 0;\n            for (var _i = 0, _a = data.images; _i < _a.length; _i++) {\n                var image = _a[_i];\n                var naturalSize$$1 = naturalSize(image);\n                var scale = data.height / naturalSize$$1.height;\n                var img = $$1(image);\n                state.stage.append(img);\n                state.images.push(img);\n                state.offsets.push(-size + (data.width - image.width * scale) / 2);\n                size += data.width;\n                img.css({\n                    'max-width': 'initial',\n                    opacity: state.opacity,\n                    width: data.width,\n                    height: data.height\n                });\n            }\n            var innerSize = getInnerSize(data);\n            var outerSize = data.responsive ? getComputedSize(data) : getOuterSize(data);\n            var layout = getInnerLayout(data.sizeMode, innerSize, outerSize);\n            state.stage.css(layout).css({ width: size, left: state.offsets[state.frame] });\n            state.images[state.frame].animate({ opacity: 1 }, { duration: state.speed });\n        }\n        function draw(e, data) {\n            var state = getState$$1(data);\n            var input = getInputState(data);\n            var isDragging = is(data, 'dragging');\n            if (state.frame !== data.frame && !isDragging) {\n                state.stage.stop(true, false).animate({ left: state.offsets[data.frame] }, { duration: state.speed });\n                state.images[state.frame].animate({ opacity: state.opacity }, { duration: state.speed });\n                state.frame = data.frame;\n                state.images[state.frame].animate({ opacity: 1 }, { duration: state.speed });\n                state.stage.animate({ left: state.offsets[state.frame] });\n            }\n            else if (isDragging || state.dX !== input.dX) {\n                state.dX = input.dX;\n                state.ddX = input.ddX;\n                state.stage.stop(true, true).css({ left: state.offsets[state.frame] + state.dX });\n            }\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: load,\n            onDraw: draw\n        });\n    })();\n\n    (function () {\n        var NAME = 'panorama';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function onLoad(e, data) {\n            var state = getState$$1(data);\n            var sprite = data.metrics[0];\n            if (!sprite) {\n                return;\n            }\n            if (data.orientation === 'horizontal') {\n                state.scale = data.target.innerHeight() / sprite.sampledHeight;\n                data.frames = sprite.sampledWidth;\n            }\n            else {\n                state.scale = data.target.innerWidth() / sprite.sampledWidth;\n                data.frames = sprite.sampledHeight;\n            }\n            var width = Math.floor(sprite.sampledWidth * state.scale);\n            var height = Math.floor(sprite.sampledHeight * state.scale);\n            data.stage.css({\n                'background-image': \"url(\" + data.source[sprite.id] + \")\",\n                'background-repeat': 'repeat-both',\n                // set custom background size to enable responsive rendering\n                '-webkit-background-size': width + \"px \" + height + \"px\",\n                '-moz-background-size': width + \"px \" + height + \"px\",\n                '-o-background-size': width + \"px \" + height + \"px\",\n                'background-size': width + \"px \" + height + \"px\" /* Chrome, Firefox 4+, IE 9+, Opera, Safari 5+ */\n            });\n        }\n        function onDraw(e, data) {\n            var state = getState$$1(data);\n            var px = data.orientation === 'horizontal' ? 1 : 0;\n            var py = px ? 0 : 1;\n            var offset = data.frame % data.frames;\n            var left = Math.round(px * offset * state.scale);\n            var top = Math.round(py * offset * state.scale);\n            data.stage.css({ 'background-position': left + \"px \" + top + \"px\" });\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            onLoad: onLoad,\n            onDraw: onDraw\n        });\n    })();\n\n    (function () {\n        var NAME = 'zoom';\n        function getState$$1(data) {\n            return getPluginState(data, NAME);\n        }\n        function getOption(data, name, fallback) {\n            return name in data ? data[name] : fallback;\n        }\n        function onInit(e, data) {\n            var state = getState$$1(data);\n            state.source = getOption(data, 'zoomSource', data.source);\n            state.useWheel = getOption(data, 'zoomUseWheel', false);\n            state.useClick = getOption(data, 'zoomUseClick', true);\n            state.pinFrame = getOption(data, 'zoomPinFrame', true);\n            state.doubleClickTime = getOption(data, 'zoomDoubleClickTime', 500);\n            state.stage = state.stage || $$1(\"<div class='zoom-stage'></div>\");\n            state.stage.css({\n                width: '100%',\n                height: '100%',\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0,\n                position: 'absolute'\n            })\n                .appendTo(data.target)\n                .hide();\n        }\n        function onDestroy(e, data) {\n            var state = getState$$1(data);\n            if (state.stage) {\n                state.stage.remove();\n                delete state.stage;\n            }\n        }\n        function updateInput$$1(e, data) {\n            var state = getState$$1(data);\n            if (!state.stage.is(':visible')) {\n                return;\n            }\n            e.preventDefault();\n            if (state.pinFrame) {\n                // hack into drag/move module and disable dragging\n                // prevents frame change during zoom mode\n                flag(data, 'dragging', false);\n            }\n            // grab touch/cursor position\n            var cursor = getCursorPosition(e);\n            // normalize cursor position into [0:1] range\n            var x = cursor.x / data.width;\n            var y = cursor.y / data.height;\n            if (state.oldX == null) {\n                state.oldX = x;\n                state.oldY = y;\n            }\n            if (state.currentX == null) {\n                state.currentX = x;\n                state.currentY = y;\n            }\n            // calculate move delta since last frame and remember current position\n            var dx = x - state.oldX;\n            var dy = y - state.oldY;\n            state.oldX = x;\n            state.oldY = y;\n            // invert drag direction for touch events to enable 'natural' scrolling\n            if (e.type.match(/touch/)) {\n                dx = -dx;\n                dy = -dy;\n            }\n            // accumulate display coordinates\n            state.currentX = clamp(state.currentX + dx, 0, 1);\n            state.currentY = clamp(state.currentY + dy, 0, 1);\n            updateFrame(data, data.frame, data.lane);\n        }\n        function onClick(e, data) {\n            var state = getState$$1(data);\n            if (!state.useClick) {\n                return;\n            }\n            e.preventDefault();\n            // simulate double click\n            var clickTime = new Date().getTime();\n            if (!state.clickTime) {\n                // on first click\n                state.clickTime = clickTime;\n                return;\n            }\n            // on second click\n            var timeDelta = clickTime - state.clickTime;\n            if (timeDelta > state.doubleClickTime) {\n                // took too long, back to first click\n                state.clickTime = clickTime;\n                return;\n            }\n            // on valid double click\n            state.clickTime = undefined;\n            if (toggleZoom(data)) {\n                updateInput$$1(e, data);\n            }\n        }\n        function onMove(e, data) {\n            var state = getState$$1(data);\n            if (state.stage.is(':visible')) {\n                updateInput$$1(e, data);\n            }\n        }\n        function onDraw(e, data) {\n            var state = getState$$1(data);\n            // calculate the frame index\n            var index = data.lane * data.frames + data.frame;\n            // get the zoom image. Use original frames as fallback. This won't work for spritesheets\n            var source = state.source[index];\n            var spec = findSpecs(data.metrics, data.frames, data.frame, data.lane);\n            // get display position\n            var x = state.currentX;\n            var y = state.currentY;\n            // fallback to centered position\n            if (x == null) {\n                x = state.currentX = 0.5;\n                y = state.currentY = 0.5;\n            }\n            if (source) {\n                // scale up from [0:1] to [0:100] range\n                x = Math.floor(x * 100);\n                y = Math.floor(y * 100);\n                // update background image and position\n                state.stage.css({\n                    'background-repeat': 'no-repeat',\n                    'background-image': \"url('\" + source + \"')\",\n                    'background-position': x + \"% \" + y + \"%\"\n                });\n            }\n            else if (spec.sheet && spec.sprite) {\n                var sprite = spec.sprite;\n                var sheet = spec.sheet;\n                var src = data.source[sheet.id];\n                var left = -Math.floor(sprite.sampledX + x * (sprite.sampledWidth - data.width));\n                var top_1 = -Math.floor(sprite.sampledY + y * (sprite.sampledHeight - data.height));\n                var width = sheet.sampledWidth;\n                var height = sheet.sampledHeight;\n                state.stage.css({\n                    'background-image': \"url('\" + src + \"')\",\n                    'background-position': left + \"px \" + top_1 + \"px\",\n                    'background-repeat': 'no-repeat',\n                    // set custom background size to enable responsive rendering\n                    '-webkit-background-size': width + \"px \" + height + \"px\",\n                    '-moz-background-size': width + \"px \" + height + \"px\",\n                    '-o-background-size': width + \"px \" + height + \"px\",\n                    'background-size': width + \"px \" + height + \"px\" /* Chrome, Firefox 4+, IE 9+, Opera, Safari 5+ */\n                });\n            }\n        }\n        function toggleZoom(data) {\n            var state = getState$$1(data);\n            if (!state.stage) {\n                throw new Error('zoom module is not initialized or is not available.');\n            }\n            if (state.stage.is(':visible')) {\n                showZoom(data);\n            }\n            else {\n                hideZoom(data);\n                return true;\n            }\n            return false;\n        }\n        function showZoom(data) {\n            var state = getState$$1(data);\n            state.stage.fadeOut();\n            data.stage.fadeIn();\n        }\n        function hideZoom(data) {\n            var state = getState$$1(data);\n            state.stage.fadeIn();\n            data.stage.fadeOut();\n        }\n        function wheel(e, data) {\n            var state = getState$$1(data);\n            if (!data.loading && state.useWheel) {\n                var we = e.originalEvent;\n                var signY = we.deltaY === 0 ? 0 : we.deltaY > 0 ? 1 : -1;\n                if (typeof state.useWheel === 'number') {\n                    signY *= state.useWheel;\n                }\n                if (state.stage.is(':visible') && signY > 0) {\n                    e.preventDefault();\n                    showZoom(data);\n                }\n                if (!state.stage.is(':visible') && signY < 0) {\n                    e.preventDefault();\n                    hideZoom(data);\n                }\n            }\n        }\n        registerPlugin(NAME, {\n            name: NAME,\n            mousedown: onClick,\n            touchstart: onClick,\n            mousemove: onMove,\n            touchmove: onMove,\n            wheel: wheel,\n            onInit: onInit,\n            onDestroy: onDestroy,\n            onDraw: onDraw\n        });\n        extendApi({\n            toggleZoom: function () { toggleZoom(this.data); } // tslint:disable-line\n        });\n    })();\n\n    var Utils = _Utils;\n\n    exports.Utils = Utils;\n    exports.sourceArray = sourceArray;\n    exports.Api = Api;\n    exports.extendApi = extendApi;\n    exports.instances = instances;\n    exports.applyEvents = applyEvents;\n    exports.boot = boot;\n    exports.create = create;\n    exports.createOrUpdate = createOrUpdate;\n    exports.destroy = destroy;\n    exports.namespace = namespace;\n    exports.eventNames = eventNames;\n    exports.callbackNames = callbackNames;\n    exports.eventsToPrevent = eventsToPrevent;\n    exports.defaults = defaults;\n    exports.getInputState = getInputState;\n    exports.updateInput = updateInput;\n    exports.resetInput = resetInput;\n    exports.applyLayout = applyLayout;\n    exports.getPlaybackState = getPlaybackState;\n    exports.updateFrame = updateFrame;\n    exports.stopAnimation = stopAnimation;\n    exports.applyAnimation = applyAnimation;\n    exports.startAnimation = startAnimation;\n    exports.registerPlugin = registerPlugin;\n    exports.registerModule = registerModule;\n    exports.getPlugin = getPlugin;\n    exports.applyPlugins = applyPlugins;\n    exports.getState = getState;\n    exports.getPluginState = getPluginState;\n    exports.is = is;\n    exports.flag = flag;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));","Sm_ListingTabs/js/owl.carousel.js":"/**\n * Owl carousel\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n * @todo Lazy Load Icon\n * @todo prevent animationend bubling\n * @todo itemsScaleUp\n * @todo Test Zepto\n * @todo stagePadding calculate wrong active classes\n */\ndefine( [ \"jquery\" ], function ( $ ) {  \n;\n(function ($, window, document, undefined) {\n\n    var drag, state, e;\n\n    /**\n     * Template for status information about drag and touch events.\n     * @private\n     */\n    drag = {\n        start: 0,\n        startX: 0,\n        startY: 0,\n        current: 0,\n        currentX: 0,\n        currentY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        distance: null,\n        startTime: 0,\n        endTime: 0,\n        updatedX: 0,\n        targetEl: null\n    };\n\n    /**\n     * Template for some status informations.\n     * @private\n     */\n    state = {\n        isTouch: false,\n        isScrolling: false,\n        isSwiping: false,\n        direction: false,\n        inMotion: false\n    };\n\n    /**\n     * Event functions references.\n     * @private\n     */\n    e = {\n        _onDragStart: null,\n        _onDragMove: null,\n        _onDragEnd: null,\n        _transitionEnd: null,\n        _resizer: null,\n        _responsiveCall: null,\n        _goToLoop: null,\n        _checkVisibile: null\n    };\n\n    /**\n     * Creates a carousel.\n     * @class The Owl Carousel.\n     * @public\n     * @param {HTMLElement|jQuery} element - The element to create the carousel for.\n     * @param {Object} [options] - The options\n     */\n    function Owl(element, options) {\n\n        /**\n         * Current settings for the carousel.\n         * @public\n         */\n        this.settings = null;\n\n        /**\n         * Current options set by the caller including defaults.\n         * @public\n         */\n        this.options = $.extend({}, Owl.Defaults, options);\n\n        /**\n         * Plugin element.\n         * @public\n         */\n        this.$element = $(element);\n\n        /**\n         * Caches informations about drag and touch events.\n         */\n        this.drag = $.extend({}, drag);\n\n        /**\n         * Caches some status informations.\n         * @protected\n         */\n        this.state = $.extend({}, state);\n\n        /**\n         * @protected\n         * @todo Must be documented\n         */\n        this.e = $.extend({}, e);\n\n        /**\n         * References to the running plugins of this carousel.\n         * @protected\n         */\n        this._plugins = {};\n\n        /**\n         * Currently suppressed events to prevent them from beeing retriggered.\n         * @protected\n         */\n        this._supress = {};\n\n        /**\n         * Absolute current position.\n         * @protected\n         */\n        this._current = null;\n\n        /**\n         * Animation speed in milliseconds.\n         * @protected\n         */\n        this._speed = null;\n\n        /**\n         * Coordinates of all items in pixel.\n         * @todo The name of this member is missleading.\n         * @protected\n         */\n        this._coordinates = [];\n\n        /**\n         * Current breakpoint.\n         * @todo Real media queries would be nice.\n         * @protected\n         */\n        this._breakpoint = null;\n\n        /**\n         * Current width of the plugin element.\n         */\n        this._width = null;\n\n        /**\n         * All real items.\n         * @protected\n         */\n        this._items = [];\n\n        /**\n         * All cloned items.\n         * @protected\n         */\n        this._clones = [];\n\n        /**\n         * Merge values of all items.\n         * @todo Maybe this could be part of a plugin.\n         * @protected\n         */\n        this._mergers = [];\n\n        /**\n         * Invalidated parts within the update process.\n         * @protected\n         */\n        this._invalidated = {};\n\n        /**\n         * Ordered list of workers for the update process.\n         * @protected\n         */\n        this._pipe = [];\n\n        $.each(Owl.Plugins, $.proxy(function (key, plugin) {\n            this._plugins[key[0].toLowerCase() + key.slice(1)]\n                = new plugin(this);\n        }, this));\n\n        $.each(Owl.Pipe, $.proxy(function (priority, worker) {\n            this._pipe.push({\n                'filter': worker.filter,\n                'run': $.proxy(worker.run, this)\n            });\n        }, this));\n\n        this.setup();\n        this.initialize();\n    }\n\n    /**\n     * Default options for the carousel.\n     * @public\n     */\n    Owl.Defaults = {\n        items: 3,\n        loop: false,\n        center: false,\n\n        mouseDrag: true,\n        touchDrag: true,\n        pullDrag: true,\n        freeDrag: false,\n\n        margin: 0,\n        stagePadding: 0,\n\n        merge: false,\n        mergeFit: true,\n        autoWidth: false,\n\n        startPosition: 0,\n        rtl: false,\n\n        smartSpeed: 250,\n        fluidSpeed: false,\n        dragEndSpeed: false,\n\n        responsive: {},\n        responsiveRefreshRate: 200,\n        responsiveBaseElement: window,\n        responsiveClass: false,\n\n        fallbackEasing: 'swing',\n\n        info: false,\n\n        nestedItemSelector: false,\n        itemElement: 'div',\n        stageElement: 'div',\n\n        // Classes and Names\n        themeClass: 'owl-theme',\n        baseClass: 'owl-carousel',\n        itemClass: 'owl-item',\n        centerClass: 'center',\n        activeClass: 'active'\n    };\n\n    /**\n     * Enumeration for width.\n     * @public\n     * @readonly\n     * @enum {String}\n     */\n    Owl.Width = {\n        Default: 'default',\n        Inner: 'inner',\n        Outer: 'outer'\n    };\n\n    /**\n     * Contains all registered plugins.\n     * @public\n     */\n    Owl.Plugins = {};\n\n    /**\n     * Update pipe.\n     */\n    Owl.Pipe = [\n        {\n            filter: ['width', 'items', 'settings'],\n            run: function (cache) {\n                cache.current = this._items && this._items[this.relative(this._current)];\n            }\n        },\n        {\n            filter: ['items', 'settings'],\n            run: function () {\n                var cached = this._clones,\n                    clones = this.$stage.children('.cloned');\n\n                if (clones.length !== cached.length || (!this.settings.loop && cached.length > 0)) {\n                    this.$stage.children('.cloned').remove();\n                    this._clones = [];\n                }\n            }\n        },\n        {\n            filter: ['items', 'settings'],\n            run: function () {\n                var i, n,\n                    clones = this._clones,\n                    items = this._items,\n                    delta = this.settings.loop ? clones.length - Math.max(this.settings.items * 2, 4) : 0;\n\n                for (i = 0, n = Math.abs(delta / 2); i < n; i++) {\n                    if (delta > 0) {\n                        this.$stage.children().eq(items.length + clones.length - 1).remove();\n                        clones.pop();\n                        this.$stage.children().eq(0).remove();\n                        clones.pop();\n                    } else {\n                        clones.push(clones.length / 2);\n                        this.$stage.append(items[clones[clones.length - 1]].clone().addClass('cloned'));\n                        clones.push(items.length - 1 - (clones.length - 1) / 2);\n                        this.$stage.prepend(items[clones[clones.length - 1]].clone().addClass('cloned'));\n                    }\n                }\n            }\n        },\n        {\n            filter: ['width', 'items', 'settings'],\n            run: function () {\n                var rtl = (this.settings.rtl ? 1 : -1),\n                    width = (this.width() / this.settings.items).toFixed(3),\n                    coordinate = 0, merge, i, n;\n\n                this._coordinates = [];\n                for (i = 0, n = this._clones.length + this._items.length; i < n; i++) {\n                    merge = this._mergers[this.relative(i)];\n                    merge = (this.settings.mergeFit && Math.min(merge, this.settings.items)) || merge;\n                    coordinate += (this.settings.autoWidth ? this._items[this.relative(i)].width() + this.settings.margin : width * merge) * rtl;\n\n                    this._coordinates.push(coordinate);\n                }\n            }\n        },\n        {\n            filter: ['width', 'items', 'settings'],\n            run: function () {\n                var i, n, width = (this.width() / this.settings.items).toFixed(3), css = {\n                    'width': Math.abs(this._coordinates[this._coordinates.length - 1]) + this.settings.stagePadding * 2,\n                    'padding-left': this.settings.stagePadding || '',\n                    'padding-right': this.settings.stagePadding || ''\n                };\n\n                this.$stage.css(css);\n\n                css = {'width': this.settings.autoWidth ? 'auto' : width - this.settings.margin};\n                css[this.settings.rtl ? 'margin-left' : 'margin-right'] = this.settings.margin;\n\n                if (!this.settings.autoWidth && $.grep(this._mergers, function (v) {\n                        return v > 1\n                    }).length > 0) {\n                    for (i = 0, n = this._coordinates.length; i < n; i++) {\n                        css.width = Math.abs(this._coordinates[i]) - Math.abs(this._coordinates[i - 1] || 0) - this.settings.margin;\n                        this.$stage.children().eq(i).css(css);\n                    }\n                } else {\n                    this.$stage.children().css(css);\n                }\n            }\n        },\n        {\n            filter: ['width', 'items', 'settings'],\n            run: function (cache) {\n                cache.current && this.reset(this.$stage.children().index(cache.current));\n            }\n        },\n        {\n            filter: ['position'],\n            run: function () {\n                this.animate(this.coordinates(this._current));\n            }\n        },\n        {\n            filter: ['width', 'position', 'items', 'settings'],\n            run: function () {\n                var rtl = this.settings.rtl ? 1 : -1,\n                    padding = this.settings.stagePadding * 2,\n                    begin = this.coordinates(this.current()) + padding,\n                    end = begin + this.width() * rtl,\n                    inner, outer, matches = [], i, n;\n\n                for (i = 0, n = this._coordinates.length; i < n; i++) {\n                    inner = this._coordinates[i - 1] || 0;\n                    outer = Math.abs(this._coordinates[i]) + padding * rtl;\n\n                    if ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))\n                        || (this.op(outer, '<', begin) && this.op(outer, '>', end))) {\n                        matches.push(i);\n                    }\n                }\n\n                this.$stage.children('.' + this.settings.activeClass).removeClass(this.settings.activeClass);\n                this.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass(this.settings.activeClass);\n\n                if (this.settings.center) {\n                    this.$stage.children('.' + this.settings.centerClass).removeClass(this.settings.centerClass);\n                    this.$stage.children().eq(this.current()).addClass(this.settings.centerClass);\n                }\n            }\n        }\n    ];\n\n    /**\n     * Initializes the carousel.\n     * @protected\n     */\n    Owl.prototype.initialize = function () {\n        this.trigger('initialize');\n\n        this.$element\n            .addClass(this.settings.baseClass)\n            .addClass(this.settings.themeClass)\n            .toggleClass('owl-rtl', this.settings.rtl);\n\n        // check support\n        this.browserSupport();\n\n        if (this.settings.autoWidth && this.state.imagesLoaded !== true) {\n            var imgs, nestedSelector, width;\n            imgs = this.$element.find('img');\n            nestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;\n            width = this.$element.children(nestedSelector).width();\n\n            if (imgs.length && width <= 0) {\n                this.preloadAutoWidthImages(imgs);\n                return false;\n            }\n        }\n\n        this.$element.addClass('owl-loading');\n\n        // create stage\n        this.$stage = $('<' + this.settings.stageElement + ' class=\"owl-stage\"/>')\n            .wrap('<div class=\"owl-stage-outer\">');\n\n        // append stage\n        this.$element.append(this.$stage.parent());\n\n        // append content\n        this.replace(this.$element.children().not(this.$stage.parent()));\n\n        // set view width\n        this._width = this.$element.width();\n\n        // update view\n        this.refresh();\n\n        this.$element.removeClass('owl-loading').addClass('owl-loaded');\n\n        // attach generic events\n        this.eventsCall();\n\n        // attach generic events\n        this.internalEvents();\n\n        // attach custom control events\n        this.addTriggerableEvents();\n\n        this.trigger('initialized');\n    };\n\n    /**\n     * Setups the current settings.\n     * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n     * @todo Support for media queries by using `matchMedia` would be nice.\n     * @public\n     */\n    Owl.prototype.setup = function () {\n        var viewport = this.viewport(),\n            overwrites = this.options.responsive,\n            match = -1,\n            settings = null;\n\n        if (!overwrites) {\n            settings = $.extend({}, this.options);\n        } else {\n            $.each(overwrites, function (breakpoint) {\n                if (breakpoint <= viewport && breakpoint > match) {\n                    match = Number(breakpoint);\n                }\n            });\n\n            settings = $.extend({}, this.options, overwrites[match]);\n            delete settings.responsive;\n\n            // responsive class\n            if (settings.responsiveClass) {\n                this.$element.attr('class', function (i, c) {\n                    return c.replace(/\\b owl-responsive-\\S+/g, '');\n                }).addClass('owl-responsive-' + match);\n            }\n        }\n\n        if (this.settings === null || this._breakpoint !== match) {\n            this.trigger('change', {property: {name: 'settings', value: settings}});\n            this._breakpoint = match;\n            this.settings = settings;\n            this.invalidate('settings');\n            this.trigger('changed', {property: {name: 'settings', value: this.settings}});\n        }\n    };\n\n    /**\n     * Updates option logic if necessery.\n     * @protected\n     */\n    Owl.prototype.optionsLogic = function () {\n        // Toggle Center class\n        this.$element.toggleClass('owl-center', this.settings.center);\n\n        // if items number is less than in body\n        if (this.settings.loop && this._items.length < this.settings.items) {\n            this.settings.loop = false;\n        }\n\n        if (this.settings.autoWidth) {\n            this.settings.stagePadding = false;\n            this.settings.merge = false;\n        }\n    };\n\n    /**\n     * Prepares an item before add.\n     * @todo Rename event parameter `content` to `item`.\n     * @protected\n     * @returns {jQuery|HTMLElement} - The item container.\n     */\n    Owl.prototype.prepare = function (item) {\n        var event = this.trigger('prepare', {content: item});\n\n        if (!event.data) {\n            event.data = $('<' + this.settings.itemElement + '/>')\n                .addClass(this.settings.itemClass).append(item)\n        }\n\n        this.trigger('prepared', {content: event.data});\n\n        return event.data;\n    };\n\n    /**\n     * Updates the view.\n     * @public\n     */\n    Owl.prototype.update = function () {\n        var i = 0,\n            n = this._pipe.length,\n            filter = $.proxy(function (p) {\n                return this[p]\n            }, this._invalidated),\n            cache = {};\n\n        while (i < n) {\n            if (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {\n                this._pipe[i].run(cache);\n            }\n            i++;\n        }\n\n        this._invalidated = {};\n    };\n\n    /**\n     * Gets the width of the view.\n     * @public\n     * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.\n     * @returns {Number} - The width of the view in pixel.\n     */\n    Owl.prototype.width = function (dimension) {\n        dimension = dimension || Owl.Width.Default;\n        switch (dimension) {\n            case Owl.Width.Inner:\n            case Owl.Width.Outer:\n                return this._width;\n            default:\n                return this._width - this.settings.stagePadding * 2 + this.settings.margin;\n        }\n    };\n\n    /**\n     * Refreshes the carousel primarily for adaptive purposes.\n     * @public\n     */\n    Owl.prototype.refresh = function () {\n        if (this._items.length === 0) {\n            return false;\n        }\n\n        var start = new Date().getTime();\n\n        this.trigger('refresh');\n\n        this.setup();\n\n        this.optionsLogic();\n\n        // hide and show methods helps here to set a proper widths,\n        // this prevents scrollbar to be calculated in stage width\n        this.$stage.addClass('owl-refresh');\n\n        this.update();\n\n        this.$stage.removeClass('owl-refresh');\n\n        this.state.orientation = window.orientation;\n\n        this.watchVisibility();\n\n        this.trigger('refreshed');\n    };\n\n    /**\n     * Save internal event references and add event based functions.\n     * @protected\n     */\n    Owl.prototype.eventsCall = function () {\n        // Save events references\n        this.e._onDragStart = $.proxy(function (e) {\n            this.onDragStart(e);\n        }, this);\n        this.e._onDragMove = $.proxy(function (e) {\n            this.onDragMove(e);\n        }, this);\n        this.e._onDragEnd = $.proxy(function (e) {\n            this.onDragEnd(e);\n        }, this);\n        this.e._onResize = $.proxy(function (e) {\n            this.onResize(e);\n        }, this);\n        this.e._transitionEnd = $.proxy(function (e) {\n            this.transitionEnd(e);\n        }, this);\n        this.e._preventClick = $.proxy(function (e) {\n            this.preventClick(e);\n        }, this);\n    };\n\n    /**\n     * Checks window `resize` event.\n     * @protected\n     */\n    Owl.prototype.onThrottledResize = function () {\n        window.clearTimeout(this.resizeTimer);\n        this.resizeTimer = window.setTimeout(this.e._onResize, this.settings.responsiveRefreshRate);\n    };\n\n    /**\n     * Checks window `resize` event.\n     * @protected\n     */\n    Owl.prototype.onResize = function () {\n        if (!this._items.length) {\n            return false;\n        }\n\n        if (this._width === this.$element.width()) {\n            return false;\n        }\n\n        if (this.trigger('resize').isDefaultPrevented()) {\n            return false;\n        }\n\n        this._width = this.$element.width();\n\n        this.invalidate('width');\n\n        this.refresh();\n\n        this.trigger('resized');\n    };\n\n    /**\n     * Checks for touch/mouse drag event type and add run event handlers.\n     * @protected\n     */\n    Owl.prototype.eventsRouter = function (event) {\n        var type = event.type;\n\n        if (type === \"mousedown\" || type === \"touchstart\") {\n            this.onDragStart(event);\n        } else if (type === \"mousemove\" || type === \"touchmove\") {\n            this.onDragMove(event);\n        } else if (type === \"mouseup\" || type === \"touchend\") {\n            this.onDragEnd(event);\n        } else if (type === \"touchcancel\") {\n            this.onDragEnd(event);\n        }\n    };\n\n    /**\n     * Checks for touch/mouse drag options and add necessery event handlers.\n     * @protected\n     */\n    Owl.prototype.internalEvents = function () {\n        var isTouch = isTouchSupport(),\n            isTouchIE = isTouchSupportIE();\n\n        if (this.settings.mouseDrag) {\n            this.$stage.on('mousedown', $.proxy(function (event) {\n                this.eventsRouter(event)\n            }, this));\n            this.$stage.on('dragstart', function () {\n                return false\n            });\n            this.$stage.get(0).onselectstart = function () {\n                return false\n            };\n        } else {\n            this.$element.addClass('owl-text-select-on');\n        }\n\n        if (this.settings.touchDrag && !isTouchIE) {\n            this.$stage.on('touchstart touchcancel', $.proxy(function (event) {\n                this.eventsRouter(event)\n            }, this));\n        }\n\n        // catch transitionEnd event\n        if (this.transitionEndVendor) {\n            this.on(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd, false);\n        }\n\n        // responsive\n        if (this.settings.responsive !== false) {\n            this.on(window, 'resize', $.proxy(this.onThrottledResize, this));\n        }\n    };\n\n    /**\n     * Handles touchstart/mousedown event.\n     * @protected\n     * @param {Event} event - The event arguments.\n     */\n    Owl.prototype.onDragStart = function (event) {\n        var ev, isTouchEvent, pageX, pageY, animatedPos;\n\n        ev = event.originalEvent || event || window.event;\n\n        // prevent right click\n        if (ev.which === 3 || this.state.isTouch) {\n            return false;\n        }\n\n        if (ev.type === 'mousedown') {\n            this.$stage.addClass('owl-grab');\n        }\n\n        this.trigger('drag');\n        this.drag.startTime = new Date().getTime();\n        this.speed(0);\n        this.state.isTouch = true;\n        this.state.isScrolling = false;\n        this.state.isSwiping = false;\n        this.drag.distance = 0;\n\n        pageX = getTouches(ev).x;\n        pageY = getTouches(ev).y;\n\n        // get stage position left\n        this.drag.offsetX = this.$stage.position().left;\n        this.drag.offsetY = this.$stage.position().top;\n\n        if (this.settings.rtl) {\n            this.drag.offsetX = this.$stage.position().left + this.$stage.width() - this.width()\n            + this.settings.margin;\n        }\n\n        // catch position // ie to fix\n        if (this.state.inMotion && this.support3d) {\n            animatedPos = this.getTransformProperty();\n            this.drag.offsetX = animatedPos;\n            this.animate(animatedPos);\n            this.state.inMotion = true;\n        } else if (this.state.inMotion && !this.support3d) {\n            this.state.inMotion = false;\n            return false;\n        }\n\n        this.drag.startX = pageX - this.drag.offsetX;\n        this.drag.startY = pageY - this.drag.offsetY;\n\n        this.drag.start = pageX - this.drag.startX;\n        this.drag.targetEl = ev.target || ev.srcElement;\n        this.drag.updatedX = this.drag.start;\n\n        // to do/check\n        // prevent links and images dragging;\n        if (this.drag.targetEl.tagName === \"IMG\" || this.drag.targetEl.tagName === \"A\") {\n            this.drag.targetEl.draggable = false;\n        }\n\n        $(document).on('mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents', $.proxy(function (event) {\n            this.eventsRouter(event)\n        }, this));\n    };\n\n    /**\n     * Handles the touchmove/mousemove events.\n     * @todo Simplify\n     * @protected\n     * @param {Event} event - The event arguments.\n     */\n    Owl.prototype.onDragMove = function (event) {\n        var ev, isTouchEvent, pageX, pageY, minValue, maxValue, pull;\n\n        if (!this.state.isTouch) {\n            return;\n        }\n\n        if (this.state.isScrolling) {\n            return;\n        }\n\n        ev = event.originalEvent || event || window.event;\n\n        pageX = getTouches(ev).x;\n        pageY = getTouches(ev).y;\n\n        // Drag Direction\n        this.drag.currentX = pageX - this.drag.startX;\n        this.drag.currentY = pageY - this.drag.startY;\n        this.drag.distance = this.drag.currentX - this.drag.offsetX;\n\n        // Check move direction\n        if (this.drag.distance < 0) {\n            this.state.direction = this.settings.rtl ? 'right' : 'left';\n        } else if (this.drag.distance > 0) {\n            this.state.direction = this.settings.rtl ? 'left' : 'right';\n        }\n        // Loop\n        if (this.settings.loop) {\n            if (this.op(this.drag.currentX, '>', this.coordinates(this.minimum())) && this.state.direction === 'right') {\n                this.drag.currentX -= (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length);\n            } else if (this.op(this.drag.currentX, '<', this.coordinates(this.maximum())) && this.state.direction === 'left') {\n                this.drag.currentX += (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length);\n            }\n        } else {\n            // pull\n            minValue = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n            maxValue = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n            pull = this.settings.pullDrag ? this.drag.distance / 5 : 0;\n            this.drag.currentX = Math.max(Math.min(this.drag.currentX, minValue + pull), maxValue + pull);\n        }\n\n        // Lock browser if swiping horizontal\n\n        if ((this.drag.distance > 8 || this.drag.distance < -8)) {\n            if (ev.preventDefault !== undefined) {\n                ev.preventDefault();\n            } else {\n                ev.returnValue = false;\n            }\n            this.state.isSwiping = true;\n        }\n\n        this.drag.updatedX = this.drag.currentX;\n\n        // Lock Owl if scrolling\n        if ((this.drag.currentY > 16 || this.drag.currentY < -16) && this.state.isSwiping === false) {\n            this.state.isScrolling = true;\n            this.drag.updatedX = this.drag.start;\n        }\n\n        this.animate(this.drag.updatedX);\n    };\n\n    /**\n     * Handles the touchend/mouseup events.\n     * @protected\n     */\n    Owl.prototype.onDragEnd = function (event) {\n        var compareTimes, distanceAbs, closest;\n\n        if (!this.state.isTouch) {\n            return;\n        }\n\n        if (event.type === 'mouseup') {\n            this.$stage.removeClass('owl-grab');\n        }\n\n        this.trigger('dragged');\n\n        // prevent links and images dragging;\n        this.drag.targetEl.removeAttribute(\"draggable\");\n\n        // remove drag event listeners\n\n        this.state.isTouch = false;\n        this.state.isScrolling = false;\n        this.state.isSwiping = false;\n\n        // to check\n        if (this.drag.distance === 0 && this.state.inMotion !== true) {\n            this.state.inMotion = false;\n            return false;\n        }\n\n        // prevent clicks while scrolling\n\n        this.drag.endTime = new Date().getTime();\n        compareTimes = this.drag.endTime - this.drag.startTime;\n        distanceAbs = Math.abs(this.drag.distance);\n\n        // to test\n        if (distanceAbs > 3 || compareTimes > 300) {\n            this.removeClick(this.drag.targetEl);\n        }\n\n        closest = this.closest(this.drag.updatedX);\n\n        this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);\n        this.current(closest);\n        this.invalidate('position');\n        this.update();\n\n        // if pullDrag is off then fire transitionEnd event manually when stick\n        // to border\n        if (!this.settings.pullDrag && this.drag.updatedX === this.coordinates(closest)) {\n            this.transitionEnd();\n        }\n\n        this.drag.distance = 0;\n\n        $(document).off('.owl.dragEvents');\n    };\n\n    /**\n     * Attaches `preventClick` to disable link while swipping.\n     * @protected\n     * @param {HTMLElement} [target] - The target of the `click` event.\n     */\n    Owl.prototype.removeClick = function (target) {\n        this.drag.targetEl = target;\n        $(target).on('click.preventClick', this.e._preventClick);\n        // to make sure click is removed:\n        window.setTimeout(function () {\n            $(target).off('click.preventClick');\n        }, 300);\n    };\n\n    /**\n     * Suppresses click event.\n     * @protected\n     * @param {Event} ev - The event arguments.\n     */\n    Owl.prototype.preventClick = function (ev) {\n        if (ev.preventDefault) {\n            ev.preventDefault();\n        } else {\n            ev.returnValue = false;\n        }\n        if (ev.stopPropagation) {\n            ev.stopPropagation();\n        }\n        $(ev.target).off('click.preventClick');\n    };\n\n    /**\n     * Catches stage position while animate (only CSS3).\n     * @protected\n     * @returns\n     */\n    Owl.prototype.getTransformProperty = function () {\n        var transform, matrix3d;\n\n        transform = window.getComputedStyle(this.$stage.get(0), null).getPropertyValue(this.vendorName + 'transform');\n        // var transform = this.$stage.css(this.vendorName + 'transform')\n        transform = transform.replace(/matrix(3d)?\\(|\\)/g, '').split(',');\n        matrix3d = transform.length === 16;\n\n        return matrix3d !== true ? transform[4] : transform[12];\n    };\n\n    /**\n     * Gets absolute position of the closest item for a coordinate.\n     * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n     * @protected\n     * @param {Number} coordinate - The coordinate in pixel.\n     * @return {Number} - The absolute position of the closest item.\n     */\n    Owl.prototype.closest = function (coordinate) {\n        var position = -1, pull = 30, width = this.width(), coordinates = this.coordinates();\n\n        if (!this.settings.freeDrag) {\n            // check closest item\n            $.each(coordinates, $.proxy(function (index, value) {\n                if (coordinate > value - pull && coordinate < value + pull) {\n                    position = index;\n                } else if (this.op(coordinate, '<', value)\n                    && this.op(coordinate, '>', coordinates[index + 1] || value - width)) {\n                    position = this.state.direction === 'left' ? index + 1 : index;\n                }\n                return position === -1;\n            }, this));\n        }\n\n        if (!this.settings.loop) {\n            // non loop boundries\n            if (this.op(coordinate, '>', coordinates[this.minimum()])) {\n                position = coordinate = this.minimum();\n            } else if (this.op(coordinate, '<', coordinates[this.maximum()])) {\n                position = coordinate = this.maximum();\n            }\n        }\n\n        return position;\n    };\n\n    /**\n     * Animates the stage.\n     * @public\n     * @param {Number} coordinate - The coordinate in pixels.\n     */\n    Owl.prototype.animate = function (coordinate) {\n        this.trigger('translating');\n        this.state.inMotion = this.speed() > 0;\n\n        if (this.support3d) {\n            this.$stage.css({\n                transform: 'translate3d(' + coordinate + 'px' + ',0px, 0px)',\n                transition: (this.speed() / 1000) + 's'\n            });\n        } else if (this.state.isTouch) {\n            this.$stage.css({\n                left: coordinate + 'px'\n            });\n        } else {\n            this.$stage.animate({\n                left: coordinate\n            }, this.speed() / 1000, this.settings.fallbackEasing, $.proxy(function () {\n                if (this.state.inMotion) {\n                    this.transitionEnd();\n                }\n            }, this));\n        }\n    };\n\n    /**\n     * Sets the absolute position of the current item.\n     * @public\n     * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.\n     * @returns {Number} - The absolute position of the current item.\n     */\n    Owl.prototype.current = function (position) {\n        if (position === undefined) {\n            return this._current;\n        }\n\n        if (this._items.length === 0) {\n            return undefined;\n        }\n\n        position = this.normalize(position);\n\n        if (this._current !== position) {\n            var event = this.trigger('change', {property: {name: 'position', value: position}});\n\n            if (event.data !== undefined) {\n                position = this.normalize(event.data);\n            }\n\n            this._current = position;\n\n            this.invalidate('position');\n\n            this.trigger('changed', {property: {name: 'position', value: this._current}});\n        }\n\n        return this._current;\n    };\n\n    /**\n     * Invalidates the given part of the update routine.\n     * @param {String} part - The part to invalidate.\n     */\n    Owl.prototype.invalidate = function (part) {\n        this._invalidated[part] = true;\n    }\n\n    /**\n     * Resets the absolute position of the current item.\n     * @public\n     * @param {Number} position - The absolute position of the new item.\n     */\n    Owl.prototype.reset = function (position) {\n        position = this.normalize(position);\n\n        if (position === undefined) {\n            return;\n        }\n\n        this._speed = 0;\n        this._current = position;\n\n        this.suppress(['translating', 'translated']);\n\n        this.animate(this.coordinates(position));\n\n        this.release(['translating', 'translated']);\n    };\n\n    /**\n     * Normalizes an absolute or a relative position for an item.\n     * @public\n     * @param {Number} position - The absolute or relative position to normalize.\n     * @param {Boolean} [relative=false] - Whether the given position is relative or not.\n     * @returns {Number} - The normalized position.\n     */\n    Owl.prototype.normalize = function (position, relative) {\n        var n = (relative ? this._items.length : this._items.length + this._clones.length);\n\n        if (!$.isNumeric(position) || n < 1) {\n            return undefined;\n        }\n\n        if (this._clones.length) {\n            position = ((position % n) + n) % n;\n        } else {\n            position = Math.max(this.minimum(relative), Math.min(this.maximum(relative), position));\n        }\n\n        return position;\n    };\n\n    /**\n     * Converts an absolute position for an item into a relative position.\n     * @public\n     * @param {Number} position - The absolute position to convert.\n     * @returns {Number} - The converted position.\n     */\n    Owl.prototype.relative = function (position) {\n        position = this.normalize(position);\n        position = position - this._clones.length / 2;\n        return this.normalize(position, true);\n    };\n\n    /**\n     * Gets the maximum position for an item.\n     * @public\n     * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n     * @returns {Number}\n     */\n    Owl.prototype.maximum = function (relative) {\n        var maximum, width, i = 0, coordinate,\n            settings = this.settings;\n\n        if (relative) {\n            return this._items.length - 1;\n        }\n\n        if (!settings.loop && settings.center) {\n            maximum = this._items.length - 1;\n        } else if (!settings.loop && !settings.center) {\n            maximum = this._items.length - settings.items;\n        } else if (settings.loop || settings.center) {\n            maximum = this._items.length + settings.items;\n        } else if (settings.autoWidth || settings.merge) {\n            revert = settings.rtl ? 1 : -1;\n            width = this.$stage.width() - this.$element.width();\n            while (coordinate = this.coordinates(i)) {\n                if (coordinate * revert >= width) {\n                    break;\n                }\n                maximum = ++i;\n            }\n        } else {\n            throw 'Can not detect maximum absolute position.'\n        }\n\n        return maximum;\n    };\n\n    /**\n     * Gets the minimum position for an item.\n     * @public\n     * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.\n     * @returns {Number}\n     */\n    Owl.prototype.minimum = function (relative) {\n        if (relative) {\n            return 0;\n        }\n\n        return this._clones.length / 2;\n    };\n\n    /**\n     * Gets an item at the specified relative position.\n     * @public\n     * @param {Number} [position] - The relative position of the item.\n     * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n     */\n    Owl.prototype.items = function (position) {\n        if (position === undefined) {\n            return this._items.slice();\n        }\n\n        position = this.normalize(position, true);\n        return this._items[position];\n    };\n\n    /**\n     * Gets an item at the specified relative position.\n     * @public\n     * @param {Number} [position] - The relative position of the item.\n     * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.\n     */\n    Owl.prototype.mergers = function (position) {\n        if (position === undefined) {\n            return this._mergers.slice();\n        }\n\n        position = this.normalize(position, true);\n        return this._mergers[position];\n    };\n\n    /**\n     * Gets the absolute positions of clones for an item.\n     * @public\n     * @param {Number} [position] - The relative position of the item.\n     * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.\n     */\n    Owl.prototype.clones = function (position) {\n        var odd = this._clones.length / 2,\n            even = odd + this._items.length,\n            map = function (index) {\n                return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2\n            };\n\n        if (position === undefined) {\n            return $.map(this._clones, function (v, i) {\n                return map(i)\n            });\n        }\n\n        return $.map(this._clones, function (v, i) {\n            return v === position ? map(i) : null\n        });\n    };\n\n    /**\n     * Sets the current animation speed.\n     * @public\n     * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.\n     * @returns {Number} - The current animation speed in milliseconds.\n     */\n    Owl.prototype.speed = function (speed) {\n        if (speed !== undefined) {\n            this._speed = speed;\n        }\n\n        return this._speed;\n    };\n\n    /**\n     * Gets the coordinate of an item.\n     * @todo The name of this method is missleanding.\n     * @public\n     * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.\n     * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.\n     */\n    Owl.prototype.coordinates = function (position) {\n        var coordinate = null;\n\n        if (position === undefined) {\n            return $.map(this._coordinates, $.proxy(function (coordinate, index) {\n                return this.coordinates(index);\n            }, this));\n        }\n\n        if (this.settings.center) {\n            coordinate = this._coordinates[position];\n            coordinate += (this.width() - coordinate + (this._coordinates[position - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1);\n        } else {\n            coordinate = this._coordinates[position - 1] || 0;\n        }\n\n        return coordinate;\n    };\n\n    /**\n     * Calculates the speed for a translation.\n     * @protected\n     * @param {Number} from - The absolute position of the start item.\n     * @param {Number} to - The absolute position of the target item.\n     * @param {Number} [factor=undefined] - The time factor in milliseconds.\n     * @returns {Number} - The time in milliseconds for the translation.\n     */\n    Owl.prototype.duration = function (from, to, factor) {\n        return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));\n    };\n\n    /**\n     * Slides to the specified item.\n     * @public\n     * @param {Number} position - The position of the item.\n     * @param {Number} [speed] - The time in milliseconds for the transition.\n     */\n    Owl.prototype.to = function (position, speed) {\n        if (this.settings.loop) {\n            var distance = position - this.relative(this.current()),\n                revert = this.current(),\n                before = this.current(),\n                after = this.current() + distance,\n                direction = before - after < 0 ? true : false,\n                items = this._clones.length + this._items.length;\n\n            if (after < this.settings.items && direction === false) {\n                revert = before + this._items.length;\n                this.reset(revert);\n            } else if (after >= items - this.settings.items && direction === true) {\n                revert = before - this._items.length;\n                this.reset(revert);\n            }\n            window.clearTimeout(this.e._goToLoop);\n            this.e._goToLoop = window.setTimeout($.proxy(function () {\n                this.speed(this.duration(this.current(), revert + distance, speed));\n                this.current(revert + distance);\n                this.update();\n            }, this), 30);\n        } else {\n            this.speed(this.duration(this.current(), position, speed));\n            this.current(position);\n            this.update();\n        }\n    };\n\n    /**\n     * Slides to the next item.\n     * @public\n     * @param {Number} [speed] - The time in milliseconds for the transition.\n     */\n    Owl.prototype.next = function (speed) {\n        speed = speed || false;\n        this.to(this.relative(this.current()) + 1, speed);\n    };\n\n    /**\n     * Slides to the previous item.\n     * @public\n     * @param {Number} [speed] - The time in milliseconds for the transition.\n     */\n    Owl.prototype.prev = function (speed) {\n        speed = speed || false;\n        this.to(this.relative(this.current()) - 1, speed);\n    };\n\n    /**\n     * Handles the end of an animation.\n     * @protected\n     * @param {Event} event - The event arguments.\n     */\n    Owl.prototype.transitionEnd = function (event) {\n\n        // if css2 animation then event object is undefined\n        if (event !== undefined) {\n            event.stopPropagation();\n\n            // Catch only owl-stage transitionEnd event\n            if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {\n                return false;\n            }\n        }\n\n        this.state.inMotion = false;\n        this.trigger('translated');\n    };\n\n    /**\n     * Gets viewport width.\n     * @protected\n     * @return {Number} - The width in pixel.\n     */\n    Owl.prototype.viewport = function () {\n        var width;\n        if (this.options.responsiveBaseElement !== window) {\n            width = $(this.options.responsiveBaseElement).width();\n        } else if (window.innerWidth) {\n            width = window.innerWidth;\n        } else if (document.documentElement && document.documentElement.clientWidth) {\n            width = document.documentElement.clientWidth;\n        } else {\n            throw 'Can not detect viewport width.';\n        }\n        return width;\n    };\n\n    /**\n     * Replaces the current content.\n     * @public\n     * @param {HTMLElement|jQuery|String} content - The new content.\n     */\n    Owl.prototype.replace = function (content) {\n        this.$stage.empty();\n        this._items = [];\n\n        if (content) {\n            content = (content instanceof jQuery) ? content : $(content);\n        }\n\n        if (this.settings.nestedItemSelector) {\n            content = content.find('.' + this.settings.nestedItemSelector);\n        }\n\n        content.filter(function () {\n            return this.nodeType === 1;\n        }).each($.proxy(function (index, item) {\n            item = this.prepare(item);\n            this.$stage.append(item);\n            this._items.push(item);\n            this._mergers.push(item.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n        }, this));\n\n        this.reset($.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);\n\n        this.invalidate('items');\n    };\n\n    /**\n     * Adds an item.\n     * @todo Use `item` instead of `content` for the event arguments.\n     * @public\n     * @param {HTMLElement|jQuery|String} content - The item content to add.\n     * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.\n     */\n    Owl.prototype.add = function (content, position) {\n        position = position === undefined ? this._items.length : this.normalize(position, true);\n\n        this.trigger('add', {content: content, position: position});\n\n        if (this._items.length === 0 || position === this._items.length) {\n            this.$stage.append(content);\n            this._items.push(content);\n            this._mergers.push(content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n        } else {\n            this._items[position].before(content);\n            this._items.splice(position, 0, content);\n            this._mergers.splice(position, 0, content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);\n        }\n\n        this.invalidate('items');\n\n        this.trigger('added', {content: content, position: position});\n    };\n\n    /**\n     * Removes an item by its position.\n     * @todo Use `item` instead of `content` for the event arguments.\n     * @public\n     * @param {Number} position - The relative position of the item to remove.\n     */\n    Owl.prototype.remove = function (position) {\n        position = this.normalize(position, true);\n\n        if (position === undefined) {\n            return;\n        }\n\n        this.trigger('remove', {content: this._items[position], position: position});\n\n        this._items[position].remove();\n        this._items.splice(position, 1);\n        this._mergers.splice(position, 1);\n\n        this.invalidate('items');\n\n        this.trigger('removed', {content: null, position: position});\n    };\n\n    /**\n     * Adds triggerable events.\n     * @protected\n     */\n    Owl.prototype.addTriggerableEvents = function () {\n        var handler = $.proxy(function (callback, event) {\n            return $.proxy(function (e) {\n                if (e.relatedTarget !== this) {\n                    this.suppress([event]);\n                    callback.apply(this, [].slice.call(arguments, 1));\n                    this.release([event]);\n                }\n            }, this);\n        }, this);\n\n        $.each({\n            'next': this.next,\n            'prev': this.prev,\n            'to': this.to,\n            'destroy': this.destroy,\n            'refresh': this.refresh,\n            'replace': this.replace,\n            'add': this.add,\n            'remove': this.remove\n        }, $.proxy(function (event, callback) {\n            this.$element.on(event + '.owl.carousel', handler(callback, event + '.owl.carousel'));\n        }, this));\n\n    };\n\n    /**\n     * Watches the visibility of the carousel element.\n     * @protected\n     */\n    Owl.prototype.watchVisibility = function () {\n\n        // test on zepto\n        if (!isElVisible(this.$element.get(0))) {\n            this.$element.addClass('owl-hidden');\n            window.clearInterval(this.e._checkVisibile);\n            this.e._checkVisibile = window.setInterval($.proxy(checkVisible, this), 500);\n        }\n\n        function isElVisible(el) {\n            return el.offsetWidth > 0 && el.offsetHeight > 0;\n        }\n\n        function checkVisible() {\n            if (isElVisible(this.$element.get(0))) {\n                this.$element.removeClass('owl-hidden');\n                this.refresh();\n                window.clearInterval(this.e._checkVisibile);\n            }\n\n        }\n    };\n\n    /**\n     * Preloads images with auto width.\n     * @protected\n     * @todo Still to test\n     */\n    Owl.prototype.preloadAutoWidthImages = function (imgs) {\n        var loaded, that, $el, img;\n\n        loaded = 0;\n        that = this;\n        imgs.each(function (i, el) {\n            $el = $(el);\n            img = new Image();\n\n            img.onload = function () {\n                loaded++;\n                $el.attr('src', img.src);\n                $el.css('opacity', 1);\n                if (loaded >= imgs.length) {\n                    that.state.imagesLoaded = true;\n                    that.initialize();\n                }\n            };\n\n            img.src = $el.attr('src') || $el.attr('data-src') || $el.attr('data-src-retina');\n        });\n    };\n\n    /**\n     * Destroys the carousel.\n     * @public\n     */\n    Owl.prototype.destroy = function () {\n\n        if (this.$element.hasClass(this.settings.themeClass)) {\n            this.$element.removeClass(this.settings.themeClass);\n        }\n\n        if (this.settings.responsive !== false) {\n            $(window).off('resize.owl.carousel');\n        }\n\n        if (this.transitionEndVendor) {\n            this.off(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd);\n        }\n\n        for (var i in this._plugins) {\n            this._plugins[i].destroy();\n        }\n\n        if (this.settings.mouseDrag || this.settings.touchDrag) {\n            this.$stage.off('mousedown touchstart touchcancel');\n            $(document).off('.owl.dragEvents');\n            this.$stage.get(0).onselectstart = function () {\n            };\n            this.$stage.off('dragstart', function () {\n                return false\n            });\n        }\n\n        // remove event handlers in the \".owl.carousel\" namespace\n        this.$element.off('.owl');\n\n        this.$stage.children('.cloned').remove();\n        this.e = null;\n        this.$element.removeData('owlCarousel');\n\n        this.$stage.children().contents().unwrap();\n        this.$stage.children().unwrap();\n        this.$stage.unwrap();\n    };\n\n    /**\n     * Operators to calculate right-to-left and left-to-right.\n     * @protected\n     * @param {Number} [a] - The left side operand.\n     * @param {String} [o] - The operator.\n     * @param {Number} [b] - The right side operand.\n     */\n    Owl.prototype.op = function (a, o, b) {\n        var rtl = this.settings.rtl;\n        switch (o) {\n            case '<':\n                return rtl ? a > b : a < b;\n            case '>':\n                return rtl ? a < b : a > b;\n            case '>=':\n                return rtl ? a <= b : a >= b;\n            case '<=':\n                return rtl ? a >= b : a <= b;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * Attaches to an internal event.\n     * @protected\n     * @param {HTMLElement} element - The event source.\n     * @param {String} event - The event name.\n     * @param {Function} listener - The event handler to attach.\n     * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.\n     */\n    Owl.prototype.on = function (element, event, listener, capture) {\n        if (element.addEventListener) {\n            element.addEventListener(event, listener, capture);\n        } else if (element.attachEvent) {\n            element.attachEvent('on' + event, listener);\n        }\n    };\n\n    /**\n     * Detaches from an internal event.\n     * @protected\n     * @param {HTMLElement} element - The event source.\n     * @param {String} event - The event name.\n     * @param {Function} listener - The attached event handler to detach.\n     * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.\n     */\n    Owl.prototype.off = function (element, event, listener, capture) {\n        if (element.removeEventListener) {\n            element.removeEventListener(event, listener, capture);\n        } else if (element.detachEvent) {\n            element.detachEvent('on' + event, listener);\n        }\n    };\n\n    /**\n     * Triggers an public event.\n     * @protected\n     * @param {String} name - The event name.\n     * @param {*} [data=null] - The event data.\n     * @param {String} [namespace=.owl.carousel] - The event namespace.\n     * @returns {Event} - The event arguments.\n     */\n    Owl.prototype.trigger = function (name, data, namespace) {\n        var status = {\n            item: {count: this._items.length, index: this.current()}\n        }, handler = $.camelCase(\n            $.grep(['on', name, namespace], function (v) {\n                return v\n            })\n                .join('-').toLowerCase()\n        ), event = $.Event(\n            [name, 'owl', namespace || 'carousel'].join('.').toLowerCase(),\n            $.extend({relatedTarget: this}, status, data)\n        );\n\n        if (!this._supress[name]) {\n            $.each(this._plugins, function (name, plugin) {\n                if (plugin.onTrigger) {\n                    plugin.onTrigger(event);\n                }\n            });\n\n            this.$element.trigger(event);\n\n            if (this.settings && typeof this.settings[handler] === 'function') {\n                this.settings[handler].apply(this, event);\n            }\n        }\n\n        return event;\n    };\n\n    /**\n     * Suppresses events.\n     * @protected\n     * @param {Array.<String>} events - The events to suppress.\n     */\n    Owl.prototype.suppress = function (events) {\n        $.each(events, $.proxy(function (index, event) {\n            this._supress[event] = true;\n        }, this));\n    }\n\n    /**\n     * Releases suppressed events.\n     * @protected\n     * @param {Array.<String>} events - The events to release.\n     */\n    Owl.prototype.release = function (events) {\n        $.each(events, $.proxy(function (index, event) {\n            delete this._supress[event];\n        }, this));\n    }\n\n    /**\n     * Checks the availability of some browser features.\n     * @protected\n     */\n    Owl.prototype.browserSupport = function () {\n        this.support3d = isPerspective();\n\n        if (this.support3d) {\n            this.transformVendor = isTransform();\n\n            // take transitionend event name by detecting transition\n            var endVendors = ['transitionend', 'webkitTransitionEnd', 'transitionend', 'oTransitionEnd'];\n            this.transitionEndVendor = endVendors[isTransition()];\n\n            // take vendor name from transform name\n            this.vendorName = this.transformVendor.replace(/Transform/i, '');\n            this.vendorName = this.vendorName !== '' ? '-' + this.vendorName.toLowerCase() + '-' : '';\n        }\n\n        this.state.orientation = window.orientation;\n    };\n\n    /**\n     * Get touch/drag coordinats.\n     * @private\n     * @param {event} - mousedown/touchstart event\n     * @returns {object} - Contains X and Y of current mouse/touch position\n     */\n\n    function getTouches(event) {\n        if (event.touches !== undefined) {\n            return {\n                x: event.touches[0].pageX,\n                y: event.touches[0].pageY\n            };\n        }\n\n        if (event.touches === undefined) {\n            if (event.pageX !== undefined) {\n                return {\n                    x: event.pageX,\n                    y: event.pageY\n                };\n            }\n\n            if (event.pageX === undefined) {\n                return {\n                    x: event.clientX,\n                    y: event.clientY\n                };\n            }\n        }\n    }\n\n    /**\n     * Checks for CSS support.\n     * @private\n     * @param {Array} array - The CSS properties to check for.\n     * @returns {Array} - Contains the supported CSS property name and its index or `false`.\n     */\n    function isStyleSupported(array) {\n        var p, s, fake = document.createElement('div'), list = array;\n        for (p in list) {\n            s = list[p];\n            if (typeof fake.style[s] !== 'undefined') {\n                fake = null;\n                return [s, p];\n            }\n        }\n        return [false];\n    }\n\n    /**\n     * Checks for CSS transition support.\n     * @private\n     * @todo Realy bad design\n     * @returns {Number}\n     */\n    function isTransition() {\n        return isStyleSupported(['transition', 'WebkitTransition', 'MozTransition', 'OTransition'])[1];\n    }\n\n    /**\n     * Checks for CSS transform support.\n     * @private\n     * @returns {String} The supported property name or false.\n     */\n    function isTransform() {\n        return isStyleSupported(['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'msTransform'])[0];\n    }\n\n    /**\n     * Checks for CSS perspective support.\n     * @private\n     * @returns {String} The supported property name or false.\n     */\n    function isPerspective() {\n        return isStyleSupported(['perspective', 'webkitPerspective', 'MozPerspective', 'OPerspective', 'MsPerspective'])[0];\n    }\n\n    /**\n     * Checks wether touch is supported or not.\n     * @private\n     * @returns {Boolean}\n     */\n    function isTouchSupport() {\n        return 'ontouchstart' in window || !!(navigator.msMaxTouchPoints);\n    }\n\n    /**\n     * Checks wether touch is supported or not for IE.\n     * @private\n     * @returns {Boolean}\n     */\n    function isTouchSupportIE() {\n        return window.navigator.msPointerEnabled;\n    }\n\n    /**\n     * The jQuery Plugin for the Owl Carousel\n     * @public\n     */\n    $.fn.owlCarousel = function (options) {\n        return this.each(function () {\n            if (!$(this).data('owlCarousel')) {\n                $(this).data('owlCarousel', new Owl(this, options));\n            }\n        });\n    };\n\n    /**\n     * The constructor for the jQuery Plugin\n     * @public\n     */\n    $.fn.owlCarousel.Constructor = Owl;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Lazy Plugin\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n\n    /**\n     * Creates the lazy plugin.\n     * @class The Lazy Plugin\n     * @param {Owl} carousel - The Owl Carousel\n     */\n    var Lazy = function (carousel) {\n\n        /**\n         * Reference to the core.\n         * @protected\n         * @type {Owl}\n         */\n        this._core = carousel;\n\n        /**\n         * Already loaded items.\n         * @protected\n         * @type {Array.<jQuery>}\n         */\n        this._loaded = [];\n\n        /**\n         * Event handlers.\n         * @protected\n         * @type {Object}\n         */\n        this._handlers = {\n            'initialized.owl.carousel change.owl.carousel': $.proxy(function (e) {\n                if (!e.namespace) {\n                    return;\n                }\n\n                if (!this._core.settings || !this._core.settings.lazyLoad) {\n                    return;\n                }\n\n                if ((e.property && e.property.name == 'position') || e.type == 'initialized') {\n                    var settings = this._core.settings,\n                        n = (settings.center && Math.ceil(settings.items / 2) || settings.items),\n                        i = ((settings.center && n * -1) || 0),\n                        position = ((e.property && e.property.value) || this._core.current()) + i,\n                        clones = this._core.clones().length,\n                        load = $.proxy(function (i, v) {\n                            this.load(v)\n                        }, this);\n\n                    while (i++ < n) {\n                        this.load(clones / 2 + this._core.relative(position));\n                        clones && $.each(this._core.clones(this._core.relative(position++)), load);\n                    }\n                }\n            }, this)\n        };\n\n        // set the default options\n        this._core.options = $.extend({}, Lazy.Defaults, this._core.options);\n\n        // register event handler\n        this._core.$element.on(this._handlers);\n    }\n\n    /**\n     * Default options.\n     * @public\n     */\n    Lazy.Defaults = {\n        lazyLoad: false\n    }\n\n    /**\n     * Loads all resources of an item at the specified position.\n     * @param {Number} position - The absolute position of the item.\n     * @protected\n     */\n    Lazy.prototype.load = function (position) {\n        var $item = this._core.$stage.children().eq(position),\n            $elements = $item && $item.find('.owl-lazy');\n\n        if (!$elements || $.inArray($item.get(0), this._loaded) > -1) {\n            return;\n        }\n\n        $elements.each($.proxy(function (index, element) {\n            var $element = $(element), image,\n                url = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src');\n\n            this._core.trigger('load', {element: $element, url: url}, 'lazy');\n\n            if ($element.is('img')) {\n                $element.one('load.owl.lazy', $.proxy(function () {\n                    $element.css('opacity', 1);\n                    this._core.trigger('loaded', {element: $element, url: url}, 'lazy');\n                }, this)).attr('src', url);\n            } else {\n                image = new Image();\n                image.onload = $.proxy(function () {\n                    $element.css({\n                        'background-image': 'url(' + url + ')',\n                        'opacity': '1'\n                    });\n                    this._core.trigger('loaded', {element: $element, url: url}, 'lazy');\n                }, this);\n                image.src = url;\n            }\n        }, this));\n\n        this._loaded.push($item.get(0));\n    }\n\n    /**\n     * Destroys the plugin.\n     * @public\n     */\n    Lazy.prototype.destroy = function () {\n        var handler, property;\n\n        for (handler in this.handlers) {\n            this._core.$element.off(handler, this.handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    }\n\n    $.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * AutoHeight Plugin\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n\n    /**\n     * Creates the auto height plugin.\n     * @class The Auto Height Plugin\n     * @param {Owl} carousel - The Owl Carousel\n     */\n    var AutoHeight = function (carousel) {\n        /**\n         * Reference to the core.\n         * @protected\n         * @type {Owl}\n         */\n        this._core = carousel;\n\n        /**\n         * All event handlers.\n         * @protected\n         * @type {Object}\n         */\n        this._handlers = {\n            'initialized.owl.carousel': $.proxy(function () {\n                if (this._core.settings.autoHeight) {\n                    this.update();\n                }\n            }, this),\n            'changed.owl.carousel': $.proxy(function (e) {\n                if (this._core.settings.autoHeight && e.property.name == 'position') {\n                    this.update();\n                }\n            }, this),\n            'loaded.owl.lazy': $.proxy(function (e) {\n                if (this._core.settings.autoHeight && e.element.closest('.' + this._core.settings.itemClass)\n                    === this._core.$stage.children().eq(this._core.current())) {\n                    this.update();\n                }\n            }, this)\n        };\n\n        // set default options\n        this._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);\n\n        // register event handlers\n        this._core.$element.on(this._handlers);\n    };\n\n    /**\n     * Default options.\n     * @public\n     */\n    AutoHeight.Defaults = {\n        autoHeight: false,\n        autoHeightClass: 'owl-height'\n    };\n\n    /**\n     * Updates the view.\n     */\n    AutoHeight.prototype.update = function () {\n        this._core.$stage.parent()\n            .height(this._core.$stage.children().eq(this._core.current()).height())\n            .addClass(this._core.settings.autoHeightClass);\n    };\n\n    AutoHeight.prototype.destroy = function () {\n        var handler, property;\n\n        for (handler in this._handlers) {\n            this._core.$element.off(handler, this._handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    };\n\n    $.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Video Plugin\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n\n    /**\n     * Creates the video plugin.\n     * @class The Video Plugin\n     * @param {Owl} carousel - The Owl Carousel\n     */\n    var Video = function (carousel) {\n        /**\n         * Reference to the core.\n         * @protected\n         * @type {Owl}\n         */\n        this._core = carousel;\n\n        /**\n         * Cache all video URLs.\n         * @protected\n         * @type {Object}\n         */\n        this._videos = {};\n\n        /**\n         * Current playing item.\n         * @protected\n         * @type {jQuery}\n         */\n        this._playing = null;\n\n        /**\n         * Whether this is in fullscreen or not.\n         * @protected\n         * @type {Boolean}\n         */\n        this._fullscreen = false;\n\n        /**\n         * All event handlers.\n         * @protected\n         * @type {Object}\n         */\n        this._handlers = {\n            'resize.owl.carousel': $.proxy(function (e) {\n                if (this._core.settings.video && !this.isInFullScreen()) {\n                    e.preventDefault();\n                }\n            }, this),\n            'refresh.owl.carousel changed.owl.carousel': $.proxy(function (e) {\n                if (this._playing) {\n                    this.stop();\n                }\n            }, this),\n            'prepared.owl.carousel': $.proxy(function (e) {\n                var $element = $(e.content).find('.owl-video');\n                if ($element.length) {\n                    $element.css('display', 'none');\n                    this.fetch($element, $(e.content));\n                }\n            }, this)\n        };\n\n        // set default options\n        this._core.options = $.extend({}, Video.Defaults, this._core.options);\n\n        // register event handlers\n        this._core.$element.on(this._handlers);\n\n        this._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function (e) {\n            this.play(e);\n        }, this));\n    };\n\n    /**\n     * Default options.\n     * @public\n     */\n    Video.Defaults = {\n        video: false,\n        videoHeight: false,\n        videoWidth: false\n    };\n\n    /**\n     * Gets the video ID and the type (YouTube/Vimeo only).\n     * @protected\n     * @param {jQuery} target - The target containing the video data.\n     * @param {jQuery} item - The item containing the video.\n     */\n    Video.prototype.fetch = function (target, item) {\n\n        var type = target.attr('data-vimeo-id') ? 'vimeo' : 'youtube',\n            id = target.attr('data-vimeo-id') || target.attr('data-youtube-id'),\n            width = target.attr('data-width') || this._core.settings.videoWidth,\n            height = target.attr('data-height') || this._core.settings.videoHeight,\n            url = target.attr('href');\n\n        if (url) {\n            id = url.match(/(http:|https:|)\\/\\/(player.|www.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com))\\/(video\\/|embed\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/);\n\n            if (id[3].indexOf('youtu') > -1) {\n                type = 'youtube';\n            } else if (id[3].indexOf('vimeo') > -1) {\n                type = 'vimeo';\n            } else {\n                throw new Error('Video URL not supported.');\n            }\n            id = id[6];\n        } else {\n            throw new Error('Missing video URL.');\n        }\n\n        this._videos[url] = {\n            type: type,\n            id: id,\n            width: width,\n            height: height\n        };\n\n        item.attr('data-video', url);\n\n        this.thumbnail(target, this._videos[url]);\n    };\n\n    /**\n     * Creates video thumbnail.\n     * @protected\n     * @param {jQuery} target - The target containing the video data.\n     * @param {Object} info - The video info object.\n     * @see `fetch`\n     */\n    Video.prototype.thumbnail = function (target, video) {\n\n        var tnLink,\n            icon,\n            path,\n            dimensions = video.width && video.height ? 'style=\"width:' + video.width + 'px;height:' + video.height + 'px;\"' : '',\n            customTn = target.find('img'),\n            srcType = 'src',\n            lazyClass = '',\n            settings = this._core.settings,\n            create = function (path) {\n                icon = '<div class=\"owl-video-play-icon\"></div>';\n\n                if (settings.lazyLoad) {\n                    tnLink = '<div class=\"owl-video-tn ' + lazyClass + '\" ' + srcType + '=\"' + path + '\"></div>';\n                } else {\n                    tnLink = '<div class=\"owl-video-tn\" style=\"opacity:1;background-image:url(' + path + ')\"></div>';\n                }\n                target.after(tnLink);\n                target.after(icon);\n            };\n\n        // wrap video content into owl-video-wrapper div\n        target.wrap('<div class=\"owl-video-wrapper\"' + dimensions + '></div>');\n\n        if (this._core.settings.lazyLoad) {\n            srcType = 'data-src';\n            lazyClass = 'owl-lazy';\n        }\n\n        // custom thumbnail\n        if (customTn.length) {\n            create(customTn.attr(srcType));\n            customTn.remove();\n            return false;\n        }\n\n        if (video.type === 'youtube') {\n            path = \"http://img.youtube.com/vi/\" + video.id + \"/hqdefault.jpg\";\n            create(path);\n        } else if (video.type === 'vimeo') {\n            $.ajax({\n                type: 'GET',\n                url: 'http://vimeo.com/api/v2/video/' + video.id + '.json',\n                jsonp: 'callback',\n                dataType: 'jsonp',\n                success: function (data) {\n                    path = data[0].thumbnail_large;\n                    create(path);\n                }\n            });\n        }\n    };\n\n    /**\n     * Stops the current video.\n     * @public\n     */\n    Video.prototype.stop = function () {\n        this._core.trigger('stop', null, 'video');\n        this._playing.find('.owl-video-frame').remove();\n        this._playing.removeClass('owl-video-playing');\n        this._playing = null;\n    };\n\n    /**\n     * Starts the current video.\n     * @public\n     * @param {Event} ev - The event arguments.\n     */\n    Video.prototype.play = function (ev) {\n        this._core.trigger('play', null, 'video');\n\n        if (this._playing) {\n            this.stop();\n        }\n\n        var target = $(ev.target || ev.srcElement),\n            item = target.closest('.' + this._core.settings.itemClass),\n            video = this._videos[item.attr('data-video')],\n            width = video.width || '100%',\n            height = video.height || this._core.$stage.height(),\n            html, wrap;\n\n        if (video.type === 'youtube') {\n            html = '<iframe width=\"' + width + '\" height=\"' + height + '\" src=\"http://www.youtube.com/embed/'\n            + video.id + '?autoplay=1&v=' + video.id + '\" frameborder=\"0\" allowfullscreen></iframe>';\n        } else if (video.type === 'vimeo') {\n            html = '<iframe src=\"http://player.vimeo.com/video/' + video.id + '?autoplay=1\" width=\"' + width\n            + '\" height=\"' + height\n            + '\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';\n        }\n\n        item.addClass('owl-video-playing');\n        this._playing = item;\n\n        wrap = $('<div style=\"height:' + height + 'px; width:' + width + 'px\" class=\"owl-video-frame\">'\n        + html + '</div>');\n        target.after(wrap);\n    };\n\n    /**\n     * Checks whether an video is currently in full screen mode or not.\n     * @todo Bad style because looks like a readonly method but changes members.\n     * @protected\n     * @returns {Boolean}\n     */\n    Video.prototype.isInFullScreen = function () {\n\n        // if Vimeo Fullscreen mode\n        var element = document.fullscreenElement || document.mozFullScreenElement\n            || document.webkitFullscreenElement;\n\n        if (element && $(element).parent().hasClass('owl-video-frame')) {\n            this._core.speed(0);\n            this._fullscreen = true;\n        }\n\n        if (element && this._fullscreen && this._playing) {\n            return false;\n        }\n\n        // comming back from fullscreen\n        if (this._fullscreen) {\n            this._fullscreen = false;\n            return false;\n        }\n\n        // check full screen mode and window orientation\n        if (this._playing) {\n            if (this._core.state.orientation !== window.orientation) {\n                this._core.state.orientation = window.orientation;\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Destroys the plugin.\n     */\n    Video.prototype.destroy = function () {\n        var handler, property;\n\n        this._core.$element.off('click.owl.video');\n\n        for (handler in this._handlers) {\n            this._core.$element.off(handler, this._handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    };\n\n    $.fn.owlCarousel.Constructor.Plugins.Video = Video;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Animate Plugin\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n\n    /**\n     * Creates the animate plugin.\n     * @class The Navigation Plugin\n     * @param {Owl} scope - The Owl Carousel\n     */\n    var Animate = function (scope) {\n        this.core = scope;\n        this.core.options = $.extend({}, Animate.Defaults, this.core.options);\n        this.swapping = true;\n        this.previous = undefined;\n        this.next = undefined;\n\n        this.handlers = {\n            'change.owl.carousel': $.proxy(function (e) {\n                if (typeof e.property !== 'undefined' && e.property.name == 'position') {\n                    this.previous = this.core.current();\n                    this.next = e.property.value;\n                }\n            }, this),\n            'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function (e) {\n                this.swapping = e.type == 'translated';\n            }, this),\n            'translating.owl.carousel': $.proxy(function (e) {\n                if (this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {\n                    this.swap();\n                }\n            }, this)\n        };\n\n        this.core.$element.on(this.handlers);\n    };\n\n    /**\n     * Default options.\n     * @public\n     */\n    Animate.Defaults = {\n        animateOut: false,\n        animateIn: false\n    };\n\n    /**\n     * Toggles the animation classes whenever an translations starts.\n     * @protected\n     * @returns {Boolean|undefined}\n     */\n    Animate.prototype.swap = function () {\n\n        if (this.core.settings.items !== 1 || !this.core.support3d) {\n            return;\n        }\n\n        this.core.speed(0);\n\n        var left,\n            clear = $.proxy(this.clear, this),\n            previous = this.core.$stage.children().eq(this.previous),\n            next = this.core.$stage.children().eq(this.next),\n            incoming = this.core.settings.animateIn,\n            outgoing = this.core.settings.animateOut;\n\n        if (this.core.current() === this.previous) {\n            return;\n        }\n\n        if (outgoing) {\n            left = this.core.coordinates(this.previous) - this.core.coordinates(this.next);\n            previous.css({'left': left + 'px'})\n                .addClass('animated owl-animated-out')\n                .addClass(outgoing)\n                .one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', clear);\n        }\n\n        if (incoming) {\n            next.addClass('animated owl-animated-in')\n                .addClass(incoming)\n                .one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', clear);\n        }\n    };\n\n    Animate.prototype.clear = function (e) {\n        $(e.target).css({'left': ''})\n            .removeClass('animated owl-animated-out owl-animated-in')\n            .removeClass(this.core.settings.animateIn)\n            .removeClass(this.core.settings.animateOut);\n        this.core.transitionEnd();\n    }\n\n    /**\n     * Destroys the plugin.\n     * @public\n     */\n    Animate.prototype.destroy = function () {\n        var handler, property;\n\n        for (handler in this.handlers) {\n            this.core.$element.off(handler, this.handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    };\n\n    $.fn.owlCarousel.Constructor.Plugins.Animate = Animate;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Autoplay Plugin\n * @version 2.0.0\n * @author Bartosz Wojciechowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n\n    /**\n     * Creates the autoplay plugin.\n     * @class The Autoplay Plugin\n     * @param {Owl} scope - The Owl Carousel\n     */\n    var Autoplay = function (scope) {\n        this.core = scope;\n        this.core.options = $.extend({}, Autoplay.Defaults, this.core.options);\n\n        this.handlers = {\n            'translated.owl.carousel refreshed.owl.carousel': $.proxy(function () {\n                this.autoplay();\n            }, this),\n            'play.owl.autoplay': $.proxy(function (e, t, s) {\n                this.play(t, s);\n            }, this),\n            'stop.owl.autoplay': $.proxy(function () {\n                this.stop();\n            }, this),\n            'mouseover.owl.autoplay': $.proxy(function () {\n                if (this.core.settings.autoplayHoverPause) {\n                    this.pause();\n                }\n            }, this),\n            'mouseleave.owl.autoplay': $.proxy(function () {\n                if (this.core.settings.autoplayHoverPause) {\n                    this.autoplay();\n                }\n            }, this)\n        };\n\n        this.core.$element.on(this.handlers);\n    };\n\n    /**\n     * Default options.\n     * @public\n     */\n    Autoplay.Defaults = {\n        autoplay: false,\n        autoplayTimeout: 5000,\n        autoplayHoverPause: false,\n        autoplaySpeed: false\n    };\n\n    /**\n     * @protected\n     * @todo Must be documented.\n     */\n    Autoplay.prototype.autoplay = function () {\n        if (this.core.settings.autoplay && !this.core.state.videoPlay) {\n            window.clearInterval(this.interval);\n\n            this.interval = window.setInterval($.proxy(function () {\n                this.play();\n            }, this), this.core.settings.autoplayTimeout);\n        } else {\n            window.clearInterval(this.interval);\n        }\n    };\n\n    /**\n     * Starts the autoplay.\n     * @public\n     * @param {Number} [timeout] - ...\n     * @param {Number} [speed] - ...\n     * @returns {Boolean|undefined} - ...\n     * @todo Must be documented.\n     */\n    Autoplay.prototype.play = function (timeout, speed) {\n        // if tab is inactive - doesnt work in <IE10\n        if (document.hidden === true) {\n            return;\n        }\n\n        if (this.core.state.isTouch || this.core.state.isScrolling\n            || this.core.state.isSwiping || this.core.state.inMotion) {\n            return;\n        }\n\n        if (this.core.settings.autoplay === false) {\n            window.clearInterval(this.interval);\n            return;\n        }\n\n        this.core.next(this.core.settings.autoplaySpeed);\n    };\n\n    /**\n     * Stops the autoplay.\n     * @public\n     */\n    Autoplay.prototype.stop = function () {\n        window.clearInterval(this.interval);\n    };\n\n    /**\n     * Pauses the autoplay.\n     * @public\n     */\n    Autoplay.prototype.pause = function () {\n        window.clearInterval(this.interval);\n    };\n\n    /**\n     * Destroys the plugin.\n     */\n    Autoplay.prototype.destroy = function () {\n        var handler, property;\n\n        window.clearInterval(this.interval);\n\n        for (handler in this.handlers) {\n            this.core.$element.off(handler, this.handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    };\n\n    $.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Navigation Plugin\n * @version 2.0.0\n * @author Artus Kolanowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n    'use strict';\n\n    /**\n     * Creates the navigation plugin.\n     * @class The Navigation Plugin\n     * @param {Owl} carousel - The Owl Carousel.\n     */\n    var Navigation = function (carousel) {\n        /**\n         * Reference to the core.\n         * @protected\n         * @type {Owl}\n         */\n        this._core = carousel;\n\n        /**\n         * Indicates whether the plugin is initialized or not.\n         * @protected\n         * @type {Boolean}\n         */\n        this._initialized = false;\n\n        /**\n         * The current paging indexes.\n         * @protected\n         * @type {Array}\n         */\n        this._pages = [];\n\n        /**\n         * All DOM elements of the user interface.\n         * @protected\n         * @type {Object}\n         */\n        this._controls = {};\n\n        /**\n         * Markup for an indicator.\n         * @protected\n         * @type {Array.<String>}\n         */\n        this._templates = [];\n\n        /**\n         * The carousel element.\n         * @type {jQuery}\n         */\n        this.$element = this._core.$element;\n\n        /**\n         * Overridden methods of the carousel.\n         * @protected\n         * @type {Object}\n         */\n        this._overrides = {\n            next: this._core.next,\n            prev: this._core.prev,\n            to: this._core.to\n        };\n\n        /**\n         * All event handlers.\n         * @protected\n         * @type {Object}\n         */\n        this._handlers = {\n            'prepared.owl.carousel': $.proxy(function (e) {\n                if (this._core.settings.dotsData) {\n                    this._templates.push($(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot'));\n                }\n            }, this),\n            'add.owl.carousel': $.proxy(function (e) {\n                if (this._core.settings.dotsData) {\n                    this._templates.splice(e.position, 0, $(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot'));\n                }\n            }, this),\n            'remove.owl.carousel prepared.owl.carousel': $.proxy(function (e) {\n                if (this._core.settings.dotsData) {\n                    this._templates.splice(e.position, 1);\n                }\n            }, this),\n            'change.owl.carousel': $.proxy(function (e) {\n                if(typeof e.property !== 'undefined' && e.property.name == 'position') {\n                    if (!this._core.state.revert && !this._core.settings.loop && this._core.settings.navRewind) {\n                        var current = this._core.current(),\n                            maximum = this._core.maximum(),\n                            minimum = this._core.minimum();\n                        e.data = e.property.value > maximum\n                            ? current >= maximum ? minimum : maximum\n                            : e.property.value < minimum ? maximum : e.property.value;\n                    }\n                }\n            }, this),\n            'changed.owl.carousel': $.proxy(function (e) {\n                if (e.property.name == 'position') {\n                    this.draw();\n                }\n            }, this),\n            'refreshed.owl.carousel': $.proxy(function () {\n                if (!this._initialized) {\n                    this.initialize();\n                    this._initialized = true;\n                }\n                this._core.trigger('refresh', null, 'navigation');\n                this.update();\n                this.draw();\n                this._core.trigger('refreshed', null, 'navigation');\n            }, this)\n        };\n\n        // set default options\n        this._core.options = $.extend({}, Navigation.Defaults, this._core.options);\n\n        // register event handlers\n        this.$element.on(this._handlers);\n    }\n\n    /**\n     * Default options.\n     * @public\n     * @todo Rename `slideBy` to `navBy`\n     */\n    Navigation.Defaults = {\n        nav: false,\n        navRewind: true,\n        navText: ['prev', 'next'],\n        navSpeed: false,\n        navElement: 'div',\n        navContainer: false,\n        navContainerClass: 'owl-nav',\n        navClass: ['owl-prev', 'owl-next'],\n        slideBy: 1,\n        dotClass: 'owl-dot',\n        dotsClass: 'owl-dots',\n        dots: true,\n        dotsEach: false,\n        dotData: false,\n        dotsSpeed: false,\n        dotsContainer: false,\n        controlsClass: 'owl-controls'\n    }\n\n    /**\n     * Initializes the layout of the plugin and extends the carousel.\n     * @protected\n     */\n    Navigation.prototype.initialize = function () {\n        var $container, override,\n            options = this._core.settings;\n\n        // create the indicator template\n        if (!options.dotsData) {\n            this._templates = [$('<div>')\n                .addClass(options.dotClass)\n                .append($('<span>'))\n                .prop('outerHTML')];\n        }\n\n        // create controls container if needed\n        if (!options.navContainer || !options.dotsContainer) {\n            this._controls.$container = $('<div>')\n                .addClass(options.controlsClass)\n                .appendTo(this.$element);\n        }\n\n        // create DOM structure for absolute navigation\n        this._controls.$indicators = options.dotsContainer ? $(options.dotsContainer)\n            : $('<div>').hide().addClass(options.dotsClass).appendTo(this._controls.$container);\n\n        this._controls.$indicators.on('click', 'div', $.proxy(function (e) {\n            var index = $(e.target).parent().is(this._controls.$indicators)\n                ? $(e.target).index() : $(e.target).parent().index();\n\n            e.preventDefault();\n\n            this.to(index, options.dotsSpeed);\n        }, this));\n\n        // create DOM structure for relative navigation\n        $container = options.navContainer ? $(options.navContainer)\n            : $('<div>').addClass(options.navContainerClass).prependTo(this._controls.$container);\n\n        this._controls.$next = $('<' + options.navElement + '>');\n        this._controls.$previous = this._controls.$next.clone();\n\n        this._controls.$previous\n            .addClass(options.navClass[0])\n            .html(options.navText[0])\n            .hide()\n            .prependTo($container)\n            .on('click', $.proxy(function (e) {\n                this.prev(options.navSpeed);\n            }, this));\n        this._controls.$next\n            .addClass(options.navClass[1])\n            .html(options.navText[1])\n            .hide()\n            .appendTo($container)\n            .on('click', $.proxy(function (e) {\n                this.next(options.navSpeed);\n            }, this));\n\n        // override public methods of the carousel\n        for (override in this._overrides) {\n            this._core[override] = $.proxy(this[override], this);\n        }\n    }\n\n    /**\n     * Destroys the plugin.\n     * @protected\n     */\n    Navigation.prototype.destroy = function () {\n        var handler, control, property, override;\n\n        for (handler in this._handlers) {\n            this.$element.off(handler, this._handlers[handler]);\n        }\n        for (control in this._controls) {\n            this._controls[control].remove();\n        }\n        for (override in this.overides) {\n            this._core[override] = this._overrides[override];\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    }\n\n    /**\n     * Updates the internal state.\n     * @protected\n     */\n    Navigation.prototype.update = function () {\n        var i, j, k,\n            options = this._core.settings,\n            lower = this._core.clones().length / 2,\n            upper = lower + this._core.items().length,\n            size = options.center || options.autoWidth || options.dotData\n                ? 1 : options.dotsEach || options.items;\n\n        if (options.slideBy !== 'page') {\n            options.slideBy = Math.min(options.slideBy, options.items);\n        }\n\n        if (options.dots || options.slideBy == 'page') {\n            this._pages = [];\n\n            for (i = lower, j = 0, k = 0; i < upper; i++) {\n                if (j >= size || j === 0) {\n                    this._pages.push({\n                        start: i - lower,\n                        end: i - lower + size - 1\n                    });\n                    j = 0, ++k;\n                }\n                j += this._core.mergers(this._core.relative(i));\n            }\n        }\n    }\n\n    /**\n     * Draws the user interface.\n     * @todo The option `dotData` wont work.\n     * @protected\n     */\n    Navigation.prototype.draw = function () {\n        var difference, i, html = '',\n            options = this._core.settings,\n            $items = this._core.$stage.children(),\n            index = this._core.relative(this._core.current());\n\n        if (options.nav && !options.loop && !options.navRewind) {\n            this._controls.$previous.toggleClass('disabled', index <= 0);\n            this._controls.$next.toggleClass('disabled', index >= this._core.maximum());\n        }\n\n        this._controls.$previous.toggle(options.nav);\n        this._controls.$next.toggle(options.nav);\n\n        if (options.dots) {\n            difference = this._pages.length - this._controls.$indicators.children().length;\n\n            if (options.dotData && difference !== 0) {\n                for (i = 0; i < this._controls.$indicators.children().length; i++) {\n                    html += this._templates[this._core.relative(i)];\n                }\n                this._controls.$indicators.html(html);\n            } else if (difference > 0) {\n                html = new Array(difference + 1).join(this._templates[0]);\n                this._controls.$indicators.append(html);\n            } else if (difference < 0) {\n                this._controls.$indicators.children().slice(difference).remove();\n            }\n\n            this._controls.$indicators.find('.active').removeClass('active');\n            this._controls.$indicators.children().eq($.inArray(this.current(), this._pages)).addClass('active');\n        }\n\n        this._controls.$indicators.toggle(options.dots);\n    }\n\n    /**\n     * Extends event data.\n     * @protected\n     * @param {Event} event - The event object which gets thrown.\n     */\n    Navigation.prototype.onTrigger = function (event) {\n        var settings = this._core.settings;\n\n        event.page = {\n            index: $.inArray(this.current(), this._pages),\n            count: this._pages.length,\n            size: settings && (settings.center || settings.autoWidth || settings.dotData\n                ? 1 : settings.dotsEach || settings.items)\n        };\n    }\n\n    /**\n     * Gets the current page position of the carousel.\n     * @protected\n     * @returns {Number}\n     */\n    Navigation.prototype.current = function () {\n        var index = this._core.relative(this._core.current());\n        return $.grep(this._pages, function (o) {\n            return o.start <= index && o.end >= index;\n        }).pop();\n    }\n\n    /**\n     * Gets the current succesor/predecessor position.\n     * @protected\n     * @returns {Number}\n     */\n    Navigation.prototype.getPosition = function (successor) {\n        var position, length,\n            options = this._core.settings;\n\n        if (options.slideBy == 'page') {\n            position = $.inArray(this.current(), this._pages);\n            length = this._pages.length;\n            successor ? ++position : --position;\n            position = this._pages[((position % length) + length) % length].start;\n        } else {\n            position = this._core.relative(this._core.current());\n            length = this._core.items().length;\n            successor ? position += options.slideBy : position -= options.slideBy;\n        }\n        return position;\n    }\n\n    /**\n     * Slides to the next item or page.\n     * @public\n     * @param {Number} [speed=false] - The time in milliseconds for the transition.\n     */\n    Navigation.prototype.next = function (speed) {\n        $.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);\n    }\n\n    /**\n     * Slides to the previous item or page.\n     * @public\n     * @param {Number} [speed=false] - The time in milliseconds for the transition.\n     */\n    Navigation.prototype.prev = function (speed) {\n        $.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);\n    }\n\n    /**\n     * Slides to the specified item or page.\n     * @public\n     * @param {Number} position - The position of the item or page.\n     * @param {Number} [speed] - The time in milliseconds for the transition.\n     * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.\n     */\n    Navigation.prototype.to = function (position, speed, standard) {\n        var length;\n\n        if (!standard) {\n            length = this._pages.length;\n            $.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);\n        } else {\n            $.proxy(this._overrides.to, this._core)(position, speed);\n        }\n    }\n\n    $.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;\n\n})(window.Zepto || window.jQuery, window, document);\n\n/**\n * Hash Plugin\n * @version 2.0.0\n * @author Artus Kolanowski\n * @license The MIT License (MIT)\n */\n;\n(function ($, window, document, undefined) {\n    'use strict';\n\n    /**\n     * Creates the hash plugin.\n     * @class The Hash Plugin\n     * @param {Owl} carousel - The Owl Carousel\n     */\n    var Hash = function (carousel) {\n        /**\n         * Reference to the core.\n         * @protected\n         * @type {Owl}\n         */\n        this._core = carousel;\n\n        /**\n         * Hash table for the hashes.\n         * @protected\n         * @type {Object}\n         */\n        this._hashes = {};\n\n        /**\n         * The carousel element.\n         * @type {jQuery}\n         */\n        this.$element = this._core.$element;\n\n        /**\n         * All event handlers.\n         * @protected\n         * @type {Object}\n         */\n        this._handlers = {\n            'initialized.owl.carousel': $.proxy(function () {\n                if (this._core.settings.startPosition == 'URLHash') {\n                    $(window).trigger('hashchange.owl.navigation');\n                }\n            }, this),\n            'prepared.owl.carousel': $.proxy(function (e) {\n                var hash = $(e.content).find('[data-hash]').addBack('[data-hash]').attr('data-hash');\n                this._hashes[hash] = e.content;\n            }, this)\n        };\n\n        // set default options\n        this._core.options = $.extend({}, Hash.Defaults, this._core.options);\n\n        // register the event handlers\n        this.$element.on(this._handlers);\n\n        // register event listener for hash navigation\n        $(window).on('hashchange.owl.navigation', $.proxy(function () {\n            var hash = window.location.hash.substring(1),\n                items = this._core.$stage.children(),\n                position = this._hashes[hash] && items.index(this._hashes[hash]) || 0;\n\n            if (!hash) {\n                return false;\n            }\n\n            this._core.to(position, false, true);\n        }, this));\n    }\n\n    /**\n     * Default options.\n     * @public\n     */\n    Hash.Defaults = {\n        URLhashListener: false\n    }\n\n    /**\n     * Destroys the plugin.\n     * @public\n     */\n    Hash.prototype.destroy = function () {\n        var handler, property;\n\n        $(window).off('hashchange.owl.navigation');\n\n        for (handler in this._handlers) {\n            this._core.$element.off(handler, this._handlers[handler]);\n        }\n        for (property in Object.getOwnPropertyNames(this)) {\n            typeof this[property] != 'function' && (this[property] = null);\n        }\n    }\n\n    $.fn.owlCarousel.Constructor.Plugins.Hash = Hash;\n\n})(window.Zepto || window.jQuery, window, document);\n });","Sm_ShopBy/js/product/list/toolbar.js":"/**\n *\n * SM Shop By - Version 2.0.0\n * Copyright (c) 2017 YouTech Company. All Rights Reserved.\n * @license - Copyrighted Commercial Software\n * Author: YouTech Company\n * Websites: http://www.magentech.com\n */\n\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"Magento_Theme/js/view/messages\",\n    \"ko\",\n    \"Magento_Catalog/js/product/list/toolbar\",\n    \"jquery/ui-modules/widgets/slider\"\n], function ($, ui, messageComponent, ko) {\n\n    $.widget('mage.productListToolbarForm', $.mage.productListToolbarForm, {\n        options: {\n            modeControl: '[data-role=\"mode-switcher\"]',\n            directionControl: '[data-role=\"direction-switcher\"]',\n            orderControl: '[data-role=\"sorter\"]',\n            limitControl: '[data-role=\"limiter\"]',\n            pagerControl: '.pages-items a',\n            mode: 'product_list_mode',\n            direction: 'product_list_dir',\n            order: 'product_list_order',\n            limit: 'product_list_limit',\n            pager: 'p',\n            modeDefault: 'grid',\n            directionDefault: 'asc',\n            orderDefault: 'position',\n            limitDefault: '9',\n            pagerDefault: '1',\n            priceSliderWrap: '.price-slider-wrap',\n            priceMinMax: 'input[name=\"price_minimum\"], input[name=\"price_maximum\"]',\n            price: 'price',\n            loadingMark: '.loading-mask-shopby',\n            priceDefault: '',\n            productsToolbarControl: '.toolbar.toolbar-products',\n            productsListBlock: '.products.wrapper',\n            layeredNavigationFilterBlock: '.block.filter',\n            filterItemControl: '.block.filter .item a, .block.filter .filter-clear,.block.filter .swatch-option-link-layered',\n            url: ''\n        },\n\n        _create: function () {\n            this._super();\n            this._bind($(this.options.pagerControl), this.options.pager, this.options.pagerDefault);\n            this._bind($(this.options.priceMinMax), this.options.price, this.options.priceDefault);\n            $(this.options.filterItemControl)\n                .off('click.' + this.namespace + 'productListToolbarForm')\n                .on('click.' + this.namespace + 'productListToolbarForm', {}, $.proxy(this.applyFilterToProductsList, this))\n            ;\n        },\n\n        _bind: function (element, paramName, defaultValue) {\n            if (element.is(\"select\")) {\n                element\n                    .off('change.' + this.namespace + 'productListToolbarForm')\n                    .on('change.' + this.namespace + 'productListToolbarForm', {\n                        paramName: paramName,\n                        default: defaultValue\n                    }, $.proxy(this._processSelect, this));\n            } else if (element.is(\"input\")) {\n                element\n                    .off('change.' + this.namespace + 'productListToolbarForm')\n                    .on('change.' + this.namespace + 'productListToolbarForm', {\n                        paramName: paramName,\n                        default: defaultValue\n                    }, $.proxy(this._processSlider, this));\n                this._startSlider();\n            } else {\n                element\n                    .off('click.' + this.namespace + 'productListToolbarForm')\n                    .on('click.' + this.namespace + 'productListToolbarForm', {\n                        paramName: paramName,\n                        default: defaultValue\n                    }, $.proxy(this._processLink, this));\n            }\n        },\n\n        _processSlider: function (event) {\n            event.preventDefault();\n            var that = this;\n            var _slider_wrap = $(this.options.priceSliderWrap),\n                _slider = $('#price-slider', _slider_wrap),\n                _data_rate = Number(_slider.attr('data-rate')),\n                _min_standard = Number(_slider.attr('data-min-standard')),\n                _max_standard = Number(_slider.attr('data-max-standard')),\n                _min_price = $('#price_minimum', _slider_wrap),\n                _min_price_value = Number(_min_price.val()),\n                _max_price = $('#price_maximum', _slider_wrap),\n                _max_price_value = Number(_max_price.val());\n            _min_price_value = (_min_price_value < _min_standard || !$.isNumeric(_min_price_value)) ? _min_standard : _min_price_value;\n            _max_price_value = (_max_price_value > _max_standard || !$.isNumeric(_max_price_value)) ? _max_standard : _max_price_value;\n            _min_price.val(_min_price_value);\n            _max_price.val(_max_price_value);\n            var _max_price_url = Number(_max_price.val() / _data_rate) + 0.01;\n            this.changeUrl(\n                event.data.paramName,\n                Number(_min_price.val() / _data_rate).toFixed(2) + '-' + _max_price_url.toFixed(2),\n                event.data.default\n            );\n        },\n        _processLink: function (event) {\n            event.preventDefault();\n            var _parent = $(event.currentTarget).parents('.sidebar-main , .toolbar-products');\n            var _data = $(event.currentTarget).data('value');\n            if (_parent.length) {\n                if (typeof _data == 'undefined') {\n                    var _tmp, urlPaths = $(event.currentTarget).attr('href').split('?'),\n                        //baseUrl = urlPaths[0],\n                        flag,\n                        urlParams = urlPaths[1] ? urlPaths[1].split('&') : [];\n                    if (urlParams.length) {\n                        for (var i = 0; i < urlParams.length; i++) {\n                            if (urlParams[i].search('p=') !== -1) {\n                                flag = 1;\n\n                            } else {\n                                flag = 0;\n                            }\n                        }\n\n                        if (flag) {\n                            var link = $(event.currentTarget);\n                            var urlParts = link.attr('href').split('?');\n                            this.processAjaxCall(urlParts[0], urlParts[1]);\n\t\t\t\t\t\t\ti--;\n                            _tmp = urlParams[i].split('=');\n                            this.changeUrl(\n                                event.data.paramName,\n                                _tmp[1],\n                                event.data.default\n                            );\n                        } else {\n                            var link = $(event.currentTarget);\n                            var urlParts = link.attr('href').split('?');\n                            this.processAjaxCall(urlParts[0], urlParts[1]);\n                        }\n                    } else {\n                        var link = $(event.currentTarget);\n                        var urlParts = link.attr('href').split('?');\n                        this.processAjaxCall(urlParts[0], urlParts[1]);\n                        //event.preventDefault();\n                    }\n                } else {\n                    this.changeUrl(\n                        event.data.paramName,\n                        $(event.currentTarget).data('value'),\n                        event.data.default\n                    );\n                }\n            } else {\n                this.changeUrlOriginal(\n                    event.data.paramName,\n                    $(event.currentTarget).data('value'),\n                    event.data.default\n                );\n            }\n        },\n        _processSelect: function (event) {\n            var _parent = $(event.currentTarget).parents('.sidebar-main, .toolbar-products');\n            if (_parent.length) {\n                this.changeUrl(\n                    event.data.paramName,\n                    event.currentTarget.options[event.currentTarget.selectedIndex].value,\n                    event.data.default\n                );\n            } else {\n                this.changeUrlOriginal(\n                    event.data.paramName,\n                    event.currentTarget.options[event.currentTarget.selectedIndex].value,\n                    event.data.default\n                );\n            }\n\n        },\n        changeUrlOriginal: function (paramName, paramValue, defaultValue) {\n            var decode = window.decodeURIComponent,\n                urlPaths = this.options.url.split('?'),\n                baseUrl = urlPaths[0],\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\n                paramData = {},\n                parameters, i;\n\n            for (i = 0; i < urlParams.length; i++) {\n                parameters = urlParams[i].split('=');\n                paramData[decode(parameters[0])] = parameters[1] !== undefined ?\n                    decode(parameters[1].replace(/\\+/g, '%20')) :\n                    '';\n            }\n            paramData[paramName] = paramValue;\n\n            if (paramValue == defaultValue) { //eslint-disable-line eqeqeq\n                delete paramData[paramName];\n            }\n            paramData = $.param(paramData);\n\n            location.href = baseUrl + (paramData.length ? '?' + paramData : '');\n        },\n        _startSlider: function () {\n            var that = this;\n            var _slider_wrap = $(this.options.priceSliderWrap),\n                _slider = $('#price-slider', _slider_wrap),\n                _data_rate = Number(_slider.attr('data-rate')),\n                _min_standard = Number(_slider.attr('data-min-standard')),\n                _max_standard = Number(_slider.attr('data-max-standard')),\n                _min_price = $('#price_minimum', _slider_wrap),\n                _min_price_value = Number(_min_price.val()),\n                _max_price = $('#price_maximum', _slider_wrap),\n                _max_price_value = Number(_max_price.val());\n            _slider.slider({\n                range: true,\n                min: _min_standard,\n                max: _max_standard,\n                values: [_min_price_value, _max_price_value],\n                slide: function (event, ui) {\n                    _min_price.val(ui.values[0]);\n                    _max_price.val(ui.values[1]);\n                },\n                stop: function (event, ui) {\n                    var _max_price_url = Number(ui.values[1] / _data_rate) + 0.01;\n                    that.changeUrl(\n                        'price',\n                        Number(_min_price.val() / _data_rate).toFixed(2) + '-' + _max_price_url.toFixed(2),\n                        null\n                    );\n                }\n            });\n        },\n        applyFilterToProductsList: function (eve) {\n            var link = $(eve.currentTarget);\n            var urlParts = link.attr('href').split('?');\n            this.processAjaxCall(urlParts[0], urlParts[1]);\n            eve.preventDefault();\n        },\n        updateUrl: function (url, paramData) {\n            if (!url) {\n                return;\n            }\n            if (paramData && paramData.length > 0) {\n                url += '?' + paramData;\n            }\n            url = (url.search('ajax=1&') !== -1) ? url.replace('ajax=1&', '') : url;\n            if (typeof history.replaceState === 'function') {\n                history.replaceState(null, null, url);\n            }\n        },\n\n        getParams: function (urlParams, paramName, paramValue, defaultValue) {\n            var paramData = {},\n                parameters;\n\n            for (var i = 0; i < urlParams.length; i++) {\n                parameters = urlParams[i].split('=');\n                if (parameters[1] !== undefined) {\n                    paramData[parameters[0]] = parameters[1];\n                } else {\n                    paramData[parameters[0]] = '';\n                }\n            }\n\n            paramData[paramName] = paramValue;\n            if (paramValue == defaultValue) {\n                delete paramData[paramName];\n            }\n            return window.decodeURIComponent($.param(paramData).replace(/\\+/g, '%20'));\n        },\n\n        _updateContent: function (content) {\n            $(this.options.productsToolbarControl).remove();\n            if (content.products_list) {\n                if ($(content.products_list).hasClass('search results') && $('.search.results').length) {\n                    $('.search.results').replaceWith(content.products_list);\n                } else {\n                    $(this.options.productsListBlock).replaceWith(content.products_list);\n                }\n            }\n\n            if (content.filters) {\n                $(this.options.layeredNavigationFilterBlock).replaceWith(content.filters);\n            }\n            if ($(this.options.productsListBlock).length) {\n                this._create();\n                $('body').trigger('contentUpdated');\n            }\n        },\n\n        updateContent: function (content) {\n            $('html, body').animate(\n                {\n                    scrollTop: $(this.options.productsToolbarControl + \":first\").offset().top\n                },\n                100,\n                'swing',\n                this._updateContent(content)\n            );\n        },\n\n        changeUrl: function (paramName, paramValue, defaultValue) {\n            var urlPaths = this.options.url.split('?'),\n                baseUrl = urlPaths[0],\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\n                paramData = this.getParams(urlParams, paramName, paramValue, defaultValue);\n            this.processAjaxCall(baseUrl, paramData);\n        },\n\n        processAjaxCall: function (baseUrl, paramData) {\n            var that = this;\n            var self = this;\n            $.ajax({\n                url: baseUrl,\n                data: (paramData && paramData.length > 0 ? paramData + '&ajax=1' : 'ajax=1'),\n                type: 'get',\n                dataType: 'json',\n                cache: true,\n                beforeSend: function () {\n                    $(document).trigger('tap');\n                    $(that.options.loadingMark).show();\n                },\n                showLoader: false\n            }).done(function (response) {\n                if (response.success) {\n                    self.updateUrl(baseUrl, paramData);\n                    self.updateContent(response.html);\n                    self.setMessage({\n                        type: 'success',\n                        text: $.mage.__('Sections have been updated')\n                    });\n                } else {\n                    var msg = response.error_message;\n                    if (msg) {\n                        self.setMessage({\n                            type: 'error',\n                            text: msg\n                        });\n                    }\n                }\n                $(that.options.loadingMark).hide();\n                $(document).trigger(\"afterAjaxProductsLoaded\");\n                $(document).trigger(\"afterAjaxLazyLoad\");\n            }).fail(function (error) {\n                self.setMessage({\n                    type: 'error',\n                    text: $.mage.__('Sorry, something went wrong. Please try again later.')\n                });\n                $(that.options.loadingMark).hide();\n            });\n        },\n\n        setMessage: function (obj) {\n            var messages = ko.observableArray([obj]);\n            messageComponent().messages({\n                messages: messages\n            });\n        }\n    });\n\n    return $.mage.productListToolbarForm;\n});\n","Sm_SizeChart/js/sizechart.js":"define([\n        'jquery',\n        'Magento_Ui/js/modal/modal',\n        \"domReady!\"\n    ],\n    function ($, modal) {\n        var options = {\n            type: 'popup',\n            responsive: true,\n            innerScroll: true,\n            modalClass: 'sm-sizechart',\n            buttons: []\n        };\n\n        if ($('#modal-sizechart').length) {\n            var popup = modal(options, $('#modal-sizechart'));\n            var appendButon = setInterval(setButton, 1000);\n            var sizeCode = \".\" + $(\"#sm-sizechart-container\").data('size-code');\n        }\n\n        function setButton() {\n            $(\".product-info-main .product-options-wrapper \" + sizeCode).addClass(\"has-sizechart\").append($(\"#button-sizechart-append\"));\n\n            if ($(\".product-info-main .product-options-wrapper \" + sizeCode + \" #button-sizechart-append\").length) {\n                clearInterval(appendButon);\n            }\n        }\n\n        $(document).on('click', '#sizechart-btn', function () {\n            $(\"#modal-sizechart\").modal(\"openModal\");\n        });\n    });","vimeo/player.min.js":"/*! @vimeo/player v2.16.4 | (c) 2022 Vimeo | MIT License | https://github.com/vimeo/player.js */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):((e=\"undefined\"!=typeof globalThis?globalThis:e||self).Vimeo=e.Vimeo||{},e.Vimeo.Player=t())}(this,function(){\"use strict\";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var e=\"undefined\"!=typeof global&&\"[object global]\"==={}.toString.call(global);function i(e,t){return 0===e.indexOf(t.toLowerCase())?e:\"\".concat(t.toLowerCase()).concat(e.substr(0,1).toUpperCase()).concat(e.substr(1))}function l(e){return/^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(e)}function u(e){var t=0<arguments.length&&void 0!==e?e:{},n=t.id,e=t.url,t=n||e;if(!t)throw new Error(\"An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.\");if(e=t,!isNaN(parseFloat(e))&&isFinite(e)&&Math.floor(e)==e)return\"https://vimeo.com/\".concat(t);if(l(t))return t.replace(\"http:\",\"https:\");if(n)throw new TypeError(\"\u201c\".concat(n,\"\u201d is not a valid video id.\"));throw new TypeError(\"\u201c\".concat(t,\"\u201d is not a vimeo.com url.\"))}var t=void 0!==Array.prototype.indexOf,Player=\"undefined\"!=typeof window&&void 0!==window.postMessage;if(!(e||t&&Player))throw new Error(\"Sorry, the Vimeo Player API is not available in this browser.\");var n,o,a=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function c(){if(void 0===this)throw new TypeError(\"Constructor WeakMap requires 'new'\");if(o(this,\"_id\",\"_WeakMap_\"+f()+\".\"+f()),0<arguments.length)throw new TypeError(\"WeakMap iterable is not supported\")}function s(e,t){if(!d(e)||!n.call(e,\"_id\"))throw new TypeError(t+\" method called on incompatible receiver \"+typeof e)}function f(){return Math.random().toString().substring(2)}function d(e){return Object(e)===e}(Player=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:a).WeakMap||(n=Object.prototype.hasOwnProperty,Player.WeakMap=((o=function(e,t,n){Object.defineProperty?Object.defineProperty(e,t,{configurable:!0,writable:!0,value:n}):e[t]=n})(c.prototype,\"delete\",function(e){if(s(this,\"delete\"),!d(e))return!1;var t=e[this._id];return!(!t||t[0]!==e)&&(delete e[this._id],!0)}),o(c.prototype,\"get\",function(e){if(s(this,\"get\"),d(e)){var t=e[this._id];return t&&t[0]===e?t[1]:void 0}}),o(c.prototype,\"has\",function(e){if(s(this,\"has\"),!d(e))return!1;var t=e[this._id];return!(!t||t[0]!==e)}),o(c.prototype,\"set\",function(e,t){if(s(this,\"set\"),!d(e))throw new TypeError(\"Invalid value used as weak map key\");var n=e[this._id];return n&&n[0]===e?n[1]=t:o(e,this._id,[e,t]),this}),o(c,\"_polyfill\",!0),c));var h,m=(function(e){var t,n,r;r=function(){var t,n,r,o,i,e=Object.prototype.toString,a=\"undefined\"!=typeof setImmediate?function(e){return setImmediate(e)}:setTimeout;try{Object.defineProperty({},\"x\",{}),t=function(e,t,n,r){return Object.defineProperty(e,t,{value:n,writable:!0,configurable:!1!==r})}}catch(e){t=function(e,t,n){return e[t]=n,e}}function u(e,t){this.fn=e,this.self=t,this.next=void 0}function l(e,t){y.add(e,t),n=n||a(y.drain)}function c(e){var t,n=typeof e;return\"function\"==typeof(t=null!=e&&(\"object\"==n||\"function\"==n)?e.then:t)&&t}function s(){for(var e=0;e<this.chain.length;e++)!function(e,t,n){var r,o;try{!1===t?n.reject(e.msg):(r=!0===t?e.msg:t.call(void 0,e.msg))===n.promise?n.reject(TypeError(\"Promise-chain cycle\")):(o=c(r))?o.call(r,n.resolve,n.reject):n.resolve(r)}catch(e){n.reject(e)}}(this,1===this.state?this.chain[e].success:this.chain[e].failure,this.chain[e]);this.chain.length=0}function f(e){var n,r=this;if(!r.triggered){r.triggered=!0,r.def&&(r=r.def);try{(n=c(e))?l(function(){var t=new m(r);try{n.call(e,function(){f.apply(t,arguments)},function(){d.apply(t,arguments)})}catch(e){d.call(t,e)}}):(r.msg=e,r.state=1,0<r.chain.length&&l(s,r))}catch(e){d.call(new m(r),e)}}}function d(e){var t=this;t.triggered||(t.triggered=!0,(t=t.def?t.def:t).msg=e,t.state=2,0<t.chain.length&&l(s,t))}function h(e,n,r,o){for(var t=0;t<n.length;t++)!function(t){e.resolve(n[t]).then(function(e){r(t,e)},o)}(t)}function m(e){this.def=e,this.triggered=!1}function v(e){this.promise=e,this.state=0,this.triggered=!1,this.chain=[],this.msg=void 0}function p(e){if(\"function\"!=typeof e)throw TypeError(\"Not a function\");if(0!==this.__NPO__)throw TypeError(\"Not a promise\");this.__NPO__=1;var r=new v(this);this.then=function(e,t){var n={success:\"function\"!=typeof e||e,failure:\"function\"==typeof t&&t};return n.promise=new this.constructor(function(e,t){if(\"function\"!=typeof e||\"function\"!=typeof t)throw TypeError(\"Not a function\");n.resolve=e,n.reject=t}),r.chain.push(n),0!==r.state&&l(s,r),n.promise},this.catch=function(e){return this.then(void 0,e)};try{e.call(void 0,function(e){f.call(r,e)},function(e){d.call(r,e)})}catch(e){d.call(r,e)}}var y={add:function(e,t){i=new u(e,t),o?o.next=i:r=i,o=i,i=void 0},drain:function(){var e=r;for(r=o=n=void 0;e;)e.fn.call(e.self),e=e.next}},g=t({},\"constructor\",p,!1);return t(p.prototype=g,\"__NPO__\",0,!1),t(p,\"resolve\",function(n){return n&&\"object\"==typeof n&&1===n.__NPO__?n:new this(function(e,t){if(\"function\"!=typeof e||\"function\"!=typeof t)throw TypeError(\"Not a function\");e(n)})}),t(p,\"reject\",function(n){return new this(function(e,t){if(\"function\"!=typeof e||\"function\"!=typeof t)throw TypeError(\"Not a function\");t(n)})}),t(p,\"all\",function(t){var a=this;return\"[object Array]\"!=e.call(t)?a.reject(TypeError(\"Not an array\")):0===t.length?a.resolve([]):new a(function(n,e){if(\"function\"!=typeof n||\"function\"!=typeof e)throw TypeError(\"Not a function\");var r=t.length,o=Array(r),i=0;h(a,t,function(e,t){o[e]=t,++i===r&&n(o)},e)})}),t(p,\"race\",function(t){var r=this;return\"[object Array]\"!=e.call(t)?r.reject(TypeError(\"Not an array\")):new r(function(n,e){if(\"function\"!=typeof n||\"function\"!=typeof e)throw TypeError(\"Not a function\");h(r,t,function(e,t){n(t)},e)})}),p},(n=a)[t=\"Promise\"]=n[t]||r(),e.exports&&(e.exports=n[t])}(h={exports:{}}),h.exports),v=new WeakMap;function p(e,t,n){var r=v.get(e.element)||{};t in r||(r[t]=[]),r[t].push(n),v.set(e.element,r)}function y(e,t){return(v.get(e.element)||{})[t]||[]}function g(e,t,n){var r=v.get(e.element)||{};if(!r[t])return!0;if(!n)return r[t]=[],v.set(e.element,r),!0;n=r[t].indexOf(n);return-1!==n&&r[t].splice(n,1),v.set(e.element,r),r[t]&&0===r[t].length}var w=[\"autopause\",\"autoplay\",\"background\",\"byline\",\"color\",\"controls\",\"dnt\",\"height\",\"id\",\"interactive_params\",\"keyboard\",\"loop\",\"maxheight\",\"maxwidth\",\"muted\",\"playsinline\",\"portrait\",\"responsive\",\"speed\",\"texttrack\",\"title\",\"transparent\",\"url\",\"width\"];function b(r,e){return w.reduce(function(e,t){var n=r.getAttribute(\"data-vimeo-\".concat(t));return!n&&\"\"!==n||(e[t]=\"\"===n?1:n),e},1<arguments.length&&void 0!==e?e:{})}function k(e,t){var n=e.html;if(!t)throw new TypeError(\"An element must be provided\");if(null!==t.getAttribute(\"data-vimeo-initialized\"))return t.querySelector(\"iframe\");e=document.createElement(\"div\");return e.innerHTML=n,t.appendChild(e.firstChild),t.setAttribute(\"data-vimeo-initialized\",\"true\"),t.querySelector(\"iframe\")}function E(i,e,t){var a=1<arguments.length&&void 0!==e?e:{},u=2<arguments.length?t:void 0;return new Promise(function(t,n){if(!l(i))throw new TypeError(\"\u201c\".concat(i,\"\u201d is not a vimeo.com url.\"));var e,r=\"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(i));for(e in a)a.hasOwnProperty(e)&&(r+=\"&\".concat(e,\"=\").concat(encodeURIComponent(a[e])));var o=new(\"XDomainRequest\"in window?XDomainRequest:XMLHttpRequest);o.open(\"GET\",r,!0),o.onload=function(){if(404!==o.status)if(403!==o.status)try{var e=JSON.parse(o.responseText);if(403===e.domain_status_code)return k(e,u),void n(new Error(\"\u201c\".concat(i,\"\u201d is not embeddable.\")));t(e)}catch(e){n(e)}else n(new Error(\"\u201c\".concat(i,\"\u201d is not embeddable.\")));else n(new Error(\"\u201c\".concat(i,\"\u201d was not found.\")))},o.onerror=function(){var e=o.status?\" (\".concat(o.status,\")\"):\"\";n(new Error(\"There was an error fetching the embed code from Vimeo\".concat(e,\".\")))},o.send()})}function T(e){function n(e){\"console\"in window&&console.error&&console.error(\"There was an error creating an embed: \".concat(e))}e=0<arguments.length&&void 0!==e?e:document,e=[].slice.call(e.querySelectorAll(\"[data-vimeo-id], [data-vimeo-url]\"));e.forEach(function(t){try{if(null!==t.getAttribute(\"data-vimeo-defer\"))return;var e=b(t);E(u(e),e,t).then(function(e){return k(e,t)}).catch(n)}catch(e){n(e)}})}function P(e){if(\"string\"==typeof e)try{e=JSON.parse(e)}catch(e){return console.warn(e),{}}return e}function _(e,t,n){e.element.contentWindow&&e.element.contentWindow.postMessage&&(t={method:t},void 0!==n&&(t.value=n),8<=(n=parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/,\"$1\")))&&n<10&&(t=JSON.stringify(t)),e.element.contentWindow.postMessage(t,e.origin))}function M(n,r){var t,e,o,i,a=[];(r=P(r)).event?(\"error\"===r.event&&y(n,r.data.method).forEach(function(e){var t=new Error(r.data.message);t.name=r.data.name,e.reject(t),g(n,r.data.method,e)}),a=y(n,\"event:\".concat(r.event)),t=r.data):r.method&&(e=n,o=r.method,(i=!((i=y(e,o)).length<1)&&(i=i.shift(),g(e,o,i),i))&&(a.push(i),t=r.value)),a.forEach(function(e){try{if(\"function\"==typeof e)return void e.call(n,t);e.resolve(t)}catch(e){}})}var N,F,x,C=new WeakMap,j=new WeakMap,A={},Player=function(){function Player(i){var e,a=this,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,Player),window.jQuery&&i instanceof jQuery&&(1<i.length&&window.console&&console.warn&&console.warn(\"A jQuery object with multiple elements was passed, using the first element.\"),i=i[0]),\"undefined\"!=typeof document&&\"string\"==typeof i&&(i=document.getElementById(i)),e=i,!Boolean(e&&1===e.nodeType&&\"nodeName\"in e&&e.ownerDocument&&e.ownerDocument.defaultView))throw new TypeError(\"You must pass either a valid element or a valid id.\");if(\"IFRAME\"===i.nodeName||(r=i.querySelector(\"iframe\"))&&(i=r),\"IFRAME\"===i.nodeName&&!l(i.getAttribute(\"src\")||\"\"))throw new Error(\"The player element passed isn\u2019t a Vimeo embed.\");if(C.has(i))return C.get(i);this._window=i.ownerDocument.defaultView,this.element=i,this.origin=\"*\";var n,r=new m(function(r,o){var e;a._onMessage=function(e){if(l(e.origin)&&a.element.contentWindow===e.source){\"*\"===a.origin&&(a.origin=e.origin);var t=P(e.data);if(t&&\"error\"===t.event&&t.data&&\"ready\"===t.data.method){var n=new Error(t.data.message);return n.name=t.data.name,void o(n)}e=t&&\"ready\"===t.event,n=t&&\"ping\"===t.method;if(e||n)return a.element.setAttribute(\"data-ready\",\"true\"),void r();M(a,t)}},a._window.addEventListener(\"message\",a._onMessage),\"IFRAME\"!==a.element.nodeName&&E(u(e=b(i,t)),e,i).then(function(e){var t,n,r=k(e,i);return a.element=r,a._originalElement=i,t=i,n=r,r=v.get(t),v.set(n,r),v.delete(t),C.set(a.element,a),e}).catch(o)});return j.set(this,r),C.set(this.element,this),\"IFRAME\"===this.element.nodeName&&_(this,\"ping\"),A.isEnabled&&(n=function(){return A.exit()},this.fullscreenchangeHandler=function(){(A.isFullscreen?p:g)(a,\"event:exitFullscreen\",n),a.ready().then(function(){_(a,\"fullscreenchange\",A.isFullscreen)})},A.on(\"fullscreenchange\",this.fullscreenchangeHandler)),this}var e,t,n;return e=Player,(t=[{key:\"callMethod\",value:function(n){var r=this,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return new m(function(e,t){return r.ready().then(function(){p(r,n,{resolve:e,reject:t}),_(r,n,o)}).catch(t)})}},{key:\"get\",value:function(n){var r=this;return new m(function(e,t){return n=i(n,\"get\"),r.ready().then(function(){p(r,n,{resolve:e,reject:t}),_(r,n)}).catch(t)})}},{key:\"set\",value:function(n,r){var o=this;return new m(function(e,t){if(n=i(n,\"set\"),null==r)throw new TypeError(\"There must be a value to set.\");return o.ready().then(function(){p(o,n,{resolve:e,reject:t}),_(o,n,r)}).catch(t)})}},{key:\"on\",value:function(e,t){if(!e)throw new TypeError(\"You must pass an event name.\");if(!t)throw new TypeError(\"You must pass a callback function.\");if(\"function\"!=typeof t)throw new TypeError(\"The callback must be a function.\");0===y(this,\"event:\".concat(e)).length&&this.callMethod(\"addEventListener\",e).catch(function(){}),p(this,\"event:\".concat(e),t)}},{key:\"off\",value:function(e,t){if(!e)throw new TypeError(\"You must pass an event name.\");if(t&&\"function\"!=typeof t)throw new TypeError(\"The callback must be a function.\");g(this,\"event:\".concat(e),t)&&this.callMethod(\"removeEventListener\",e).catch(function(e){})}},{key:\"loadVideo\",value:function(e){return this.callMethod(\"loadVideo\",e)}},{key:\"ready\",value:function(){var e=j.get(this)||new m(function(e,t){t(new Error(\"Unknown player. Probably unloaded.\"))});return m.resolve(e)}},{key:\"addCuePoint\",value:function(e){return this.callMethod(\"addCuePoint\",{time:e,data:1<arguments.length&&void 0!==arguments[1]?arguments[1]:{}})}},{key:\"removeCuePoint\",value:function(e){return this.callMethod(\"removeCuePoint\",e)}},{key:\"enableTextTrack\",value:function(e,t){if(!e)throw new TypeError(\"You must pass a language.\");return this.callMethod(\"enableTextTrack\",{language:e,kind:t})}},{key:\"disableTextTrack\",value:function(){return this.callMethod(\"disableTextTrack\")}},{key:\"pause\",value:function(){return this.callMethod(\"pause\")}},{key:\"play\",value:function(){return this.callMethod(\"play\")}},{key:\"requestFullscreen\",value:function(){return A.isEnabled?A.request(this.element):this.callMethod(\"requestFullscreen\")}},{key:\"exitFullscreen\",value:function(){return A.isEnabled?A.exit():this.callMethod(\"exitFullscreen\")}},{key:\"getFullscreen\",value:function(){return A.isEnabled?m.resolve(A.isFullscreen):this.get(\"fullscreen\")}},{key:\"requestPictureInPicture\",value:function(){return this.callMethod(\"requestPictureInPicture\")}},{key:\"exitPictureInPicture\",value:function(){return this.callMethod(\"exitPictureInPicture\")}},{key:\"getPictureInPicture\",value:function(){return this.get(\"pictureInPicture\")}},{key:\"unload\",value:function(){return this.callMethod(\"unload\")}},{key:\"destroy\",value:function(){var n=this;return new m(function(e){var t;j.delete(n),C.delete(n.element),n._originalElement&&(C.delete(n._originalElement),n._originalElement.removeAttribute(\"data-vimeo-initialized\")),n.element&&\"IFRAME\"===n.element.nodeName&&n.element.parentNode&&(n.element.parentNode.parentNode&&n._originalElement&&n._originalElement!==n.element.parentNode?n.element.parentNode.parentNode.removeChild(n.element.parentNode):n.element.parentNode.removeChild(n.element)),n.element&&\"DIV\"===n.element.nodeName&&n.element.parentNode&&(n.element.removeAttribute(\"data-vimeo-initialized\"),(t=n.element.querySelector(\"iframe\"))&&t.parentNode&&(t.parentNode.parentNode&&n._originalElement&&n._originalElement!==t.parentNode?t.parentNode.parentNode.removeChild(t.parentNode):t.parentNode.removeChild(t))),n._window.removeEventListener(\"message\",n._onMessage),A.isEnabled&&A.off(\"fullscreenchange\",n.fullscreenchangeHandler),e()})}},{key:\"getAutopause\",value:function(){return this.get(\"autopause\")}},{key:\"setAutopause\",value:function(e){return this.set(\"autopause\",e)}},{key:\"getBuffered\",value:function(){return this.get(\"buffered\")}},{key:\"getCameraProps\",value:function(){return this.get(\"cameraProps\")}},{key:\"setCameraProps\",value:function(e){return this.set(\"cameraProps\",e)}},{key:\"getChapters\",value:function(){return this.get(\"chapters\")}},{key:\"getCurrentChapter\",value:function(){return this.get(\"currentChapter\")}},{key:\"getColor\",value:function(){return this.get(\"color\")}},{key:\"setColor\",value:function(e){return this.set(\"color\",e)}},{key:\"getCuePoints\",value:function(){return this.get(\"cuePoints\")}},{key:\"getCurrentTime\",value:function(){return this.get(\"currentTime\")}},{key:\"setCurrentTime\",value:function(e){return this.set(\"currentTime\",e)}},{key:\"getDuration\",value:function(){return this.get(\"duration\")}},{key:\"getEnded\",value:function(){return this.get(\"ended\")}},{key:\"getLoop\",value:function(){return this.get(\"loop\")}},{key:\"setLoop\",value:function(e){return this.set(\"loop\",e)}},{key:\"setMuted\",value:function(e){return this.set(\"muted\",e)}},{key:\"getMuted\",value:function(){return this.get(\"muted\")}},{key:\"getPaused\",value:function(){return this.get(\"paused\")}},{key:\"getPlaybackRate\",value:function(){return this.get(\"playbackRate\")}},{key:\"setPlaybackRate\",value:function(e){return this.set(\"playbackRate\",e)}},{key:\"getPlayed\",value:function(){return this.get(\"played\")}},{key:\"getQualities\",value:function(){return this.get(\"qualities\")}},{key:\"getQuality\",value:function(){return this.get(\"quality\")}},{key:\"setQuality\",value:function(e){return this.set(\"quality\",e)}},{key:\"getSeekable\",value:function(){return this.get(\"seekable\")}},{key:\"getSeeking\",value:function(){return this.get(\"seeking\")}},{key:\"getTextTracks\",value:function(){return this.get(\"textTracks\")}},{key:\"getVideoEmbedCode\",value:function(){return this.get(\"videoEmbedCode\")}},{key:\"getVideoId\",value:function(){return this.get(\"videoId\")}},{key:\"getVideoTitle\",value:function(){return this.get(\"videoTitle\")}},{key:\"getVideoWidth\",value:function(){return this.get(\"videoWidth\")}},{key:\"getVideoHeight\",value:function(){return this.get(\"videoHeight\")}},{key:\"getVideoUrl\",value:function(){return this.get(\"videoUrl\")}},{key:\"getVolume\",value:function(){return this.get(\"volume\")}},{key:\"setVolume\",value:function(e){return this.set(\"volume\",e)}}])&&r(e.prototype,t),n&&r(e,n),Player}();return e||(N=function(){for(var e,t=[[\"requestFullscreen\",\"exitFullscreen\",\"fullscreenElement\",\"fullscreenEnabled\",\"fullscreenchange\",\"fullscreenerror\"],[\"webkitRequestFullscreen\",\"webkitExitFullscreen\",\"webkitFullscreenElement\",\"webkitFullscreenEnabled\",\"webkitfullscreenchange\",\"webkitfullscreenerror\"],[\"webkitRequestFullScreen\",\"webkitCancelFullScreen\",\"webkitCurrentFullScreenElement\",\"webkitCancelFullScreen\",\"webkitfullscreenchange\",\"webkitfullscreenerror\"],[\"mozRequestFullScreen\",\"mozCancelFullScreen\",\"mozFullScreenElement\",\"mozFullScreenEnabled\",\"mozfullscreenchange\",\"mozfullscreenerror\"],[\"msRequestFullscreen\",\"msExitFullscreen\",\"msFullscreenElement\",\"msFullscreenEnabled\",\"MSFullscreenChange\",\"MSFullscreenError\"]],n=0,r=t.length,o={};n<r;n++)if((e=t[n])&&e[1]in document){for(n=0;n<e.length;n++)o[t[0][n]]=e[n];return o}return!1}(),F={fullscreenchange:N.fullscreenchange,fullscreenerror:N.fullscreenerror},x={request:function(o){return new Promise(function(e,t){function n(){x.off(\"fullscreenchange\",n),e()}x.on(\"fullscreenchange\",n);var r=(o=o||document.documentElement)[N.requestFullscreen]();r instanceof Promise&&r.then(n).catch(t)})},exit:function(){return new Promise(function(t,e){var n,r;x.isFullscreen?(n=function e(){x.off(\"fullscreenchange\",e),t()},x.on(\"fullscreenchange\",n),(r=document[N.exitFullscreen]())instanceof Promise&&r.then(n).catch(e)):t()})},on:function(e,t){e=F[e];e&&document.addEventListener(e,t)},off:function(e,t){e=F[e];e&&document.removeEventListener(e,t)}},Object.defineProperties(x,{isFullscreen:{get:function(){return Boolean(document[N.fullscreenElement])}},element:{enumerable:!0,get:function(){return document[N.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(document[N.fullscreenEnabled])}}}),A=x,T(),function(e){var r=0<arguments.length&&void 0!==e?e:document;window.VimeoPlayerResizeEmbeds_||(window.VimeoPlayerResizeEmbeds_=!0,window.addEventListener(\"message\",function(e){if(l(e.origin)&&e.data&&\"spacechange\"===e.data.event)for(var t=r.querySelectorAll(\"iframe\"),n=0;n<t.length;n++)if(t[n].contentWindow===e.source){t[n].parentElement.style.paddingBottom=\"\".concat(e.data.data[0].bottom,\"px\");break}}))}()),Player});\n","vimeo/vimeo-wrapper.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'vimeo'\n], function (Player) {\n    'use strict';\n\n    window.Vimeo = window.Vimeo || {\n        'Player': Player\n    };\n});\n"}
}});
